다양한 조건에서 이 계획의 동작을 조사하면 이 계획이 모든 경우에 작동한다는 것을 알 수 있습니다. 첫 번째로 살펴볼 사례는 우리가 해결하고자 했던 문자 중심의 Telnet 연결 사례입니다. 사용자가 200ms마다 TCP에 새 문자를 보내고 연결이 50ms의 소프트웨어 처리를 포함하여 왕복 시간이 있는 이더넷을 통해 이루어진다고 가정해 보겠습니다. 작은 패킷 정체를 방지하는 메커니즘이 없으면 각 문자에 대해 하나의 패킷이 전송되고 최적의 응답이 됩니다. 오버헤드는 4000%이지만 이더넷에서는 허용되는 수준입니다. 초당 2개의 패킷으로 제한되는 기존 타이머 구성표에서는 패킷당 2~3개의 문자가 전송됩니다. 따라서 고대역폭 이더넷에서는 이것이 불필요하더라도 응답이 저하됩니다. 오버헤드는 1500%로 떨어지지만 이더넷에서는 이는 나쁜 절충안입니다. 우리의 방식을 사용하면 사용자가 입력하는 모든 문자는 유휴 연결이 있는 TCP를 찾고 해당 문자는 제어가 없는 경우와 마찬가지로 한 번에 전송됩니다. 사용자에게는 눈에 띄는 지연이 표시되지 않습니다. 따라서 우리의 방식은 무제어 방식과 마찬가지로 성능을 발휘하며 타이머 방식보다 더 나은 응답성을 제공합니다.