   일부 운영 환경에서는 파일 객체의 내용을 읽을 때마다 time_access에 해당하는 내용이 암시적으로 업데이트될 것으로 예상됩니다. NFS 클라이언트가 일반 파일, 디렉터리, 심볼릭 링크 등 파일 객체의 콘텐츠를 캐싱하는 경우 클라이언트는 각 항목으로 서버의 time_access 속성(SETATTR 또는 작은 READ 또는 READDIR 요청을 통해)을 업데이트해서는 안 됩니다. 캐시에서 만족된 읽기입니다. 그 이유는 특히 time_access의 명시적인 SETATTR이 서버의 변경 속성을 변경할 수 있기 때문에 콘텐츠 캐싱의 성능 이점을 상실할 수 있기 때문입니다. 변경 속성이 변경되면 콘텐츠를 캐싱하는 클라이언트는 콘텐츠가 변경되었다고 생각하고 서버에서 수정되지 않은 데이터를 다시 읽습니다. 또한 클라이언트는 수정된 버전의 time_access를 캐시에 유지하도록 권장되지 않습니다. 이는 클라이언트가 결국 나쁜 성능 영향으로 서버에 액세스 시간을 기록해야 하거나 서버의 time_access를 업데이트하지 않음을 의미하기 때문입니다. 결과적으로 동일한 파일의 닫힘과 열기 사이의 액세스 시간을 캐시하는 응용 프로그램이 과거와 현재 사이를 오가는 액세스 시간을 관찰하는 상황이 발생합니다. time_access 속성은 항상 서버에서 만족한 읽기를 통해 파일에 마지막으로 액세스한 시간을 의미합니다. 이런 식으로 클라이언트는 앞으로 진행되는 time_access 변경 사항만 보는 경향이 있습니다.