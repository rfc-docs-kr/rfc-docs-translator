   HTTP/2의 두 가지 특징에도 불구하고 이 디자인은 HTTP/1.x의 단순성을 위해 HTTP/1.x와 호환되는 디자인을 선택합니다. HTTP/2 기반 디자인은 더 복잡한 HTTP/2 클라이언트 라이브러리를 사용하여 구현해야 할 가능성이 높습니다. 이러한 경우 업데이트를 위해 서버 푸시를 사용하는 한 가지 접근 방식은 업데이트 스트림 서버가 각 데이터 업데이트 메시지를 별도의 서버 푸시 항목으로 보내고 클라이언트가 해당 업데이트가 도착할 때 적용하도록 하는 것입니다. HTTP/2 클라이언트 라이브러리는 서버가 리소스를 푸시할 때 클라이언트 애플리케이션에 반드시 알릴 필요는 없습니다. 대신, 라이브러리는 푸시된 리소스를 캐시하고 클라이언트가 해당 URI를 명시적으로 요청할 때만 클라이언트에 전달할 수 있습니다. 또한 HTTP/2 기반 설계에서는 클라이언트와 서버 간의 프록시 관련 문제가 발생할 가능성이 더 높습니다. 서버 푸시는 선택 사항이고 클라이언트와 서버 간의 모든 프록시에 의해 비활성화될 수 있다는 점입니다. 이는 서버 푸시의 의도된 사용에는 문제가 되지 않습니다. 결국 클라이언트는 해당 리소스를 요청하게 되므로 서버 푸시를 비활성화하면 지연만 추가됩니다. 그러나 이는 클라이언트가 요청할지 모르는 리소스에는 서버 푸시가 적합하지 않음을 의미합니다.