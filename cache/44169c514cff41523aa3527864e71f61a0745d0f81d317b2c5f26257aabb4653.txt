   COMMIT의 클라이언트 구현은 좀 더 복잡합니다. 클라이언트 버퍼를 안정적인 저장소에 커밋하려는 데에는 두 가지 이유가 있습니다. 첫 번째는 클라이언트가 버퍼를 재사용하기를 원한다는 것입니다. 이 경우 COMMIT 요청을 통해 버퍼의 오프셋과 개수가 서버로 전송됩니다. 그런 다음 서버는 오프셋 및 개수를 기반으로 캐시된 데이터를 플러시하고 파일과 관련된 모든 메타데이터를 플러시합니다. 그런 다음 플러시 및 쓰기 확인자의 상태를 반환합니다. 클라이언트가 COMMIT를 생성하는 또 다른 이유는 CLOSE에서 수행될 수 있는 것과 같은 전체 파일 플러시를 위한 것입니다. 이 경우 클라이언트는 커밋되지 않은 데이터가 포함된 이 파일에 대한 모든 버퍼를 수집하고 오프셋 0과 개수 0으로 COMMIT 작업을 수행한 다음 해당 버퍼를 모두 해제합니다. 다른 더티 버퍼는 일반적인 방식으로 서버로 전송됩니다.