   클라이언트는 변경 속성과 time_access 속성을 모두 가져오고 변경 속성이 속성이 캐시되었을 때와 동일한 값을 갖는 경우 time_access 이외의 속성은 변경되지 않았다고 가정하여 파일에 대한 캐시된 속성 버전의 유효성을 검사할 수 있습니다. time_access도 가져오는 이유는 변경 내용을 업데이트하는 작업이 time_access를 업데이트하지 않는 환경에서 운영되는 서버가 많기 때문입니다. 예를 들어, POSIX 파일 의미론은 쓰기 시스템 호출[15]에 의해 파일이 수정될 때 액세스 시간을 업데이트하지 않습니다. 따라서 현재 time_access 값을 원하는 클라이언트는 속성 캐시 검증 처리 중에 변경된 값을 가져와서 캐시된 time_access를 업데이트해야 합니다.