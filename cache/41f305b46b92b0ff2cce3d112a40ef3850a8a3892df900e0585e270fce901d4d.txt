정보 흐름은 호스트 그룹이 함께 활동하여 활동을 최적화하도록 맞춤화될 수도 있습니다. 때때로 이는 전체 확인자를 구현할 필요가 없도록 성능이 떨어지는 호스트를 오프로드하기 위해 수행됩니다. 이는 필요한 새 네트워크 코드의 양을 최소화하려는 PC 또는 호스트에 적합할 수 있습니다. 또한 이 방식을 사용하면 중앙 집중식 캐시의 적중률이 더 높다는 전제 하에 호스트 그룹이 다수의 별도 캐시를 유지하는 대신 소수의 캐시를 공유할 수 있습니다. 두 경우 모두 확인자는 해당 서비스를 수행하는 것으로 알려진 하나 이상의 이름 서버에 있는 재귀 서버에 있는 확인자에 대한 프런트 엔드 역할을 하는 스텁 확인자로 대체됩니다.