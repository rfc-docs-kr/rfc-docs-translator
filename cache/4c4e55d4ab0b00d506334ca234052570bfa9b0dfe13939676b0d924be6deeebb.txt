   그 외에 WebSocket은 아무것도 추가하지 않습니다. 기본적으로 이는 웹의 제약 조건을 고려하여 원시 TCP를 스크립트에 최대한 노출시키는 것과 비슷하도록 의도되었습니다. 또한 핸드셰이크가 유효한 HTTP 업그레이드 요청이 되도록 하여 서버가 HTTP 서버와 포트를 공유할 수 있도록 설계되었습니다. 개념적으로 다른 프로토콜을 사용하여 클라이언트-서버 메시징을 설정할 수 있지만 WebSocket의 목적은 HTTP 및 배포된 HTTP 인프라(예: 프록시)와 공존할 수 있고 TCP에 최대한 가까운 비교적 간단한 프로토콜을 제공하는 것입니다. 보안을 고려한 인프라와 함께 사용하고, 사용을 단순화하고 간단한 작업을 단순하게 유지하기 위한 추가 기능(예: 메시지 의미 추가)을 사용합니다.