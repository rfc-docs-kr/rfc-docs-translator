   이 캐싱 접근 방식은 여러 환경에서 네트워크 트래픽을 줄이는 데 합리적으로 효과적입니다. 그러나 존재하지 않는 파일에 대한 쿼리가 많은 환경은 다루지 않습니다. 이러한 "누락"의 경우 클라이언트는 합리적인 애플리케이션 의미 체계를 제공하고 새 디렉터리 항목 생성을 즉시 감지하기 위해 서버에 요청을 보냅니다. 높은 누락 활동의 예로는 소프트웨어 개발 환경에서의 컴파일이 있습니다. NFS의 현재 동작은 이러한 유형의 환경에서 잠재적인 확장성과 광역 공유 효율성을 제한합니다. AFS 및 DFS와 같은 기타 분산 상태 저장 파일 시스템 아키텍처에서는 디렉토리 내용에 상태를 추가하면 하이미스(high-miss) 환경에서 네트워크 트래픽을 크게 줄일 수 있다는 것이 입증되었습니다.