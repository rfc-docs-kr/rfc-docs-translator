- 다음 공리는 IPC "채널", "경로", "경로", "포트" 또는 "소켓"을 역다중화할지 여부와 방법과 관련이 있습니다. 즉, IPC(프로세스 간 통신)를 수행하는 경우 프로세스가 둘 이상의 다른 프로세스와 통신할 수 있는지 여부와 통신할 수 있는 경우 비트 스트림을 구별하는 방법을 결정해야 합니다. (실제로 블록이 아닌 스트림을 선택하는 것도 결정입니다.) 비록 문헌에서 특별히 명시적으로 다루지는 않지만 ARM 공리는 다음과 같은 의미에서 논리적 연결을 통해 IPC를 수행하는 것임이 분명해 보입니다. 운영 체제는 시스템 입력 및 출력 릴을 회전시키기 위해 특정 순간에 특정 물리적 테이프 드라이브가 제대로 작동하는지에 대한 세부 정보로부터 프로세스(일반적으로 작업 또는 "프로그램"으로 간주됨)를 격리하는 것이 유용하다는 것을 알았습니다. , "논리적 테이프 번호"에 대한 참조가 항상 정의된 목적에 맞는 올바른 물리적 드라이브에 도달한다는 관점을 만들었으므로 ARM의 IPC 메커니즘도 프로세스 간에 논리적 연결을 생성합니다. 즉, IPC 주소 지정 메커니즘에는 구문뿐만 아니라 의미도 있습니다.