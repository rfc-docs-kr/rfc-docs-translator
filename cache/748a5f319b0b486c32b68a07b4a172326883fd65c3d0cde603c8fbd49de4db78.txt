   클라이언트 구현은 LOCKU 시 잠긴 범위에 포함된 것보다 더 많은 데이터를 서버에 플러시하여 비표준 방식(예: 레코드 잠금을 전역 세마포로 사용)으로 레코드 잠금을 사용하는 애플리케이션을 수용하도록 선택할 수 있습니다. 여기에는 잠금 해제가 수행되는 파일이 아닌 다른 파일 내의 수정된 데이터가 포함될 수 있습니다. 이러한 경우 클라이언트는 애플리케이션이 보유한 레코드 잠금 범위 내에서만 읽기 및 쓰기가 수행되는 애플리케이션을 방해해서는 안 됩니다. 예를 들어, 애플리케이션은 파일의 단일 바이트를 잠그고 계속해서 해당 단일 바이트를 씁니다. 수정된 모든 데이터를 서버에 플러시하여 LOCKU를 처리하기로 선택한 클라이언트는 관련 없는 잠금 해제에 대한 응답으로 해당 단일 바이트를 유효하게 쓸 수 있습니다. 그러나 기록된 단일 바이트가 위치한 전체 블록을 기록하는 것은 유효하지 않습니다. 왜냐하면 여기에는 잠겨 있지 않고 다른 클라이언트에 의해 잠겨 있을 수 있는 영역이 포함되어 있기 때문입니다. 클라이언트 구현은 수정된 데이터가 있는 파일을 적절한 레코드 잠금이 적용되는 영역에 대해 모든 수정이 수행되는 파일과 레코드 잠금이 적용되지 않는 수정이 있는 파일로 나누어 이 문제를 피할 수 있습니다. 이전 파일 클래스에 대해 수행된 모든 쓰기에는 잠기지 않아 클라이언트에서 수정되지 않은 영역이 포함되어서는 안 됩니다.