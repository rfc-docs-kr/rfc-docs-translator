예를 들어, EBCDIC 기반 파일 시스템을 사용하여 로컬로 저장된 데이터를 HTTP 서버를 통해 인터넷의 클라이언트에 제공하는 정보 서비스를 생각해 보십시오. 작성자가 해당 파일 시스템에 "Laguna Beach"라는 이름의 파일을 생성하면 해당 리소스에 해당하는 "http" URI에는 "Laguna%20Beach"라는 의미 있는 문자열이 포함될 것으로 예상됩니다. 그러나 해당 서버가 지나치게 단순한 원시 옥텟 매핑을 사용하여 URI를 생성하는 경우 결과는 "%D3%81%87%A4%95%81@%C2%85%81%83%88"을 포함하는 URI가 됩니다. . 내부 트랜스코딩 인터페이스는 URI를 생성하기 전에 로컬 이름을 US-ASCII의 상위 집합으로 트랜스코딩하여 이 문제를 해결합니다. 당연히 이러한 인터페이스에서 수신 URI를 적절하게 해석하려면 로컬 이름을 얻기 위해 역방향 트랜스코딩을 적용하기 전에 백분율로 인코딩된 옥텟을 디코딩해야 합니다(예: "%20"에서 SP로).