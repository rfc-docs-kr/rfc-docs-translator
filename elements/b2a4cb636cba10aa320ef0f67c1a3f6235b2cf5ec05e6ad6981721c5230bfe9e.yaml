"hash": |-
  b2a4cb636cba10aa320ef0f67c1a3f6235b2cf5ec05e6ad6981721c5230bfe9e
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     A CDN Provider may deploy a new CDN to run alongside its existing CDN
     as a simple way of migrating its CDN service to a new technology.  In
     addition, a CDN Provider may have a multi-vendor strategy for its CDN
     deployment.  Finally, a CDN Provider may want to deploy a separate
     CDN for a particular CSP or a specific network.  In all these
     circumstances, CDNI benefits the CDN Provider, as it simplifies or
     automates some inter-CDN operations (e.g., migrating the request
     routing function progressively).
"fixed": |-
  A CDN Provider may deploy a new CDN to run alongside its existing CDN as a simple way of migrating its CDN service to a new technology.  In addition, a CDN Provider may have a multi-vendor strategy for its CDN deployment.  Finally, a CDN Provider may want to deploy a separate CDN for a particular CSP or a specific network.  In all these circumstances, CDNI benefits the CDN Provider, as it simplifies or automates some inter-CDN operations (e.g., migrating the request routing function progressively).
"ko": |-
  CDN 공급자는 CDN 서비스를 새로운 기술로 마이그레이션하는 간단한 방법으로 기존 CDN과 함께 실행할 새 CDN을 배포할 수 있습니다. 또한 CDN 공급자는 CDN 배포를 위한 다중 공급업체 전략을 가질 수 있습니다. 마지막으로 CDN 공급자는 특정 CSP 또는 특정 네트워크에 대해 별도의 CDN을 배포하려고 할 수 있습니다. 이러한 모든 상황에서 CDNI는 일부 CDN 간 작업(예: 요청 라우팅 기능을 점진적으로 마이그레이션)을 단순화하거나 자동화하므로 CDN 공급자에게 이점을 제공합니다.
