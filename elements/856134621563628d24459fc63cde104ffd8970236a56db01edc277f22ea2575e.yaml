"hash": |-
  856134621563628d24459fc63cde104ffd8970236a56db01edc277f22ea2575e
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     For all requests to the authorization server utilizing mutual-TLS
     client authentication, the client MUST include the "client_id"
     parameter described in Section 2.2 of OAuth 2.0 [RFC6749].  The
     presence of the "client_id" parameter enables the authorization
     server to easily identify the client independently from the content
     of the certificate.  The authorization server can locate the client
     configuration using the client identifier and check the certificate
     presented in the TLS handshake against the expected credentials for
     that client.  The authorization server MUST enforce the binding
     between client and certificate, as described in either Section 2.1 or
     2.2 below.  If no certificate is presented, or that which is
     presented doesn't match that which is expected for the given
     "client_id", the authorization server returns a normal OAuth 2.0
     error response per Section 5.2 of [RFC6749] with the "invalid_client"
     error code to indicate failed client authentication.
"fixed": |-
  For all requests to the authorization server utilizing mutual-TLS client authentication, the client MUST include the "client_id" parameter described in Section 2.2 of OAuth 2.0 [RFC6749].  The presence of the "client_id" parameter enables the authorization server to easily identify the client independently from the content of the certificate.  The authorization server can locate the client configuration using the client identifier and check the certificate presented in the TLS handshake against the expected credentials for that client.  The authorization server MUST enforce the binding between client and certificate, as described in either Section 2.1 or 2.2 below.  If no certificate is presented, or that which is presented doesn't match that which is expected for the given "client_id", the authorization server returns a normal OAuth 2.0 error response per Section 5.2 of [RFC6749] with the "invalid_client" error code to indicate failed client authentication.
"ko": |-
  상호 TLS 클라이언트 인증을 활용하는 권한 부여 서버에 대한 모든 요청의 경우 클라이언트는 OAuth 2.0 [RFC6749]의 섹션 2.2에 설명된 "client_id" 매개변수를 포함해야 합니다. "client_id" 매개변수가 있으면 인증 서버가 인증서 내용과 별도로 클라이언트를 쉽게 식별할 수 있습니다. 인증 서버는 클라이언트 식별자를 사용하여 클라이언트 구성을 찾고 TLS 핸드셰이크에 제공된 인증서를 해당 클라이언트에 대해 예상되는 자격 증명과 비교하여 확인할 수 있습니다. 인증 서버는 아래 섹션 2.1 또는 2.2에 설명된 대로 클라이언트와 인증서 간의 바인딩을 시행해야 합니다. 인증서가 제시되지 않거나 제시된 인증서가 주어진 "client_id"에 대해 예상되는 것과 일치하지 않는 경우, 인증 서버는 [RFC6749]의 섹션 5.2에 따라 "invalid_client" 오류 코드와 함께 일반 OAuth 2.0 오류 응답을 반환합니다. 실패한 클라이언트 인증을 나타냅니다.
