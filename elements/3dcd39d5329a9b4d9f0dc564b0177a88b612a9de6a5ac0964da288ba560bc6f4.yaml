"hash": |-
  3dcd39d5329a9b4d9f0dc564b0177a88b612a9de6a5ac0964da288ba560bc6f4
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The basic duplicate detection and sequencing algorithm in TCP can be
     defeated, however, if a source TCP endpoint does not have any memory
     of the sequence numbers it last used on a given connection.  For
     example, if the TCP implementation were to start all connections with
     sequence number 0, then upon the host rebooting, a TCP peer might re-
     form an earlier connection (possibly after half-open connection
     resolution) and emit packets with sequence numbers identical to or
     overlapping with packets still in the network, which were emitted on
     an earlier incarnation of the same connection.  In the absence of
     knowledge about the sequence numbers used on a particular connection,
     the TCP specification recommends that the source delay for MSL
     seconds before emitting segments on the connection, to allow time for
     segments from the earlier connection incarnation to drain from the
     system.
"fixed": |-
  The basic duplicate detection and sequencing algorithm in TCP can be defeated, however, if a source TCP endpoint does not have any memory of the sequence numbers it last used on a given connection.  For example, if the TCP implementation were to start all connections with sequence number 0, then upon the host rebooting, a TCP peer might re- form an earlier connection (possibly after half-open connection resolution) and emit packets with sequence numbers identical to or overlapping with packets still in the network, which were emitted on an earlier incarnation of the same connection.  In the absence of knowledge about the sequence numbers used on a particular connection, the TCP specification recommends that the source delay for MSL seconds before emitting segments on the connection, to allow time for segments from the earlier connection incarnation to drain from the system.
"ko": |-
  그러나 TCP의 기본 중복 감지 및 순서 지정 알고리즘은 원본 TCP 끝점이 해당 연결에서 마지막으로 사용한 순서 번호에 대한 메모리가 없는 경우 무효화될 수 있습니다. 예를 들어, TCP 구현이 시퀀스 번호 0으로 모든 연결을 시작하는 경우 호스트가 재부팅되면 TCP 피어는 이전 연결을 재형성하고(아마도 반 개방 연결 해결 후) 다음과 동일한 시퀀스 번호를 가진 패킷을 내보낼 수 있습니다. 또는 동일한 연결의 이전 구현에서 방출된 패킷이 여전히 네트워크에 있는 패킷과 겹칩니다. 특정 연결에 사용되는 시퀀스 번호에 대한 정보가 없는 경우 TCP 사양에서는 이전 연결 구현의 세그먼트가 시스템에서 배출되는 시간을 허용하기 위해 연결에서 세그먼트를 방출하기 전에 MSL 초 동안 소스 지연을 허용하도록 권장합니다.
