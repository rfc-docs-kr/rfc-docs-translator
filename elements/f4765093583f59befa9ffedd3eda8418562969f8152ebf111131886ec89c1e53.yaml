"hash": |-
  f4765093583f59befa9ffedd3eda8418562969f8152ebf111131886ec89c1e53
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     example, an attacker could block access to the port a secure service
     runs on, or attempt to get the peers to negotiate an unauthenticated
     connection.  The fundamental rule is that higher levels must be
     cognizant of what their security requirements are and never transmit
     information over a channel less secure than what they require.  The
     TLS protocol is secure in that any cipher suite offers its promised
     level of security: if you negotiate 3DES with a 1024 bit RSA key
     exchange with a host whose certificate you have verified, you can
     expect to be that secure.
"fixed": |-
  example, an attacker could block access to the port a secure service runs on, or attempt to get the peers to negotiate an unauthenticated connection.  The fundamental rule is that higher levels must be cognizant of what their security requirements are and never transmit information over a channel less secure than what they require.  The TLS protocol is secure in that any cipher suite offers its promised level of security: if you negotiate 3DES with a 1024 bit RSA key exchange with a host whose certificate you have verified, you can expect to be that secure.
"ko": |-
  예를 들어 공격자는 보안 서비스가 실행되는 포트에 대한 액세스를 차단하거나 피어가 인증되지 않은 연결을 협상하도록 시도할 수 있습니다. 기본 규칙은 더 높은 수준이 보안 요구 사항을 인식해야 하며 필요한 것보다 덜 안전한 채널을 통해 정보를 전송하지 않는다는 것입니다. TLS 프로토콜은 모든 암호 제품군이 약속된 보안 수준을 제공한다는 점에서 안전합니다. 인증서를 확인한 호스트와 1024비트 RSA 키 교환을 통해 3DES를 협상하면 그만큼 안전할 것으로 기대할 수 있습니다.
