"hash": |-
  028b82cb6102114bac03b90c3b08013bc6b2d3117528ff9a62704eb8d315550a
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     In some special cases it may be worth providing channel-level
     security directly in the application rather than using IPSEC or
     SSL/TLS.  One such case is remote terminal security.  Characters are
     typically delivered from client to server one character at a time.
     Since SSL/TLS and AH/ESP authenticate and encrypt every packet, this
     can mean a data expansion of 20-fold.  The telnet encryption option
     [ENCOPT] prevents this expansion by foregoing message integrity.
"fixed": |-
  In some special cases it may be worth providing channel-level security directly in the application rather than using IPSEC or SSL/TLS.  One such case is remote terminal security.  Characters are typically delivered from client to server one character at a time. Since SSL/TLS and AH/ESP authenticate and encrypt every packet, this can mean a data expansion of 20-fold.  The telnet encryption option [ENCOPT] prevents this expansion by foregoing message integrity.
"ko": |-
  일부 특별한 경우에는 IPSEC 또는 SSL/TLS를 사용하는 대신 애플리케이션에서 직접 채널 수준 보안을 제공하는 것이 가치가 있을 수 있습니다. 그러한 사례 중 하나가 원격 터미널 보안입니다. 문자는 일반적으로 한 번에 한 문자씩 클라이언트에서 서버로 전달됩니다. SSL/TLS 및 AH/ESP는 모든 패킷을 인증하고 암호화하므로 이는 데이터 확장이 20배 증가할 수 있음을 의미합니다. 텔넷 암호화 옵션 [ENCOPT]은 앞서 말한 메시지 무결성을 통해 이러한 확장을 방지합니다.
