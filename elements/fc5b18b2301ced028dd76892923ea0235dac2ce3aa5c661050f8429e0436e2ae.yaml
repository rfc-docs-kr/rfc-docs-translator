"hash": |-
  fc5b18b2301ced028dd76892923ea0235dac2ce3aa5c661050f8429e0436e2ae
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     An active attacker who can emulate a client or server with extension
     intolerance may cause some implementations to fall back to older
     protocol versions that don't support extensions, which will in turn
     force a fallback to non-encrypt-then-MAC behaviour.  A
     straightforward solution to this problem is to avoid fallback to
     older, less secure protocol versions.  If fallback behaviour is
     unavoidable, then mechanisms to address this issue, which affects all
     capabilities that are negotiated via TLS extensions, are being
     developed by the TLS working group [7].  Anyone concerned about this
     type of attack should consult the TLS working group documents for
     guidance on appropriate defence mechanisms.
"fixed": |-
  An active attacker who can emulate a client or server with extension intolerance may cause some implementations to fall back to older protocol versions that don't support extensions, which will in turn force a fallback to non-encrypt-then-MAC behaviour.  A straightforward solution to this problem is to avoid fallback to older, less secure protocol versions.  If fallback behaviour is unavoidable, then mechanisms to address this issue, which affects all capabilities that are negotiated via TLS extensions, are being developed by the TLS working group [7].  Anyone concerned about this type of attack should consult the TLS working group documents for guidance on appropriate defence mechanisms.
"ko": |-
  확장 불내성을 가진 클라이언트나 서버를 에뮬레이션할 수 있는 능동적인 공격자는 확장을 지원하지 않는 이전 프로토콜 버전으로 일부 구현이 폴백되도록 할 수 있으며, 이는 차례로 비암호화-그 다음 MAC 동작으로 폴백을 강제합니다. 이 문제에 대한 간단한 해결책은 이전의 덜 안전한 프로토콜 버전으로의 폴백을 피하는 것입니다. 폴백 동작이 불가피한 경우 TLS 확장을 통해 협상되는 모든 기능에 영향을 미치는 이 문제를 해결하기 위한 메커니즘이 TLS 작업 그룹[7]에서 개발되고 있습니다. 이러한 유형의 공격에 대해 우려하는 사람은 적절한 방어 메커니즘에 대한 지침을 위해 TLS 작업 그룹 문서를 참조해야 합니다.
