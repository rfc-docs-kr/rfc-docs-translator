"hash": |-
  7a99c579f0289c8f498e52d48a3dac5f170b8f533bffd61f718d6e7c123aacc8
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The figure above shows three intermediaries (A, B, and C) between the
     user agent and origin server.  A request or response message that
     travels the whole chain will pass through four separate connections.
     Some HTTP communication options might apply only to the connection
     with the nearest, non-tunnel neighbor, only to the endpoints of the
     chain, or to all connections along the chain.  Although the diagram
     is linear, each participant might be engaged in multiple,
     simultaneous communications.  For example, B might be receiving
     requests from many clients other than A, and/or forwarding requests
     to servers other than C, at the same time that it is handling A's
     request.  Likewise, later requests might be sent through a different
     path of connections, often based on dynamic configuration for load
     balancing.
"fixed": |-
  The figure above shows three intermediaries (A, B, and C) between the user agent and origin server.  A request or response message that travels the whole chain will pass through four separate connections. Some HTTP communication options might apply only to the connection with the nearest, non-tunnel neighbor, only to the endpoints of the chain, or to all connections along the chain.  Although the diagram is linear, each participant might be engaged in multiple, simultaneous communications.  For example, B might be receiving requests from many clients other than A, and/or forwarding requests to servers other than C, at the same time that it is handling A's request.  Likewise, later requests might be sent through a different path of connections, often based on dynamic configuration for load balancing.
"ko": |-
  위 그림은 사용자 에이전트와 원본 서버 사이의 세 가지 중개자(A, B, C)를 보여줍니다. 전체 체인을 이동하는 요청 또는 응답 메시지는 4개의 개별 연결을 통과합니다. 일부 HTTP 통신 옵션은 가장 가까운 터널이 아닌 이웃과의 연결에만 적용되거나 체인의 끝점에만 적용되거나 체인을 따른 모든 연결에 적용될 수 있습니다. 다이어그램은 선형이지만 각 참가자는 여러 동시 통신에 참여할 수 있습니다. 예를 들어, B는 A 이외의 많은 클라이언트로부터 요청을 수신하거나 A의 요청을 처리하는 동시에 C 이외의 서버로 요청을 전달할 수 있습니다. 마찬가지로 나중에 요청은 로드 밸런싱을 위한 동적 구성을 기반으로 하는 다른 연결 경로를 통해 전송될 수 있습니다.
