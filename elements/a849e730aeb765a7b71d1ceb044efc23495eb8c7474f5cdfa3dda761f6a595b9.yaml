"hash": |-
  a849e730aeb765a7b71d1ceb044efc23495eb8c7474f5cdfa3dda761f6a595b9
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The other three security modes are achieved using DTLS and are
     indicated by the "coaps" scheme and DTLS-secured CoAP default port.
     The result is a security association that can be used to authenticate
     (within the limits of the security model) and, based on this
     authentication, authorize the communication partner.  CoAP itself
     does not provide protocol primitives for authentication or
     authorization; where this is required, it can either be provided by
     communication security (i.e., IPsec or DTLS) or by object security
     (within the payload).  Devices that require authorization for certain
     operations are expected to require one of these two forms of
     security.  Necessarily, where an intermediary is involved,
     communication security only works when that intermediary is part of
     the trust relationships.  CoAP does not provide a way to forward
     different levels of authorization that clients may have with an
     intermediary to further intermediaries or origin servers -- it
     therefore may be required to perform all authorization at the first
     intermediary.
"fixed": |-
  The other three security modes are achieved using DTLS and are indicated by the "coaps" scheme and DTLS-secured CoAP default port. The result is a security association that can be used to authenticate (within the limits of the security model) and, based on this authentication, authorize the communication partner.  CoAP itself does not provide protocol primitives for authentication or authorization; where this is required, it can either be provided by communication security (i.e., IPsec or DTLS) or by object security (within the payload).  Devices that require authorization for certain operations are expected to require one of these two forms of security.  Necessarily, where an intermediary is involved, communication security only works when that intermediary is part of the trust relationships.  CoAP does not provide a way to forward different levels of authorization that clients may have with an intermediary to further intermediaries or origin servers -- it therefore may be required to perform all authorization at the first intermediary.
"ko": |-
  다른 세 가지 보안 모드는 DTLS를 사용하여 구현되며 "coaps" 체계와 DTLS 보안 CoAP 기본 포트로 표시됩니다. 결과적으로 보안 모델의 한계 내에서 인증하고 이 인증을 기반으로 통신 파트너에게 권한을 부여하는 데 사용할 수 있는 보안 연결이 생성됩니다. CoAP 자체는 인증이나 권한 부여를 위한 프로토콜 기본 요소를 제공하지 않습니다. 이것이 필요한 경우 통신 보안(예: IPsec 또는 DTLS) 또는 객체 보안(페이로드 내)을 통해 제공될 수 있습니다. 특정 작업에 대한 인증이 필요한 장치에는 이러한 두 가지 보안 형식 중 하나가 필요할 것으로 예상됩니다. 필연적으로 중개자가 관련된 경우 통신 보안은 해당 중개자가 신뢰 관계의 일부일 때만 작동합니다. CoAP는 클라이언트가 중개자를 통해 가질 수 있는 다양한 수준의 인증을 추가 중개자 또는 원본 서버로 전달하는 방법을 제공하지 않습니다. 따라서 첫 번째 중개자에서 모든 인증을 수행해야 할 수도 있습니다.
