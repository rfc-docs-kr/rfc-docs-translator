"hash": |-
  fd07f301190656aa5f2576b888e32301947485daf146c1d61ba4629e13fc768c
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Implementations that combine update messages (as described above in
     Section 6.1) may prefer to see all path attributes presented in a
     known order.  This permits them to quickly identify sets of
     attributes from different update messages that are semantically
     identical.  To facilitate this, it is a useful optimization to order
     the path attributes according to type code.  This optimization is
     entirely optional.
"fixed": |-
  Implementations that combine update messages (as described above in Section 6.1) may prefer to see all path attributes presented in a known order.  This permits them to quickly identify sets of attributes from different update messages that are semantically identical.  To facilitate this, it is a useful optimization to order the path attributes according to type code.  This optimization is entirely optional.
"ko": |-
  업데이트 메시지를 결합하는 구현(위의 섹션 6.1에서 설명)은 알려진 순서로 표시된 모든 경로 속성을 보는 것을 선호할 수 있습니다. 이를 통해 의미상 동일한 다양한 업데이트 메시지의 속성 세트를 신속하게 식별할 수 있습니다. 이를 용이하게 하기 위해 유형 코드에 따라 경로 속성의 순서를 지정하는 것이 유용한 최적화입니다. 이 최적화는 전적으로 선택 사항입니다.
