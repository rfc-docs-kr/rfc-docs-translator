"hash": |-
  ab94ab88a0c4468f7982f56e58c1ebe2a98ec22a834173c59ef160f465d49ccd
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     We stress that nonce misuse-resistant schemes guarantee that if a
     nonce repeats, then the only security loss is that identical
     plaintexts will produce identical ciphertexts.  Since this can also
     be a concern (as the fact that the same plaintext has been encrypted
     twice is revealed), we do not recommend using a fixed nonce as a
     policy.  In addition, as we show below, better-than-birthday bounds
     are achieved by AES-GCM-SIV when the nonce repetition rate is low.
     Finally, as shown in [BHT18], there is a great security benefit in
     the multiuser/multikey setting when each particular nonce is reused
     by a small number of users only.  We stress that the nonce misuse-
     resistance property is not intended to be coupled with intentional
     nonce reuse; rather, such schemes provide the best possible security
     in the event of nonce reuse.  Due to all of the above, it is
     RECOMMENDED that AES-GCM-SIV nonces be randomly generated.
"fixed": |-
  We stress that nonce misuse-resistant schemes guarantee that if a nonce repeats, then the only security loss is that identical plaintexts will produce identical ciphertexts.  Since this can also be a concern (as the fact that the same plaintext has been encrypted twice is revealed), we do not recommend using a fixed nonce as a policy.  In addition, as we show below, better-than-birthday bounds are achieved by AES-GCM-SIV when the nonce repetition rate is low. Finally, as shown in [BHT18], there is a great security benefit in the multiuser/multikey setting when each particular nonce is reused by a small number of users only.  We stress that the nonce misuse- resistance property is not intended to be coupled with intentional nonce reuse; rather, such schemes provide the best possible security in the event of nonce reuse.  Due to all of the above, it is RECOMMENDED that AES-GCM-SIV nonces be randomly generated.
"ko": |-
  우리는 nonce 오용 방지 방식이 nonce가 반복되는 경우 유일한 보안 손실은 동일한 일반 텍스트가 동일한 암호문을 생성한다는 점을 보장한다는 점을 강조합니다. 이것도 문제가 될 수 있기 때문에(동일한 평문이 두 번 암호화되었다는 사실이 드러나면서), 고정 nonce를 정책으로 사용하는 것은 권장하지 않습니다. 또한 아래에서 볼 수 있듯이 Nonce 반복률이 낮을 때 AES-GCM-SIV는 생일보다 더 나은 경계를 달성합니다. 마지막으로 [BHT18]에 표시된 것처럼 각 특정 nonce가 소수의 사용자에 의해서만 재사용되는 경우 다중 사용자/다중 키 설정에 큰 보안 이점이 있습니다. 우리는 논스 오용 저항 속성이 의도적인 논스 재사용과 결합되도록 의도된 것이 아니라는 점을 강조합니다. 오히려 이러한 방식은 nonce 재사용 시 최상의 보안을 제공합니다. 위의 모든 사항으로 인해 AES-GCM-SIV nonce를 무작위로 생성하는 것이 권장됩니다.
