"hash": |-
  ad5030489a13767d001c7b85f2b933adc5e543751f8e5194f7543c55a7e30120
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     TLS 1.3 provides two extensions for indicating which signature
     algorithms may be used in digital signatures.  The
     "signature_algorithms_cert" extension applies to signatures in
     certificates, and the "signature_algorithms" extension, which
     originally appeared in TLS 1.2, applies to signatures in
     CertificateVerify messages.  The keys found in certificates MUST also
     be of appropriate type for the signature algorithms they are used
     with.  This is a particular issue for RSA keys and PSS signatures, as
     described below.  If no "signature_algorithms_cert" extension is
     present, then the "signature_algorithms" extension also applies to
     signatures appearing in certificates.  Clients which desire the
     server to authenticate itself via a certificate MUST send the
     "signature_algorithms" extension.  If a server is authenticating via
     a certificate and the client has not sent a "signature_algorithms"
     extension, then the server MUST abort the handshake with a
     "missing_extension" alert (see Section 9.2).
"fixed": |-
  TLS 1.3 provides two extensions for indicating which signature algorithms may be used in digital signatures.  The "signature_algorithms_cert" extension applies to signatures in certificates, and the "signature_algorithms" extension, which originally appeared in TLS 1.2, applies to signatures in CertificateVerify messages.  The keys found in certificates MUST also be of appropriate type for the signature algorithms they are used with.  This is a particular issue for RSA keys and PSS signatures, as described below.  If no "signature_algorithms_cert" extension is present, then the "signature_algorithms" extension also applies to signatures appearing in certificates.  Clients which desire the server to authenticate itself via a certificate MUST send the "signature_algorithms" extension.  If a server is authenticating via a certificate and the client has not sent a "signature_algorithms" extension, then the server MUST abort the handshake with a "missing_extension" alert (see Section 9.2).
"ko": |-
  TLS 1.3은 디지털 서명에 사용할 수 있는 서명 알고리즘을 나타내는 두 가지 확장을 제공합니다. "signature_algorithms_cert" 확장은 인증서의 서명에 적용되며 원래 TLS 1.2에 나타난 "signature_algorithms" 확장은 CertificateVerify 메시지의 서명에 적용됩니다. 인증서에 있는 키는 함께 사용되는 서명 알고리즘에 적합한 유형이어야 합니다. 이는 아래에 설명된 대로 RSA 키 및 PSS 서명에 대한 특정 문제입니다. "signature_algorithms_cert" 확장이 없으면 "signature_algorithms" 확장은 인증서에 나타나는 서명에도 적용됩니다. 서버가 인증서를 통해 자신을 인증하기를 원하는 클라이언트는 "signature_algorithms" 확장을 보내야 합니다. 서버가 인증서를 통해 인증하고 클라이언트가 "signature_algorithms" 확장을 전송하지 않은 경우 서버는 "missing_extension" 경고와 함께 핸드셰이크를 중단해야 합니다(섹션 9.2 참조).
