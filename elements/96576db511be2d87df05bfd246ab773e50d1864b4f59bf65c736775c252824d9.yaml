"hash": |-
  96576db511be2d87df05bfd246ab773e50d1864b4f59bf65c736775c252824d9
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The ability for a newcomer peer to detect the size of the content
     depends heavily on the concept of peak hashes.  The concept of peak
     hashes depends on the concepts of filled and incomplete nodes.
     Recall that when constructing the binary trees for content
     verification and addressing the base of the tree may have more leaves
     than the number of chunks in the content.  In the Merkle hash tree,
     these leaves were assigned empty all-zero hashes to be able to
     calculate the higher-level hashes.  A filled node is now defined as a
     node that corresponds to an interval of leaves that consists only of
"fixed": |-
  The ability for a newcomer peer to detect the size of the content depends heavily on the concept of peak hashes.  The concept of peak hashes depends on the concepts of filled and incomplete nodes. Recall that when constructing the binary trees for content verification and addressing the base of the tree may have more leaves than the number of chunks in the content.  In the Merkle hash tree, these leaves were assigned empty all-zero hashes to be able to calculate the higher-level hashes.  A filled node is now defined as a node that corresponds to an interval of leaves that consists only of
"ko": |-
  신규 피어가 콘텐츠의 크기를 감지하는 능력은 최대 해시 개념에 크게 좌우됩니다. 피크 해시의 개념은 채워진 노드와 불완전한 노드의 개념에 따라 달라집니다. 콘텐츠 확인을 위해 이진 트리를 구성하고 트리의 기본 주소를 지정할 때 콘텐츠의 청크 수보다 더 많은 리프가 있을 수 있다는 점을 기억하세요. Merkle 해시 트리에서 이러한 잎에는 상위 수준 해시를 계산할 수 있도록 모두 0인 빈 해시가 할당되었습니다. 채워진 노드는 이제 다음으로만 구성된 잎의 간격에 해당하는 노드로 정의됩니다.
