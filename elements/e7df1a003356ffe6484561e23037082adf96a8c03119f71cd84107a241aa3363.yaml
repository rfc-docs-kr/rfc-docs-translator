"hash": |-
  e7df1a003356ffe6484561e23037082adf96a8c03119f71cd84107a241aa3363
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The client caches this ticket along with the master secret and other
     parameters associated with the current session.  When the client
     wishes to resume the session, it includes the ticket in the
     SessionTicket extension within the ClientHello message.  Appendix A
     provides a detailed description of the encoding of the extension and
     changes from RFC 4507.  The server then decrypts the received ticket,
     verifies the ticket's validity, retrieves the session state from the
     contents of the ticket, and uses this state to resume the session.
     The interaction with the TLS Session ID is described in Section 3.4.
     If the server successfully verifies the client's ticket, then it may
     renew the ticket by including a NewSessionTicket handshake message
     after the ServerHello.
"fixed": |-
  The client caches this ticket along with the master secret and other parameters associated with the current session.  When the client wishes to resume the session, it includes the ticket in the SessionTicket extension within the ClientHello message.  Appendix A provides a detailed description of the encoding of the extension and changes from RFC 4507.  The server then decrypts the received ticket, verifies the ticket's validity, retrieves the session state from the contents of the ticket, and uses this state to resume the session. The interaction with the TLS Session ID is described in Section 3.4. If the server successfully verifies the client's ticket, then it may renew the ticket by including a NewSessionTicket handshake message after the ServerHello.
"ko": |-
  클라이언트는 현재 세션과 관련된 마스터 비밀 및 기타 매개 변수와 함께 이 티켓을 캐시합니다. 클라이언트가 세션을 재개하려고 하면 ClientHello 메시지 내의 SessionTicket 확장에 티켓이 포함됩니다. 부록 A에서는 RFC 4507의 확장 및 변경 사항 인코딩에 대한 자세한 설명을 제공합니다. 그런 다음 서버는 수신된 티켓을 해독하고 티켓의 유효성을 확인한 다음 티켓 내용에서 세션 상태를 검색하고 이 상태를 사용하여 세션을 재개합니다. . TLS 세션 ID와의 상호 작용은 섹션 3.4에 설명되어 있습니다. 서버가 클라이언트의 티켓을 성공적으로 확인하면 ServerHello 뒤에 NewSessionTicket 핸드셰이크 메시지를 포함시켜 티켓을 갱신할 수 있습니다.
