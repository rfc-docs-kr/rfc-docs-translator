"hash": |-
  ce6b1fb8ec3bdcbc6c01b69ba61fcd5556a53a59261d505b41d538dc8514003e
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The current method for protecting content integrity in BitTorrent
     [BITTORRENT] is not suited for streaming.  It involves providing
     clients with the hashes of the content's chunks before the download
     commences by means of metadata files (called .torrent files in
     BitTorrent.)  However, when chunks are small, as in the current UDP
     encapsulation of PPSPP, this implies having to download a large
     number of hashes before content download can begin.  This, in turn,
     increases time-till-playback for end users, making this method
     unsuited for streaming.
"fixed": |-
  The current method for protecting content integrity in BitTorrent [BITTORRENT] is not suited for streaming.  It involves providing clients with the hashes of the content's chunks before the download commences by means of metadata files (called .torrent files in BitTorrent.)  However, when chunks are small, as in the current UDP encapsulation of PPSPP, this implies having to download a large number of hashes before content download can begin.  This, in turn, increases time-till-playback for end users, making this method unsuited for streaming.
"ko": |-
  BitTorrent [BITTORRENT]에서 콘텐츠 무결성을 보호하기 위한 현재 방법은 스트리밍에 적합하지 않습니다. 여기에는 다운로드가 시작되기 전에 메타데이터 파일(BitTorrent에서는 .torrent 파일이라고 함)을 통해 콘텐츠 청크의 해시를 클라이언트에 제공하는 작업이 포함됩니다. 그러나 현재 PPSPP의 UDP 캡슐화에서와 같이 청크가 작은 경우 다운로드해야 함을 의미합니다. 콘텐츠 다운로드가 시작되기 전에 많은 수의 해시가 필요합니다. 결과적으로 최종 사용자의 재생 시간이 늘어나 이 방법은 스트리밍에 적합하지 않게 됩니다.
