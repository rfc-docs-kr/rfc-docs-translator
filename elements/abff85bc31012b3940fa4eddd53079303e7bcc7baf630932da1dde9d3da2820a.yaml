"hash": |-
  abff85bc31012b3940fa4eddd53079303e7bcc7baf630932da1dde9d3da2820a
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     TCP uses two window mechanisms, a primary mechanism for reordering
     and congestion control (which uses a space of 32 bits), and a
     secondary mechanism that scales this window [23][35].  The valid
     advertised receive window is a fraction, not to exceed approximately
     half, of this space, or ~2 billion (2 * 10^9, i.e., 2E9 or 2 U.S.
     billion).  Under typical configurations, the majority of TCP
     connections open to a very small fraction of this space, e.g.,
     10,000-60,000(approximately 5-100 segments).  This is because the
     advertised receive window typically matches the receive socket buffer
     size.  It is recommended that this buffer be tuned to match the needs
     of the connection, either manually or by automatic external means
     [38].
"fixed": |-
  TCP uses two window mechanisms, a primary mechanism for reordering and congestion control (which uses a space of 32 bits), and a secondary mechanism that scales this window [23][35].  The valid advertised receive window is a fraction, not to exceed approximately half, of this space, or ~2 billion (2 * 10^9, i.e., 2E9 or 2 U.S. billion).  Under typical configurations, the majority of TCP connections open to a very small fraction of this space, e.g., 10,000-60,000(approximately 5-100 segments).  This is because the advertised receive window typically matches the receive socket buffer size.  It is recommended that this buffer be tuned to match the needs of the connection, either manually or by automatic external means [38].
"ko": |-
  TCP는 재정렬 및 ​​혼잡 제어(32비트 공간 사용)를 위한 기본 메커니즘과 이 창을 확장하는 보조 메커니즘의 두 가지 창 메커니즘을 사용합니다[23][35]. 유효한 광고 수신 창은 이 공간의 약 절반, 즉 ~20억(2 * 10^9, 즉 2E9 또는 2U.S. 10억)을 초과하지 않는 일부입니다. 일반적인 구성에서 대부분의 TCP 연결은 이 공간의 아주 작은 부분(예: 10,000-60,000(약 5-100개 세그먼트))에 열려 있습니다. 이는 알려진 수신 창이 일반적으로 수신 소켓 버퍼 크기와 일치하기 때문입니다. 이 버퍼는 수동으로 또는 자동 외부 수단을 통해 연결 요구 사항에 맞게 조정하는 것이 좋습니다[38].
