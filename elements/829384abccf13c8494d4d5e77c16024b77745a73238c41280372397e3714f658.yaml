"hash": |-
  829384abccf13c8494d4d5e77c16024b77745a73238c41280372397e3714f658
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
        Tutorial: Penetration testing evaluates the relative vulnerability
        of a system to attacks and identifies methods of gaining access to
        a system by using tools and techniques that are available to
        adversaries. Testing may be performed under various constraints
        and conditions, including a specified level of knowledge of the
        system design and implementation. For a TCSEC evaluation, testers
        are assumed to have all system design and implementation
        documentation, including source code, manuals, and circuit
        diagrams, and to work under no greater constraints than those
        applied to ordinary users.
"fixed": |-
  - Tutorial: Penetration testing evaluates the relative vulnerability of a system to attacks and identifies methods of gaining access to a system by using tools and techniques that are available to adversaries. Testing may be performed under various constraints and conditions, including a specified level of knowledge of the system design and implementation. For a TCSEC evaluation, testers are assumed to have all system design and implementation documentation, including source code, manuals, and circuit diagrams, and to work under no greater constraints than those applied to ordinary users.
"ko": |-
  - 튜토리얼: 침투 테스트는 공격에 대한 시스템의 상대적 취약성을 평가하고 적이 사용할 수 있는 도구와 기술을 사용하여 시스템에 대한 액세스 권한을 얻는 방법을 식별합니다. 테스트는 시스템 설계 및 구현에 대한 특정 수준의 지식을 포함하여 다양한 제약 조건 및 조건에서 수행될 수 있습니다. TCSEC 평가를 위해 테스터는 소스 코드, 매뉴얼, 회로도를 포함한 모든 시스템 설계 및 구현 문서를 보유하고 있으며 일반 사용자에게 적용되는 것보다 더 큰 제약 조건 하에서 작업하지 않는 것으로 가정됩니다.
