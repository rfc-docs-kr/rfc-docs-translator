"hash": |-
  a5e3d8ac27f4f1e9f3f6b6bc3e78f8bf405fb2abae8cefd3563c86d5be2174c3
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The combination of these facts means that it's possible to "convert"
     values between the two by reversing the order of the bytes in a
     16-byte string.  The differing interpretations of bit order takes
     care of reversing the bits within each byte, and then reversing the
     bytes does the rest.  This may have a practical benefit for
     implementations that wish to implement both GHASH and POLYVAL.
"fixed": |-
  The combination of these facts means that it's possible to "convert" values between the two by reversing the order of the bytes in a 16-byte string.  The differing interpretations of bit order takes care of reversing the bits within each byte, and then reversing the bytes does the rest.  This may have a practical benefit for implementations that wish to implement both GHASH and POLYVAL.
"ko": |-
  이러한 사실의 조합은 16바이트 문자열에서 바이트 순서를 반대로 하여 둘 사이의 값을 "변환"하는 것이 가능하다는 것을 의미합니다. 비트 순서에 대한 다양한 해석은 각 바이트 내의 비트 반전을 처리하고 바이트 반전이 나머지 작업을 수행합니다. 이는 GHASH와 POLYVAL을 모두 구현하려는 구현에 실질적인 이점이 있을 수 있습니다.
