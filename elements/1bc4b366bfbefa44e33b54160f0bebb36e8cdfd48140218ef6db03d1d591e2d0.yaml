"hash": |-
  1bc4b366bfbefa44e33b54160f0bebb36e8cdfd48140218ef6db03d1d591e2d0
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Proactive negotiation is advantageous when the algorithm for
     selecting from among the available representations is difficult to
     describe to a user agent, or when the server desires to send its
     "best guess" to the user agent along with the first response (when
     that "best guess" is good enough for the user, this avoids the round-
     trip delay of a subsequent request).  In order to improve the
     server's guess, a user agent MAY send request header fields that
     describe its preferences.
"fixed": |-
  Proactive negotiation is advantageous when the algorithm for selecting from among the available representations is difficult to describe to a user agent, or when the server desires to send its "best guess" to the user agent along with the first response (when that "best guess" is good enough for the user, this avoids the round- trip delay of a subsequent request).  In order to improve the server's guess, a user agent MAY send request header fields that describe its preferences.
"ko": |-
  사용 가능한 표현 중에서 선택하기 위한 알고리즘이 사용자 에이전트에 설명하기 어려울 때 또는 서버가 첫 번째 응답과 함께 "최상의 추측"을 사용자 에이전트에 보내려고 할 때("최선의 추측"이 있을 때) 사전 협상이 유리합니다. "는 사용자에게 충분하므로 후속 요청의 왕복 지연을 방지합니다.) 서버의 추측을 향상시키기 위해 사용자 에이전트는 자신의 기본 설정을 설명하는 요청 헤더 필드를 보낼 수 있습니다.
