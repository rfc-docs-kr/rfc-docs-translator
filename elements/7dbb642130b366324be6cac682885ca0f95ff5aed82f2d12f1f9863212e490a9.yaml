"hash": |-
  7dbb642130b366324be6cac682885ca0f95ff5aed82f2d12f1f9863212e490a9
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     A stateless proxy does not contain a client or server transaction.
     The transaction exists between the UA or stateful proxy on one side,
     and the UA or stateful proxy on the other side.  As far as SIP
     transactions are concerned, stateless proxies are effectively
     transparent.  The purpose of the client transaction is to receive a
     request from the element in which the client is embedded (call this
     element the "Transaction User" or TU; it can be a UA or a stateful
     proxy), and reliably deliver the request to a server transaction.
"fixed": |-
  A stateless proxy does not contain a client or server transaction. The transaction exists between the UA or stateful proxy on one side, and the UA or stateful proxy on the other side.  As far as SIP transactions are concerned, stateless proxies are effectively transparent.  The purpose of the client transaction is to receive a request from the element in which the client is embedded (call this element the "Transaction User" or TU; it can be a UA or a stateful proxy), and reliably deliver the request to a server transaction.
"ko": |-
  상태 비저장 프록시에는 클라이언트 또는 서버 트랜잭션이 포함되어 있지 않습니다. 트랜잭션은 한쪽의 UA 또는 상태 저장 프록시와 다른 쪽의 UA 또는 상태 저장 프록시 사이에 존재합니다. SIP 트랜잭션과 관련하여 무상태 프록시는 사실상 투명합니다. 클라이언트 트랜잭션의 목적은 클라이언트가 포함된 요소(이 요소를 "트랜잭션 사용자" 또는 TU라고 부르며 UA 또는 상태 저장 프록시일 수 있음)로부터 요청을 수신하고 요청을 안정적으로 전달하는 것입니다. 서버 거래.
