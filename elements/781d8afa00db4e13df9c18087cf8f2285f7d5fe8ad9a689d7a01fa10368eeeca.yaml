"hash": |-
  781d8afa00db4e13df9c18087cf8f2285f7d5fe8ad9a689d7a01fa10368eeeca
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     CoAP supports the basic methods of GET, POST, PUT, and DELETE, which
     are easily mapped to HTTP.  They have the same properties of safe
     (only retrieval) and idempotent (you can invoke it multiple times
     with the same effects) as HTTP (see Section 9.1 of [RFC2616]).  The
     GET method is safe; therefore, it MUST NOT take any other action on a
     resource other than retrieval.  The GET, PUT, and DELETE methods MUST
     be performed in such a way that they are idempotent.  POST is not
     idempotent, because its effect is determined by the origin server and
     dependent on the target resource; it usually results in a new
     resource being created or the target resource being updated.
"fixed": |-
  CoAP supports the basic methods of GET, POST, PUT, and DELETE, which are easily mapped to HTTP.  They have the same properties of safe (only retrieval) and idempotent (you can invoke it multiple times with the same effects) as HTTP (see Section 9.1 of [RFC2616]).  The GET method is safe; therefore, it MUST NOT take any other action on a resource other than retrieval.  The GET, PUT, and DELETE methods MUST be performed in such a way that they are idempotent.  POST is not idempotent, because its effect is determined by the origin server and dependent on the target resource; it usually results in a new resource being created or the target resource being updated.
"ko": |-
  CoAP는 HTTP에 쉽게 매핑되는 GET, POST, PUT, DELETE의 기본 메서드를 지원합니다. 이는 HTTP와 동일한 안전(검색만) 및 멱등성(동일한 효과로 여러 번 호출할 수 있음) 속성을 갖습니다([RFC2616]의 섹션 9.1 참조). GET 방법은 안전합니다. 따라서 검색 이외의 리소스에 대한 다른 작업을 수행해서는 안 됩니다. GET, PUT 및 DELETE 메소드는 멱등성이 있는 방식으로 수행되어야 합니다. POST의 효과는 원본 서버에 의해 결정되고 대상 리소스에 따라 달라지기 때문에 멱등성이 아닙니다. 일반적으로 새 리소스가 생성되거나 대상 리소스가 업데이트됩니다.
