"hash": |-
  4d4da12ba33f46dc9a058466e260b0bdf597942f9a068f92928ab2548f8196eb
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     URI characters provide identifying data for each of the URI
     components, serving as an external interface for identification
     between systems.  Although the presence and nature of the URI
     production interface is hidden from clients that use its URIs (and is
     thus beyond the scope of the interoperability requirements defined by
     this specification), it is a frequent source of confusion and errors
     in the interpretation of URI character issues.  Implementers have to
     be aware that there are multiple character encodings involved in the
"fixed": |-
  URI characters provide identifying data for each of the URI components, serving as an external interface for identification between systems.  Although the presence and nature of the URI production interface is hidden from clients that use its URIs (and is thus beyond the scope of the interoperability requirements defined by this specification), it is a frequent source of confusion and errors in the interpretation of URI character issues.  Implementers have to be aware that there are multiple character encodings involved in the
"ko": |-
  URI 문자는 각 URI 구성 요소에 대한 식별 데이터를 제공하여 시스템 간 식별을 위한 외부 인터페이스 역할을 합니다. URI 생성 인터페이스의 존재와 성격은 해당 URI를 사용하는 클라이언트에게 숨겨지지만(따라서 이 사양에서 정의한 상호 운용성 요구 사항의 범위를 벗어남) URI 문자 해석에 혼란과 오류가 자주 발생합니다. 문제. 구현자는 다음과 관련된 여러 문자 인코딩이 있음을 인식해야 합니다.
