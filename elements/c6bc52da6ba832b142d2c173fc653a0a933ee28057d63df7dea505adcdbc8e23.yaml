"hash": |-
  c6bc52da6ba832b142d2c173fc653a0a933ee28057d63df7dea505adcdbc8e23
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
        Having only one connection in use at any time avoids confusion
        regarding on which connection any server-to-client requests shall
        be sent.  Using a single connection for multiple RTSP sessions
        also saves complexity by enabling the server to maintain less
        state about its connection resources on the server.  Not using
        more than one connection at a time for a particular RTSP session
        avoids wasting connection resources and allows the server to track
        only the most recently used client-to-server connection for each
        RTSP session as being the currently valid server-to-client
        connection.
"fixed": |-
  - Having only one connection in use at any time avoids confusion regarding on which connection any server-to-client requests shall be sent.  Using a single connection for multiple RTSP sessions also saves complexity by enabling the server to maintain less state about its connection resources on the server.  Not using more than one connection at a time for a particular RTSP session avoids wasting connection resources and allows the server to track only the most recently used client-to-server connection for each RTSP session as being the currently valid server-to-client connection.
"ko": |-
  - 언제든지 하나의 연결만 사용하면 서버-클라이언트 요청이 어떤 연결로 전송되어야 하는지에 대한 혼란을 피할 수 있습니다. 여러 RTSP 세션에 대해 단일 연결을 사용하면 서버가 서버의 연결 리소스에 대해 더 적은 상태를 유지할 수 있으므로 복잡성이 줄어듭니다. 특정 RTSP 세션에 대해 한 번에 두 개 이상의 연결을 사용하지 않으면 연결 리소스 낭비를 방지하고 서버가 각 RTSP 세션에 대해 가장 최근에 사용된 클라이언트-서버 연결만 현재 유효한 서버-클라이언트 연결로 추적할 수 있습니다. .
