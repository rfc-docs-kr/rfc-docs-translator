"hash": |-
  9f56e7e96eb50a5e409dde3bdd8d2ce03864df661ac81b90de2144eeb3cf98e2
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Security considerations:  This format may carry any type of
        parameters.  Some can have security requirements, like privacy,
        confidentiality, or integrity requirements.  The format has no
        built-in security protection.  For the usage, the transport can be
        protected between server and client using TLS.  However, care must
        be taken to consider if the proxies are also trusted with the
        parameters in case hop-by-hop security is used.  If stored as a
        file in a file system, the necessary precautions need to be taken
        in relation to the parameter requirements including object
        security such as S/MIME [RFC5751].
"fixed": |-
  Security considerations:  This format may carry any type of parameters.  Some can have security requirements, like privacy, confidentiality, or integrity requirements.  The format has no built-in security protection.  For the usage, the transport can be protected between server and client using TLS.  However, care must be taken to consider if the proxies are also trusted with the parameters in case hop-by-hop security is used.  If stored as a file in a file system, the necessary precautions need to be taken in relation to the parameter requirements including object security such as S/MIME [RFC5751].
"ko": |-
  보안 고려사항: 이 형식은 모든 유형의 매개변수를 전달할 수 있습니다. 일부에는 개인 정보 보호, 기밀성 또는 무결성 요구 사항과 같은 보안 요구 사항이 있을 수 있습니다. 이 형식에는 보안 보호 기능이 내장되어 있지 않습니다. 사용을 위해 TLS를 사용하여 서버와 클라이언트 간의 전송을 보호할 수 있습니다. 그러나 hop-by-hop 보안이 사용되는 경우 매개변수를 사용하여 프록시도 신뢰할 수 있는지 고려해야 합니다. 파일 시스템에 파일로 저장하는 경우 S/MIME [RFC5751]과 같은 객체 보안을 포함한 매개변수 요구 사항과 관련하여 필요한 예방 조치를 취해야 합니다.
