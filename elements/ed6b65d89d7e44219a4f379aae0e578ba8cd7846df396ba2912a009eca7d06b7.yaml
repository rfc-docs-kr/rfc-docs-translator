"hash": |-
  ed6b65d89d7e44219a4f379aae0e578ba8cd7846df396ba2912a009eca7d06b7
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     We envision communication normally taking place using specifications
     to and from ports and rendezvous at the sender.  For instance, the
     TIP would probably send to other Hosts using this method and would
     certainly receive from other Host until the TIP asks for it.  In this
     "normal" method a monitor could even look at the bit count in the
     arriving IN-message, use that as an allocation and then simulate an
     OUT-message of the exact correct length.
"fixed": |-
  We envision communication normally taking place using specifications to and from ports and rendezvous at the sender.  For instance, the TIP would probably send to other Hosts using this method and would certainly receive from other Host until the TIP asks for it.  In this "normal" method a monitor could even look at the bit count in the arriving IN-message, use that as an allocation and then simulate an OUT-message of the exact correct length.
"ko": |-
  우리는 포트와 발신자의 랑데부 사이의 사양을 사용하여 일반적으로 통신이 발생하는 것을 상상합니다. 예를 들어, TIP는 아마도 이 방법을 사용하여 다른 호스트로 전송하고 TIP가 요청할 때까지 다른 호스트로부터 확실히 수신할 것입니다. 이 "일반적인" 방법에서는 모니터가 도착하는 IN 메시지의 비트 수를 보고 이를 할당으로 사용한 다음 정확한 길이의 OUT 메시지를 시뮬레이션할 수도 있습니다.
