"hash": |-
  a5002e7929c42c8a4baf57638af720095a45e68b1474d9b53bb300b6ae9f6e06
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
        form of path MTU discovery [RFC4821]; this should generally be
        unnecessary in realistic use cases for CoAP, however.)  A more
        important kind of fragmentation in many constrained networks is
        that on the adaptation layer (e.g., 6LoWPAN L2 packets are limited
        to 127 bytes including various overheads); this may motivate
        implementations to be frugal in their packet sizes and to move to
        block-wise transfers [BLOCK] when approaching three-digit message
        sizes.
"fixed": |-
  - form of path MTU discovery [RFC4821]; this should generally be unnecessary in realistic use cases for CoAP, however.)  A more important kind of fragmentation in many constrained networks is that on the adaptation layer (e.g., 6LoWPAN L2 packets are limited to 127 bytes including various overheads); this may motivate implementations to be frugal in their packet sizes and to move to block-wise transfers [BLOCK] when approaching three-digit message sizes.
"ko": |-
  - 경로 MTU 검색 형식 [RFC4821] 그러나 이는 일반적으로 CoAP의 현실적인 사용 사례에서는 불필요합니다. 제한된 많은 네트워크에서 더 중요한 종류의 조각화는 적응 계층에서의 조각화입니다(예: 6LoWPAN L2 패킷은 다양한 오버헤드를 포함하여 127바이트로 제한됩니다). 이는 구현이 패킷 크기를 절약하고 3자리 메시지 크기에 접근할 때 블록 단위 전송[BLOCK]으로 이동하도록 동기를 부여할 수 있습니다.
