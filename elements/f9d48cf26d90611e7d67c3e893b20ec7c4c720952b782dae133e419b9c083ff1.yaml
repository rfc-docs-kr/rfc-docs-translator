"hash": |-
  f9d48cf26d90611e7d67c3e893b20ec7c4c720952b782dae133e419b9c083ff1
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     this shortening via the extractor is not strictly necessary since
     HMAC is defined to work with long keys too).  Note, however, that if
     the IKM is a Diffie-Hellman value, as in the case of TLS with Diffie-
     Hellman, then the extract part SHOULD NOT be skipped.  Doing so would
     result in using the Diffie-Hellman value g^{xy} itself (which is NOT
     a uniformly random or pseudorandom string) as the key PRK for HMAC.
     Instead, HKDF should apply the extract step to g^{xy} (preferably
     with a salt value) and use the resultant PRK as a key to HMAC in the
     expansion part.
"fixed": |-
  this shortening via the extractor is not strictly necessary since HMAC is defined to work with long keys too).  Note, however, that if the IKM is a Diffie-Hellman value, as in the case of TLS with Diffie- Hellman, then the extract part SHOULD NOT be skipped.  Doing so would result in using the Diffie-Hellman value g^{xy} itself (which is NOT a uniformly random or pseudorandom string) as the key PRK for HMAC. Instead, HKDF should apply the extract step to g^{xy} (preferably with a salt value) and use the resultant PRK as a key to HMAC in the expansion part.
"ko": |-
  HMAC는 긴 키에서도 작동하도록 정의되어 있으므로 추출기를 통한 이러한 단축은 꼭 필요한 것은 아닙니다. 그러나 Diffie-Hellman을 사용하는 TLS의 경우처럼 IKM이 Diffie-Hellman 값인 경우 추출 부분을 건너뛰어서는 안 됩니다. 그렇게 하면 Diffie-Hellman 값 g^{xy} 자체(균일한 무작위 또는 의사 난수 문자열이 아님)가 HMAC의 키 PRK로 사용됩니다. 대신, HKDF는 추출 단계를 g^{xy}(바람직하게는 솔트 값 사용)에 적용하고 결과 PRK를 확장 부분에서 HMAC의 키로 사용해야 합니다.
