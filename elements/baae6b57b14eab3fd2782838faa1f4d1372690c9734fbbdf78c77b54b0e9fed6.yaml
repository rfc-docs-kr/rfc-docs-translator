"hash": |-
  baae6b57b14eab3fd2782838faa1f4d1372690c9734fbbdf78c77b54b0e9fed6
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Note that both the transaction corresponding to the original request
     and the CANCEL transaction will complete independently.  However, a
     UAC canceling a request cannot rely on receiving a 487 (Request
     Terminated) response for the original request, as an RFC 2543-
     compliant UAS will not generate such a response.  If there is no
     final response for the original request in 64*T1 seconds (T1 is
"fixed": |-
  Note that both the transaction corresponding to the original request and the CANCEL transaction will complete independently.  However, a UAC canceling a request cannot rely on receiving a 487 (Request Terminated) response for the original request, as an RFC 2543- compliant UAS will not generate such a response.  If there is no final response for the original request in 64*T1 seconds (T1 is
"ko": |-
  원래 요청에 해당하는 트랜잭션과 CANCEL 트랜잭션은 모두 독립적으로 완료됩니다. 그러나 요청을 취소하는 UAC는 원래 요청에 대한 487(요청 종료됨) 응답 수신에 의존할 수 없습니다. RFC 2543 호환 UAS는 그러한 응답을 생성하지 않기 때문입니다. 64*T1초 내에 원래 요청에 대한 최종 응답이 없는 경우(T1은
