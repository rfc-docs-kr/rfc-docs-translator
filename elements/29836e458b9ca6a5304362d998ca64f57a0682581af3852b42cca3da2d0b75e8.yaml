"hash": |-
  29836e458b9ca6a5304362d998ca64f57a0682581af3852b42cca3da2d0b75e8
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     As described in Section 3.7, intermediaries can serve a variety of
     roles in the processing of HTTP requests and responses.  Some
     intermediaries are used to improve performance or availability.
     Others are used for access control or to filter content.  Since an
     HTTP stream has characteristics similar to a pipe-and-filter
     architecture, there are no inherent limits to the extent an
     intermediary can enhance (or interfere) with either direction of the
     stream.
"fixed": |-
  As described in Section 3.7, intermediaries can serve a variety of roles in the processing of HTTP requests and responses.  Some intermediaries are used to improve performance or availability. Others are used for access control or to filter content.  Since an HTTP stream has characteristics similar to a pipe-and-filter architecture, there are no inherent limits to the extent an intermediary can enhance (or interfere) with either direction of the stream.
"ko": |-
  섹션 3.7에 설명된 대로 중개자는 HTTP 요청 및 응답 처리에서 다양한 역할을 수행할 수 있습니다. 일부 중개자는 성능이나 가용성을 향상시키는 데 사용됩니다. 다른 것들은 액세스 제어나 콘텐츠 필터링에 사용됩니다. HTTP 스트림은 파이프 및 필터 아키텍처와 유사한 특성을 가지므로 중개자가 스트림의 어느 방향이든 향상(또는 간섭)할 수 있는 정도에는 본질적인 제한이 없습니다.
