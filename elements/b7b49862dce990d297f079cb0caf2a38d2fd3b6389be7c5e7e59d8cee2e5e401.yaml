"hash": |-
  b7b49862dce990d297f079cb0caf2a38d2fd3b6389be7c5e7e59d8cee2e5e401
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     There are cases where defaulting to the least restrictive setting is
     not appropriate.  For example, a server on an intranet that provides
     sensitive company information SHOULD NOT allow CORS requests from any
     domain, as that could allow leaking of that sensitive information.  A
     server that wishes to restrict access to information from external
     entities SHOULD use a more restrictive Access-Control-Allow-Origin
     header.
"fixed": |-
  There are cases where defaulting to the least restrictive setting is not appropriate.  For example, a server on an intranet that provides sensitive company information SHOULD NOT allow CORS requests from any domain, as that could allow leaking of that sensitive information.  A server that wishes to restrict access to information from external entities SHOULD use a more restrictive Access-Control-Allow-Origin header.
"ko": |-
  최소한의 제한 설정으로 기본값을 지정하는 것이 적절하지 않은 경우가 있습니다. 예를 들어, 민감한 회사 정보를 제공하는 인트라넷의 서버는 민감한 정보의 유출을 허용할 수 있으므로 모든 도메인의 CORS 요청을 허용해서는 안 됩니다. 외부 엔터티의 정보에 대한 액세스를 제한하려는 서버는 더 제한적인 Access-Control-Allow-Origin 헤더를 사용해야 합니다.
