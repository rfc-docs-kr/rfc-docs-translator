"hash": |-
  4e6f5b2e2310c13d5c2c7573a255b9abc979f0e2c88bdcb4ad25df94af82fe0e
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     End users will undoubtedly discern the difference between SIPS and
     SIP URIs, and they may manually edit them in response to stimuli.
     This can either benefit or degrade security.  For example, if an
     attacker corrupts a DNS cache, inserting a fake record set that
     effectively removes all SIPS records for a proxy server, then any
     SIPS requests that traverse this proxy server may fail.  When a user,
     however, sees that repeated calls to a SIPS AOR are failing, they
     could on some devices manually convert the scheme from SIPS to SIP
     and retry.  Of course, there are some safeguards against this (if the
     destination UA is truly paranoid it could refuse all non-SIPS
     requests), but it is a limitation worth noting.  On the bright side,
     users might also divine that 'SIPS' would be valid even when they are
     presented only with a SIP URI.
"fixed": |-
  End users will undoubtedly discern the difference between SIPS and SIP URIs, and they may manually edit them in response to stimuli. This can either benefit or degrade security.  For example, if an attacker corrupts a DNS cache, inserting a fake record set that effectively removes all SIPS records for a proxy server, then any SIPS requests that traverse this proxy server may fail.  When a user, however, sees that repeated calls to a SIPS AOR are failing, they could on some devices manually convert the scheme from SIPS to SIP and retry.  Of course, there are some safeguards against this (if the destination UA is truly paranoid it could refuse all non-SIPS requests), but it is a limitation worth noting.  On the bright side, users might also divine that 'SIPS' would be valid even when they are presented only with a SIP URI.
"ko": |-
  최종 사용자는 의심할 여지 없이 SIPS와 SIP URI의 차이를 식별할 것이며 자극에 반응하여 수동으로 편집할 수도 있습니다. 이는 보안에 도움이 될 수도 있고 저하될 수도 있습니다. 예를 들어 공격자가 프록시 서버에 대한 모든 SIPS 레코드를 효과적으로 제거하는 가짜 레코드 세트를 삽입하여 DNS 캐시를 손상시킨 경우 이 프록시 서버를 통과하는 모든 SIPS 요청이 실패할 수 있습니다. 그러나 사용자가 SIPS AOR에 대한 반복 호출이 실패하는 것을 확인하면 일부 장치에서 구성표를 SIPS에서 SIP로 수동으로 변환하고 다시 시도할 수 있습니다. 물론 이에 대한 몇 가지 보호 장치가 있지만(대상 UA가 실제로 편집증적인 경우 SIPS가 아닌 모든 요청을 거부할 수 있음) 이는 주목할 만한 제한 사항입니다. 긍정적인 측면에서는 사용자가 SIP URI만 표시되는 경우에도 'SIPS'가 유효할 것이라고 생각할 수도 있습니다.
