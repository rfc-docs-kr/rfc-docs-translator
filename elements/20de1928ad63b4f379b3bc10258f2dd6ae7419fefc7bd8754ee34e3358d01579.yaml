"hash": |-
  20de1928ad63b4f379b3bc10258f2dd6ae7419fefc7bd8754ee34e3358d01579
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Relatively few resources allow the DELETE method -- its primary use
     is for remote authoring environments, where the user has some
     direction regarding its effect.  For example, a resource that was
     previously created using a PUT request, or identified via the
     Location header field after a 201 (Created) response to a POST
     request, might allow a corresponding DELETE request to undo those
     actions.  Similarly, custom user agent implementations that implement
     an authoring function, such as revision control clients using HTTP
     for remote operations, might use DELETE based on an assumption that
     the server's URI space has been crafted to correspond to a version
     repository.
"fixed": |-
  Relatively few resources allow the DELETE method -- its primary use is for remote authoring environments, where the user has some direction regarding its effect.  For example, a resource that was previously created using a PUT request, or identified via the Location header field after a 201 (Created) response to a POST request, might allow a corresponding DELETE request to undo those actions.  Similarly, custom user agent implementations that implement an authoring function, such as revision control clients using HTTP for remote operations, might use DELETE based on an assumption that the server's URI space has been crafted to correspond to a version repository.
"ko": |-
  DELETE 메소드를 허용하는 리소스는 상대적으로 적습니다. 이 메소드의 주요 용도는 사용자가 그 효과에 대해 특정 방향을 갖는 원격 저작 환경입니다. 예를 들어 이전에 PUT 요청을 사용하여 생성되었거나 POST 요청에 대한 201(Created) 응답 후 Location 헤더 필드를 통해 식별된 리소스는 해당 DELETE 요청이 해당 작업을 취소하도록 허용할 수 있습니다. 마찬가지로 원격 작업을 위해 HTTP를 사용하는 개정 제어 클라이언트와 같은 저작 기능을 구현하는 사용자 지정 사용자 에이전트 구현에서는 서버의 URI 공간이 버전 저장소에 해당하도록 제작되었다는 가정에 따라 DELETE를 사용할 수 있습니다.
