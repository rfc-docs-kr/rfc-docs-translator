"hash": |-
  69e52650fc702ad8b458cf03bc7425a67831ebaede66902fee742d092f95a4cb
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     All URI references are parsed by generic syntax parsers when used.
     However, because hierarchical processing has no effect on an absolute
     URI used in a reference unless it contains one or more dot-segments
     (complete path segments of "." or "..", as described in Section 3.3),
     URI scheme specifications can define opaque identifiers by
     disallowing use of slash characters, question mark characters, and
     the URIs "scheme:." and "scheme:..".
"fixed": |-
  All URI references are parsed by generic syntax parsers when used. However, because hierarchical processing has no effect on an absolute URI used in a reference unless it contains one or more dot-segments (complete path segments of "." or "..", as described in Section 3.3), URI scheme specifications can define opaque identifiers by disallowing use of slash characters, question mark characters, and the URIs "scheme:." and "scheme:..".
"ko": |-
  모든 URI 참조는 사용될 때 일반 구문 분석기에 의해 구문 분석됩니다. 그러나 계층적 처리는 하나 이상의 도트 세그먼트(섹션 3.3에 설명된 "." 또는 ".."의 전체 경로 세그먼트)를 포함하지 않는 한 참조에 사용된 절대 URI에 영향을 미치지 않기 때문에 URI 체계 사양은 슬래시 문자, 물음표 문자 및 URI "scheme:"의 사용을 허용하지 않음으로써 불투명 식별자를 정의합니다. 그리고 "구성표:..".
