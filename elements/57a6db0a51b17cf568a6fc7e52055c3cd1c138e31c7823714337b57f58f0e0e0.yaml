"hash": |-
  57a6db0a51b17cf568a6fc7e52055c3cd1c138e31c7823714337b57f58f0e0e0
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     After possibly receiving one or more provisional responses, the UAC
     will get one or more 2xx responses or one non-2xx final response.
     Because of the protracted amount of time it can take to receive final
     responses to INVITE, the reliability mechanisms for INVITE
     transactions differ from those of other requests (like OPTIONS).
     Once it receives a final response, the UAC needs to send an ACK for
     every final response it receives.  The procedure for sending this ACK
     depends on the type of response.  For final responses between 300 and
     699, the ACK processing is done in the transaction layer and follows
     one set of rules (See Section 17).  For 2xx responses, the ACK is
     generated by the UAC core.
"fixed": |-
  After possibly receiving one or more provisional responses, the UAC will get one or more 2xx responses or one non-2xx final response. Because of the protracted amount of time it can take to receive final responses to INVITE, the reliability mechanisms for INVITE transactions differ from those of other requests (like OPTIONS). Once it receives a final response, the UAC needs to send an ACK for every final response it receives.  The procedure for sending this ACK depends on the type of response.  For final responses between 300 and 699, the ACK processing is done in the transaction layer and follows one set of rules (See Section 17).  For 2xx responses, the ACK is generated by the UAC core.
"ko": |-
  하나 이상의 임시 응답을 받은 후 UAC는 하나 이상의 2xx 응답 또는 하나의 2xx가 아닌 최종 응답을 받게 됩니다. INVITE에 대한 최종 응답을 받는 데 오랜 시간이 걸릴 수 있기 때문에 INVITE 트랜잭션의 신뢰성 메커니즘은 OPTIONS와 같은 다른 요청의 신뢰성 메커니즘과 다릅니다. 최종 응답을 받으면 UAC는 수신하는 모든 최종 응답에 대해 ACK를 보내야 합니다. 이 ACK를 보내는 절차는 응답 유형에 따라 다릅니다. 300에서 699 사이의 최종 응답의 경우 ACK 처리는 트랜잭션 계층에서 수행되며 한 가지 규칙 세트를 따릅니다(섹션 17 참조). 2xx 응답의 경우 ACK는 UAC 코어에 의해 생성됩니다.
