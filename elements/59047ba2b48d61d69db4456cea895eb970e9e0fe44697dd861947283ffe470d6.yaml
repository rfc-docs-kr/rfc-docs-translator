"hash": |-
  59047ba2b48d61d69db4456cea895eb970e9e0fe44697dd861947283ffe470d6
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The path validation algorithm describes the process of validating a
     single certification path.  While each certification path begins with
     a specific trust anchor, there is no requirement that all
     certification paths validated by a particular system share a single
     trust anchor.  An implementation that supports multiple trust anchors
     MAY augment the algorithm presented in section 6.1 to further limit
     the set of valid certification paths which begin with a particular
     trust anchor.  For example, an implementation MAY modify the
     algorithm to apply name constraints to a specific trust anchor during
     the initialization phase, or the application MAY require the presence
"fixed": |-
  The path validation algorithm describes the process of validating a single certification path.  While each certification path begins with a specific trust anchor, there is no requirement that all certification paths validated by a particular system share a single trust anchor.  An implementation that supports multiple trust anchors MAY augment the algorithm presented in section 6.1 to further limit the set of valid certification paths which begin with a particular trust anchor.  For example, an implementation MAY modify the algorithm to apply name constraints to a specific trust anchor during the initialization phase, or the application MAY require the presence
"ko": |-
  경로 유효성 검사 알고리즘은 단일 인증 경로의 유효성을 검사하는 프로세스를 설명합니다. 각 인증 경로는 특정 트러스트 앵커로 시작되지만 특정 시스템에서 검증된 모든 인증 경로가 단일 트러스트 앵커를 공유해야 한다는 요구 사항은 없습니다. 여러 트러스트 앵커를 지원하는 구현은 섹션 6.1에 제시된 알고리즘을 강화하여 특정 트러스트 앵커로 시작하는 유효한 인증 경로 집합을 추가로 제한할 수 있습니다. 예를 들어, 구현은 초기화 단계에서 특정 트러스트 앵커에 이름 제약 조건을 적용하도록 알고리즘을 수정할 수도 있고, 애플리케이션이 존재를 요구할 수도 있습니다.
