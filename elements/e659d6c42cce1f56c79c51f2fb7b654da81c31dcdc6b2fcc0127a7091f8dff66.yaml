"hash": |-
  e659d6c42cce1f56c79c51f2fb7b654da81c31dcdc6b2fcc0127a7091f8dff66
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     On a low-loss path, the advertised receive window should be
     configured to match the path bandwidth-delay product, including
     buffering delays (assume 1 packet/hop) [38].  Many paths in the
     Internet have end-to-end bandwidths of under 1 Mbps, latencies under
     100 ms, and are under 15 hops, resulting in fairly small advertised
     receive windows as above (under 35,000 bytes).  Under these
     conditions, and further assuming that the initial sequence number is
     suitably (pseudo-randomly) chosen, a valid guessed sequence number
     would have odds of 1 in 57,000 of falling within the advertised
     receive window.  Put differently, a blind (i.e., off-path) attacker
     would need to send 57,000 RSTs with suitably spaced sequence number
     guesses within one round-trip time to successfully reset a
     connection.  At 1 Mbps, 57,000 (40 byte) RSTs would take only 20
     seconds to transmit, but this presumes that both IP addresses and
     both ports are known.  Absent knowledge of the source port, an off-
     path spoofer would need to try at least the entire range of 49152-
     65535, or 16,384 different ports, resulting in an attack that would
     take over 91 hours.  Because most TCP connections are comparatively
     short-lived, even this moderate variation in the source port is
     sufficient for such environments, although further port randomization
     may be recommended [29].
"fixed": |-
  On a low-loss path, the advertised receive window should be configured to match the path bandwidth-delay product, including buffering delays (assume 1 packet/hop) [38].  Many paths in the Internet have end-to-end bandwidths of under 1 Mbps, latencies under 100 ms, and are under 15 hops, resulting in fairly small advertised receive windows as above (under 35,000 bytes).  Under these conditions, and further assuming that the initial sequence number is suitably (pseudo-randomly) chosen, a valid guessed sequence number would have odds of 1 in 57,000 of falling within the advertised receive window.  Put differently, a blind (i.e., off-path) attacker would need to send 57,000 RSTs with suitably spaced sequence number guesses within one round-trip time to successfully reset a connection.  At 1 Mbps, 57,000 (40 byte) RSTs would take only 20 seconds to transmit, but this presumes that both IP addresses and both ports are known.  Absent knowledge of the source port, an off- path spoofer would need to try at least the entire range of 49152- 65535, or 16,384 different ports, resulting in an attack that would take over 91 hours.  Because most TCP connections are comparatively short-lived, even this moderate variation in the source port is sufficient for such environments, although further port randomization may be recommended [29].
"ko": |-
  저손실 경로에서 광고된 수신 창은 버퍼링 지연(1 패킷/홉으로 가정)을 포함하여 경로 대역폭-지연 곱과 일치하도록 구성되어야 합니다[38]. 인터넷의 많은 경로는 1Mbps 미만의 종단 간 대역폭, 100ms 미만의 지연 시간, 15홉 미만의 홉을 가지므로 위와 같이 상당히 작은 광고 수신 창(35,000바이트 미만)이 발생합니다. 이러한 조건에서 초기 시퀀스 번호가 적절하게(의사 무작위로) 선택되었다고 가정하면 유효한 추측 시퀀스 번호는 광고된 수신 창 내에 포함될 확률이 57,000분의 1입니다. 다르게 말하면, 블라인드(즉, 경로를 벗어난) 공격자가 연결을 성공적으로 재설정하려면 한 번의 왕복 시간 내에 적절한 간격의 시퀀스 번호 추측과 함께 57,000개의 RST를 보내야 합니다. 1Mbps에서는 57,000(40바이트) RST를 전송하는 데 20초밖에 걸리지 않지만 이는 두 IP 주소와 두 포트가 모두 알려져 있다고 가정합니다. 소스 포트에 대한 지식이 없으면 오프패스 스푸퍼는 최소한 49152-65535의 전체 범위 또는 16,384개의 다른 포트를 시도해야 하므로 공격에 91시간 이상이 소요됩니다. 대부분의 TCP 연결은 상대적으로 수명이 짧기 때문에 추가 포트 무작위화가 권장될 수 있지만 소스 포트의 중간 정도의 변화도 이러한 환경에 충분합니다[29].
