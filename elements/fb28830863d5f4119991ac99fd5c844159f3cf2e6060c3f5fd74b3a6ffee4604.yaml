"hash": |-
  fb28830863d5f4119991ac99fd5c844159f3cf2e6060c3f5fd74b3a6ffee4604
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Although many URL schemes are named after protocols, this does not
     imply that the only way to access the URL's resource is via the named
     protocol.  Gateways, proxies, caches, and name resolution services
     might be used to access some resources, independent of the protocol
     of their origin, and the resolution of some URL may require the use
     of more than one protocol (e.g., both DNS and HTTP are typically used
     to access an "http" URL's resource when it can't be found in a local
     cache).
"fixed": |-
  Although many URL schemes are named after protocols, this does not imply that the only way to access the URL's resource is via the named protocol.  Gateways, proxies, caches, and name resolution services might be used to access some resources, independent of the protocol of their origin, and the resolution of some URL may require the use of more than one protocol (e.g., both DNS and HTTP are typically used to access an "http" URL's resource when it can't be found in a local cache).
"ko": |-
  많은 URL 구성표가 프로토콜 이름을 따서 명명되었지만 이것이 URL의 리소스에 액세스하는 유일한 방법이 명명된 프로토콜을 통하는 것임을 의미하지는 않습니다. 게이트웨이, 프록시, 캐시 및 이름 확인 서비스는 원본 프로토콜과 관계없이 일부 리소스에 액세스하는 데 사용될 수 있으며 일부 URL의 확인에는 둘 이상의 프로토콜을 사용해야 할 수 있습니다(예: DNS와 HTTP는 일반적으로 모두 로컬 캐시에서 찾을 수 없는 경우 "http" URL의 리소스에 액세스하는 데 사용됩니다.
