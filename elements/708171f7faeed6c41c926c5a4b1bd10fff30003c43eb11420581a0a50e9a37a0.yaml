"hash": |-
  708171f7faeed6c41c926c5a4b1bd10fff30003c43eb11420581a0a50e9a37a0
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Prior versions of TLS used the record layer version number
     (TLSPlaintext.legacy_record_version and
     TLSCiphertext.legacy_record_version) for various purposes.  As of
     TLS 1.3, this field is deprecated.  The value of
     TLSPlaintext.legacy_record_version MUST be ignored by all
     implementations.  The value of TLSCiphertext.legacy_record_version is
     included in the additional data for deprotection but MAY otherwise be
     ignored or MAY be validated to match the fixed constant value.
     Version negotiation is performed using only the handshake versions
     (ClientHello.legacy_version and ServerHello.legacy_version, as well
     as the ClientHello, HelloRetryRequest, and ServerHello
     "supported_versions" extensions).  In order to maximize
     interoperability with older endpoints, implementations that negotiate
     the use of TLS 1.0-1.2 SHOULD set the record layer version number to
     the negotiated version for the ServerHello and all records
     thereafter.
"fixed": |-
  Prior versions of TLS used the record layer version number (TLSPlaintext.legacy_record_version and TLSCiphertext.legacy_record_version) for various purposes.  As of TLS 1.3, this field is deprecated.  The value of TLSPlaintext.legacy_record_version MUST be ignored by all implementations.  The value of TLSCiphertext.legacy_record_version is included in the additional data for deprotection but MAY otherwise be ignored or MAY be validated to match the fixed constant value. Version negotiation is performed using only the handshake versions (ClientHello.legacy_version and ServerHello.legacy_version, as well as the ClientHello, HelloRetryRequest, and ServerHello "supported_versions" extensions).  In order to maximize interoperability with older endpoints, implementations that negotiate the use of TLS 1.0-1.2 SHOULD set the record layer version number to the negotiated version for the ServerHello and all records thereafter.
"ko": |-
  이전 버전의 TLS는 다양한 목적으로 레코드 계층 버전 번호(TLSPlaintext.legacy_record_version 및 TLSCiphertext.legacy_record_version)를 사용했습니다. TLS 1.3부터 ​​이 필드는 더 이상 사용되지 않습니다. TLSPlaintext.legacy_record_version 값은 모든 구현에서 무시되어야 합니다. TLSCiphertext.legacy_record_version의 값은 보호 해제를 위한 추가 데이터에 포함되지만 그렇지 않으면 무시되거나 고정 상수 값과 일치하도록 검증될 수 있습니다. 버전 협상은 핸드셰이크 버전(ClientHello.legacy_version 및 ServerHello.legacy_version과 ClientHello, HelloRetryRequest 및 ServerHello "supported_versions" 확장)만 사용하여 수행됩니다. 이전 엔드포인트와의 상호 운용성을 최대화하기 위해 TLS 1.0-1.2 사용을 협상하는 구현은 레코드 계층 버전 번호를 ServerHello 및 그 이후의 모든 레코드에 대해 협상된 버전으로 설정해야 합니다.
