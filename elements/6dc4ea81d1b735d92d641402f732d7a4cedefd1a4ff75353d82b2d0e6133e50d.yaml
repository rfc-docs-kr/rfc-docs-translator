"hash": |-
  6dc4ea81d1b735d92d641402f732d7a4cedefd1a4ff75353d82b2d0e6133e50d
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Upon receipt, Peer P verifies the signature of the munro and expands
     its view of the tree.  Next, the peer computes the hash of chunk 8
     and combines it with the received hash of node 10, computing the
     expected hash of node 9.  He can then verify the content of chunk 8
     by comparing the computed hash of node 9 with the munro hash of the
     same node he just received; hence, Peer P has successfully verified
     the integrity of chunk 8.
"fixed": |-
  Upon receipt, Peer P verifies the signature of the munro and expands its view of the tree.  Next, the peer computes the hash of chunk 8 and combines it with the received hash of node 10, computing the expected hash of node 9.  He can then verify the content of chunk 8 by comparing the computed hash of node 9 with the munro hash of the same node he just received; hence, Peer P has successfully verified the integrity of chunk 8.
"ko": |-
  수신 시 피어 P는 먼로의 서명을 확인하고 트리 보기를 확장합니다. 다음으로, 피어는 청크 8의 해시를 계산하고 이를 노드 10의 수신된 해시와 결합하여 노드 9의 예상 해시를 계산합니다. 그런 다음 노드 9의 계산된 해시를 먼로 해시와 비교하여 청크 8의 내용을 확인할 수 있습니다. 그가 방금 받은 동일한 노드의; 따라서 피어 P는 청크 8의 무결성을 성공적으로 확인했습니다.
