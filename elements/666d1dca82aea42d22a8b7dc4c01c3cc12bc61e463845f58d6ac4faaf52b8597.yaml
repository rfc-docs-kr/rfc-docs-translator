"hash": |-
  666d1dca82aea42d22a8b7dc4c01c3cc12bc61e463845f58d6ac4faaf52b8597
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
        SKIP uses the Diffie-Hellman-Merkle algorithm (or could use
        another key-agreement algorithm) to generate a key-encrypting key
        for use between two entities. A session key is used with a
        symmetric algorithm to encrypt data in one or more IP packets that
        are to be sent from one entity to the other. A symmetric KEK is
        established and used to encrypt the session key, and the encrypted
        session key is placed in a SKIP header that is added to each IP
        packet that is encrypted with that session key.
"fixed": |-
  - SKIP uses the Diffie-Hellman-Merkle algorithm (or could use another key-agreement algorithm) to generate a key-encrypting key for use between two entities. A session key is used with a symmetric algorithm to encrypt data in one or more IP packets that are to be sent from one entity to the other. A symmetric KEK is established and used to encrypt the session key, and the encrypted session key is placed in a SKIP header that is added to each IP packet that is encrypted with that session key.
"ko": |-
  - SKIP은 Diffie-Hellman-Merkle 알고리즘(또는 다른 키 합의 알고리즘을 사용할 수 있음)을 사용하여 두 엔터티 간에 사용할 키 암호화 키를 생성합니다. 세션 키는 한 엔터티에서 다른 엔터티로 전송되는 하나 이상의 IP 패킷의 데이터를 암호화하기 위해 대칭 알고리즘과 함께 사용됩니다. 대칭 KEK가 설정되어 세션 키를 암호화하는 데 사용되며, 암호화된 세션 키는 해당 세션 키로 암호화된 각 IP 패킷에 추가되는 SKIP 헤더에 배치됩니다.
