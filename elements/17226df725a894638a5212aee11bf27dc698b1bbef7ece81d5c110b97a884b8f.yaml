"hash": |-
  17226df725a894638a5212aee11bf27dc698b1bbef7ece81d5c110b97a884b8f
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     An implementation MAY augment the algorithm presented in Section 6.1
     to further limit the set of valid certification paths that begin with
     a particular trust anchor.  For example, an implementation MAY modify
     the algorithm to apply a path length constraint to a specific trust
     anchor during the initialization phase, or the application MAY
     require the presence of a particular alternative name form in the
     target certificate, or the application MAY impose requirements on
     application-specific extensions.  Thus, the path validation algorithm
     presented in Section 6.1 defines the minimum conditions for a path to
     be considered valid.
"fixed": |-
  An implementation MAY augment the algorithm presented in Section 6.1 to further limit the set of valid certification paths that begin with a particular trust anchor.  For example, an implementation MAY modify the algorithm to apply a path length constraint to a specific trust anchor during the initialization phase, or the application MAY require the presence of a particular alternative name form in the target certificate, or the application MAY impose requirements on application-specific extensions.  Thus, the path validation algorithm presented in Section 6.1 defines the minimum conditions for a path to be considered valid.
"ko": |-
  구현은 특정 트러스트 앵커로 시작하는 유효한 인증 경로 집합을 추가로 제한하기 위해 섹션 6.1에 제시된 알고리즘을 강화할 수 있습니다. 예를 들어, 구현은 초기화 단계에서 특정 트러스트 앵커에 경로 길이 제약 조건을 적용하기 위해 알고리즘을 수정할 수도 있고, 애플리케이션이 대상 인증서에 특정 대체 이름 형식의 존재를 요구할 수도 있고, 애플리케이션이 다음에 대한 요구 사항을 부과할 수도 있습니다. 애플리케이션별 확장. 따라서 섹션 6.1에 제시된 경로 유효성 검사 알고리즘은 경로가 유효한 것으로 간주되는 최소 조건을 정의합니다.
