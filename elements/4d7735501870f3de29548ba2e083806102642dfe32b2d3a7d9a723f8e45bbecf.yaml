"hash": |-
  4d7735501870f3de29548ba2e083806102642dfe32b2d3a7d9a723f8e45bbecf
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Sending a RESET_STREAM means that an endpoint cannot guarantee
     delivery of stream data; however, there is no requirement that stream
     data not be delivered if a RESET_STREAM is received.  An
     implementation MAY interrupt delivery of stream data, discard any
     data that was not consumed, and signal the receipt of the
     RESET_STREAM.  A RESET_STREAM signal might be suppressed or withheld
     if stream data is completely received and is buffered to be read by
     the application.  If the RESET_STREAM is suppressed, the receiving
     part of the stream remains in "Data Recvd".
"fixed": |-
  Sending a RESET_STREAM means that an endpoint cannot guarantee delivery of stream data; however, there is no requirement that stream data not be delivered if a RESET_STREAM is received.  An implementation MAY interrupt delivery of stream data, discard any data that was not consumed, and signal the receipt of the RESET_STREAM.  A RESET_STREAM signal might be suppressed or withheld if stream data is completely received and is buffered to be read by the application.  If the RESET_STREAM is suppressed, the receiving part of the stream remains in "Data Recvd".
"ko": |-
  RESET_STREAM을 보내는 것은 엔드포인트가 스트림 데이터의 전달을 보장할 수 없음을 의미합니다. 그러나 RESET_STREAM이 수신된 경우 스트림 데이터가 전달되지 않아야 한다는 요구 사항은 없습니다. 구현은 스트림 데이터 전달을 중단하고, 소비되지 않은 모든 데이터를 삭제하고, RESET_STREAM 수신 신호를 보낼 수 있습니다. 스트림 데이터가 완전히 수신되고 애플리케이션에서 읽을 수 있도록 버퍼링되는 경우 RESET_STREAM 신호가 억제되거나 보류될 수 있습니다. RESET_STREAM이 억제되면 스트림의 수신 부분은 "Data Recvd"에 유지됩니다.
