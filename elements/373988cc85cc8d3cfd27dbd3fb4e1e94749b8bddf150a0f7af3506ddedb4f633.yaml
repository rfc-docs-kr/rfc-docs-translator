"hash": |-
  373988cc85cc8d3cfd27dbd3fb4e1e94749b8bddf150a0f7af3506ddedb4f633
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     An implementation may receive an unencrypted record of type
     change_cipher_spec consisting of the single byte value 0x01 at any
     time after the first ClientHello message has been sent or received
     and before the peer's Finished message has been received and MUST
     simply drop it without further processing.  Note that this record may
     appear at a point at the handshake where the implementation is
     expecting protected records, and so it is necessary to detect this
     condition prior to attempting to deprotect the record.  An
     implementation which receives any other change_cipher_spec value or
     which receives a protected change_cipher_spec record MUST abort the
     handshake with an "unexpected_message" alert.  If an implementation
     detects a change_cipher_spec record received before the first
     ClientHello message or after the peer's Finished message, it MUST be
     treated as an unexpected record type (though stateless servers may
     not be able to distinguish these cases from allowed cases).
"fixed": |-
  An implementation may receive an unencrypted record of type change_cipher_spec consisting of the single byte value 0x01 at any time after the first ClientHello message has been sent or received and before the peer's Finished message has been received and MUST simply drop it without further processing.  Note that this record may appear at a point at the handshake where the implementation is expecting protected records, and so it is necessary to detect this condition prior to attempting to deprotect the record.  An implementation which receives any other change_cipher_spec value or which receives a protected change_cipher_spec record MUST abort the handshake with an "unexpected_message" alert.  If an implementation detects a change_cipher_spec record received before the first ClientHello message or after the peer's Finished message, it MUST be treated as an unexpected record type (though stateless servers may not be able to distinguish these cases from allowed cases).
"ko": |-
  구현은 첫 번째 ClientHello 메시지가 전송 또는 수신된 후, 그리고 피어의 Finished 메시지가 수신되기 전에 언제든지 단일 바이트 값 0x01로 구성된 Change_cipher_spec 유형의 암호화되지 않은 레코드를 수신할 수 있으며 추가 처리 없이 이를 삭제해야 합니다(MUST). 이 레코드는 구현이 보호된 레코드를 기대하는 핸드셰이크 지점에 나타날 수 있으므로 레코드 보호 해제를 시도하기 전에 이 조건을 검색해야 합니다. 다른 Change_cipher_spec 값을 수신하거나 보호된 Change_cipher_spec 레코드를 수신하는 구현은 "unexpected_message" 경고와 함께 핸드셰이크를 중단해야 합니다(MUST). 구현이 첫 번째 ClientHello 메시지 이전이나 피어의 Finished 메시지 이후에 수신된change_cipher_spec 레코드를 감지하는 경우 이는 예상치 못한 레코드 유형으로 처리되어야 합니다(비상태 서버는 이러한 사례를 허용된 사례와 구별하지 못할 수도 있음).
