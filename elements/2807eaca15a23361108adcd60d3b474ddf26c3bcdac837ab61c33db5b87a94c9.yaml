"hash": |-
  2807eaca15a23361108adcd60d3b474ddf26c3bcdac837ab61c33db5b87a94c9
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Secure Socket Layer (SSL) and Transport Layer Security (TLS)
     renegotiation are vulnerable to an attack in which the attacker forms
     a TLS connection with the target server, injects content of his
     choice, and then splices in a new TLS connection from a client.  The
     server treats the client's initial TLS handshake as a renegotiation
     and thus believes that the initial data transmitted by the attacker
     is from the same entity as the subsequent client data.  This
     specification defines a TLS extension to cryptographically tie
     renegotiations to the TLS connections they are being performed over,
     thus preventing this attack.
"fixed": |-
  Secure Socket Layer (SSL) and Transport Layer Security (TLS) renegotiation are vulnerable to an attack in which the attacker forms a TLS connection with the target server, injects content of his choice, and then splices in a new TLS connection from a client.  The server treats the client's initial TLS handshake as a renegotiation and thus believes that the initial data transmitted by the attacker is from the same entity as the subsequent client data.  This specification defines a TLS extension to cryptographically tie renegotiations to the TLS connections they are being performed over, thus preventing this attack.
"ko": |-
  SSL(Secure Socket Layer) 및 TLS(전송 계층 보안) 재협상은 공격자가 대상 서버와 TLS 연결을 형성하고 원하는 콘텐츠를 삽입한 다음 클라이언트에서 새로운 TLS 연결을 연결하는 공격에 취약합니다. 서버는 클라이언트의 초기 TLS 핸드셰이크를 재협상으로 처리하므로 공격자가 전송한 초기 데이터가 후속 클라이언트 데이터와 동일한 엔터티에서 나온 것이라고 믿습니다. 이 사양은 재협상을 수행 중인 TLS 연결에 암호화 방식으로 연결하여 이 공격을 방지하는 TLS 확장을 정의합니다.
