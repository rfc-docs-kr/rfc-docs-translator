"hash": |-
  a9e55797e732cd7b6949c153e76261b3a44e90233db9c675711f2467fe8f1782
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Section 5.1 of [RFC4279] mandates that the PSK identity should be
     first converted to a character string and then encoded to octets
     using UTF-8.  This was done to avoid interoperability problems
     (especially when the identity is configured by human users).  On the
     other hand, [RFC7925] advises implementations against assuming any
     structured format for PSK identities and recommends byte-by-byte
     comparison for any operation.  When PSK identities are configured
     manually, it is important to be aware that visually identical strings
     may, in fact, differ due to encoding issues.
"fixed": |-
  Section 5.1 of [RFC4279] mandates that the PSK identity should be first converted to a character string and then encoded to octets using UTF-8.  This was done to avoid interoperability problems (especially when the identity is configured by human users).  On the other hand, [RFC7925] advises implementations against assuming any structured format for PSK identities and recommends byte-by-byte comparison for any operation.  When PSK identities are configured manually, it is important to be aware that visually identical strings may, in fact, differ due to encoding issues.
"ko": |-
  [RFC4279]의 섹션 5.1에서는 PSK ID를 먼저 문자열로 변환한 다음 UTF-8을 사용하여 옥텟으로 인코딩해야 한다고 규정합니다.  이는 상호 운용성 문제(특히 인간 사용자가 ID를 구성하는 경우)를 방지하기 위해 수행되었습니다.  반면 [RFC7925]에서는 PSK ID에 대해 구조화된 형식을 가정하지 않도록 구현을 권장하고 모든 작업에 대해 바이트별 비교를 권장합니다.  PSK ID를 수동으로 구성하는 경우 시각적으로 동일한 문자열이 실제로 인코딩 문제로 인해 다를 수 있다는 점을 인식하는 것이 중요합니다.
