"hash": |-
  0aa692f8d03b3be1c4f3b8eea35f5ff6f2c1777f12819970298d2eca1ba04433
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     For example, if a client makes a PUT request on a negotiated resource
     and the origin server accepts that PUT (without redirection), then
     the new state of that resource is expected to be consistent with the
     one representation supplied in that PUT; the Content-Location cannot
     be used as a form of reverse content selection identifier to update
     only one of the negotiated representations.  If the user agent had
     wanted the latter semantics, it would have applied the PUT directly
     to the Content-Location URI.
"fixed": |-
  For example, if a client makes a PUT request on a negotiated resource and the origin server accepts that PUT (without redirection), then the new state of that resource is expected to be consistent with the one representation supplied in that PUT; the Content-Location cannot be used as a form of reverse content selection identifier to update only one of the negotiated representations.  If the user agent had wanted the latter semantics, it would have applied the PUT directly to the Content-Location URI.
"ko": |-
  예를 들어, 클라이언트가 협상된 리소스에 대해 PUT 요청을 하고 원본 서버가 해당 PUT(리디렉션 없이)을 수락하는 경우 해당 리소스의 새로운 상태는 해당 PUT에 제공된 하나의 표현과 일치할 것으로 예상됩니다. Content-Location은 협상된 표현 중 하나만 업데이트하기 위한 역방향 콘텐츠 선택 식별자의 형태로 사용될 수 없습니다. 사용자 에이전트가 후자의 의미를 원했다면 PUT를 Content-Location URI에 직접 적용했을 것입니다.
