"hash": |-
  73beff5a3fa25f343b38708979f01de1cf95e4858f9f2eccaccd60e8a183e1b0
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Loose Reverse Path Forwarding (Loose RPF) is algorithmically similar
     to strict RPF, but differs in that it checks only for the existence
     of a route (even a default route, if applicable), not where the route
     points to.  Practically, this could be considered as a "route
     presence check" ("loose RPF is a misnomer in a sense because there is
     no "reverse path" check in the first place).
"fixed": |-
  Loose Reverse Path Forwarding (Loose RPF) is algorithmically similar to strict RPF, but differs in that it checks only for the existence of a route (even a default route, if applicable), not where the route points to.  Practically, this could be considered as a "route presence check" ("loose RPF is a misnomer in a sense because there is no "reverse path" check in the first place).
"ko": |-
  느슨한 역방향 경로 전달(Loose RPF)은 알고리즘적으로 엄격한 RPF와 유사하지만 경로가 가리키는 위치가 아니라 경로(해당되는 경우 기본 경로도 포함)의 존재만 확인한다는 점에서 다릅니다. 실제로 이는 "경로 존재 확인"으로 간주될 수 있습니다("느슨한 RPF는 애초에 "역방향 경로" 확인이 없기 때문에 어떤 의미에서는 잘못된 이름입니다).
