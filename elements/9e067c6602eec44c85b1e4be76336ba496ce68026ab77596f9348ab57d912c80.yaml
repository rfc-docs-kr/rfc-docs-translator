"hash": |-
  9e067c6602eec44c85b1e4be76336ba496ce68026ab77596f9348ab57d912c80
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     However, the ClientHello also contains a list of desired cipher
     suites, also ranked in preference order.  This presents the
     possibility of conflicted preferences.  For example, if the
     ClientHello contains a cipher_suite field with two choices in order
     <TLS_DHE_RSA_WITH_AES_128_CBC_SHA,
     TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA> and the Supported Groups
     extension contains two choices in order <secp256r1,ffdhe3072>, then
     there is a clear contradiction.  Clients SHOULD NOT present such a
     contradiction since it does not represent a sensible ordering.  A
     server that encounters such a contradiction when selecting between an
     ECDHE or FFDHE key exchange mechanism while trying to respect client
     preferences SHOULD give priority to the Supported Groups extension
     (in the example case, it should select
     TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA with secp256r1) but MAY resolve
     the contradiction any way it sees fit.
"fixed": |-
  However, the ClientHello also contains a list of desired cipher suites, also ranked in preference order.  This presents the possibility of conflicted preferences.  For example, if the ClientHello contains a cipher_suite field with two choices in order <TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA> and the Supported Groups extension contains two choices in order <secp256r1,ffdhe3072>, then there is a clear contradiction.  Clients SHOULD NOT present such a contradiction since it does not represent a sensible ordering.  A server that encounters such a contradiction when selecting between an ECDHE or FFDHE key exchange mechanism while trying to respect client preferences SHOULD give priority to the Supported Groups extension (in the example case, it should select TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA with secp256r1) but MAY resolve the contradiction any way it sees fit.
"ko": |-
  그러나 ClientHello에는 선호도 순서에 따라 순위가 매겨진 원하는 암호화 제품군 목록도 포함되어 있습니다.  이는 선호도가 충돌할 가능성을 나타냅니다.  예를 들어 ClientHello에 <TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA> 순서로 두 가지 선택 사항이 있는 cipher_suite 필드가 포함되어 있고 지원 그룹 확장에 <secp256r1,ffdhe3072> 순서로 두 가지 선택 사항이 포함되어 있는 경우에는 분명한 모순이 있습니다.  클라이언트는 합리적인 순서를 나타내지 않기 때문에 그러한 모순을 제시해서는 안 됩니다.  클라이언트 기본 설정을 존중하려고 시도하는 동안 ECDHE 또는 FFDHE 키 교환 메커니즘 중에서 선택할 때 이러한 모순에 직면한 서버는 지원 그룹 확장에 우선 순위를 부여해야 하지만(예제의 경우 secp256r1과 함께 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA를 선택해야 함) 모든 모순을 해결할 수 있습니다. 그것이 적합하다고 생각되는 방식.
