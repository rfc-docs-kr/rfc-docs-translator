"hash": |-
  7fa667b7eb315a4a830809d489eafe9bcf07144a4e7b7477eb9e2e6323f3b1b0
"type": |-
  RawContent
"comment": !!null |-
  null
"original": |2-
          The first stage of the procedure (i.e., the Dijkstra algorithm)
          can now be summarized as follows. At each iteration of the
          algorithm, there is a list of candidate vertices.  Paths from
          the root to these vertices have been found, but not necessarily
          the shortest ones.  However, the paths to the candidate vertex
          that is closest to the root are guaranteed to be shortest; this
          vertex is added to the shortest-path tree, removed from the
          candidate list, and its adjacent vertices are examined for
          possible addition to/modification of the candidate list.  The
"fixed": !!null |-
  null
"ko": !!null |-
  null
