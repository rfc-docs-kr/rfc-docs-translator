"hash": |-
  e624c48958172a0dd6d336f3c4b1f02be598fd2095f7a56dd098c244e7e0af6b
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     If a pipelined request builds on the successful completion of one or
     more prior requests, the requester must verify that all requests were
     executed as expected.  A common example will be two SETUP requests
     and a PLAY request.  In case one of the SETUP requests fails
     unexpectedly, the PLAY request can still be successfully executed.
     However, the resulting presentation will not be as expected by the
     requesting client, as only a single media instead of two will be
     played.  In this case, the client can send a PAUSE request, correct
     the failing SETUP request, and then request it be played.
"fixed": |-
  If a pipelined request builds on the successful completion of one or more prior requests, the requester must verify that all requests were executed as expected.  A common example will be two SETUP requests and a PLAY request.  In case one of the SETUP requests fails unexpectedly, the PLAY request can still be successfully executed. However, the resulting presentation will not be as expected by the requesting client, as only a single media instead of two will be played.  In this case, the client can send a PAUSE request, correct the failing SETUP request, and then request it be played.
"ko": |-
  파이프라인 요청이 하나 이상의 이전 요청의 성공적인 완료를 기반으로 구축되는 경우 요청자는 모든 요청이 예상대로 실행되었는지 확인해야 합니다. 일반적인 예로는 두 개의 SETUP 요청과 한 개의 PLAY 요청이 있습니다. SETUP 요청 중 하나가 예기치 않게 실패하는 경우에도 PLAY 요청은 성공적으로 실행될 수 있습니다. 그러나 결과 프리젠테이션은 두 개가 아닌 단일 미디어만 재생되므로 요청 클라이언트가 예상한 것과 다릅니다. 이 경우 클라이언트는 PAUSE 요청을 보내고 실패한 SETUP 요청을 수정한 다음 재생을 요청할 수 있습니다.
