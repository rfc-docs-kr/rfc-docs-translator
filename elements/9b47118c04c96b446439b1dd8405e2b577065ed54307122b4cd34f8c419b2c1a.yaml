"hash": |-
  9b47118c04c96b446439b1dd8405e2b577065ed54307122b4cd34f8c419b2c1a
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     RECEIVE port, and if so, passes the new port to the process and
     updates its tables to indicate the process now possesses the new
     port.  The messages to a PPP will optionally be able to specify that
     a copy of a port be sent, a port be deleted, etc.  The PPPs would
     probably have some built-in legal ports for each process,
     particularly the port's processes used to communicate with the PPP.
     The exact specification requires development but that should not be
     hard (see (3),(6), and (7) in reference 4).  The main difficulty we
     see is efficient checking of the PPP's tables by the monitor for
     every RECEIVE or SEND without entirely supplanting the monitor's
     current protection system.
"fixed": |-
  RECEIVE port, and if so, passes the new port to the process and updates its tables to indicate the process now possesses the new port.  The messages to a PPP will optionally be able to specify that a copy of a port be sent, a port be deleted, etc.  The PPPs would probably have some built-in legal ports for each process, particularly the port's processes used to communicate with the PPP. The exact specification requires development but that should not be hard (see (3),(6), and (7) in reference 4).  The main difficulty we see is efficient checking of the PPP's tables by the monitor for every RECEIVE or SEND without entirely supplanting the monitor's current protection system.
"ko": |-
  RECEIVE 포트가 있고, 그렇다면 새 포트를 프로세스에 전달하고 해당 테이블을 업데이트하여 프로세스가 이제 새 포트를 소유하고 있음을 나타냅니다. PPP에 대한 메시지는 포트 사본 전송, 포트 삭제 등을 선택적으로 지정할 수 있습니다. PPP에는 아마도 각 프로세스, 특히 통신에 사용되는 포트의 프로세스에 대해 내장된 합법적인 포트가 있을 것입니다. PPP. 정확한 사양을 위해서는 개발이 필요하지만 이는 어렵지 않습니다(참조 4의 (3),(6), (7) 참조). 우리가 보는 주요 어려움은 모니터의 현재 보호 시스템을 완전히 대체하지 않고 모든 RECEIVE 또는 SEND에 대해 모니터로 PPP 테이블을 효율적으로 검사하는 것입니다.
