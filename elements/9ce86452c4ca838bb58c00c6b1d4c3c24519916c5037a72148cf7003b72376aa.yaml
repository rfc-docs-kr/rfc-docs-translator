"hash": |-
  9ce86452c4ca838bb58c00c6b1d4c3c24519916c5037a72148cf7003b72376aa
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     While a CANCEL request is handled in a stateful proxy by its own
     server transaction, a new response context is not created for it.
     Instead, the proxy layer searches its existing response contexts for
     the server transaction handling the request associated with this
     CANCEL.  If a matching response context is found, the element MUST
     immediately return a 200 (OK) response to the CANCEL request.  In
     this case, the element is acting as a user agent server as defined in
     Section 8.2.  Furthermore, the element MUST generate CANCEL requests
     for all pending client transactions in the context as described in
     Section 16.7 step 10.
"fixed": |-
  While a CANCEL request is handled in a stateful proxy by its own server transaction, a new response context is not created for it. Instead, the proxy layer searches its existing response contexts for the server transaction handling the request associated with this CANCEL.  If a matching response context is found, the element MUST immediately return a 200 (OK) response to the CANCEL request.  In this case, the element is acting as a user agent server as defined in Section 8.2.  Furthermore, the element MUST generate CANCEL requests for all pending client transactions in the context as described in Section 16.7 step 10.
"ko": |-
  CANCEL 요청이 자체 서버 트랜잭션에 의해 상태 저장 프록시에서 처리되는 동안 이에 대한 새 응답 컨텍스트가 생성되지 않습니다. 대신, 프록시 계층은 이 CANCEL과 관련된 요청을 처리하는 서버 트랜잭션에 대한 기존 응답 컨텍스트를 검색합니다. 일치하는 응답 컨텍스트가 발견되면 요소는 CANCEL 요청에 대해 즉시 200(OK) 응답을 반환해야 합니다. 이 경우 요소는 섹션 8.2에 정의된 대로 사용자 에이전트 서버 역할을 합니다. 또한 요소는 섹션 16.7의 10단계에 설명된 대로 컨텍스트에서 보류 중인 모든 클라이언트 트랜잭션에 대해 CANCEL 요청을 생성해야 합니다.
