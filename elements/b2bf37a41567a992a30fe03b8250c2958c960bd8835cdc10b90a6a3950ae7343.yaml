"hash": |-
  b2bf37a41567a992a30fe03b8250c2958c960bd8835cdc10b90a6a3950ae7343
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
         The grammar described by this specification is word-based.
         Except where noted otherwise, linear whitespace (LWS) can be
         included between any two adjacent words (token or
         quoted-string), and between adjacent tokens and delimiters
         (tspecials), without changing the interpretation of a field. At
         least one delimiter (tspecials) must exist between any two
         tokens, since they would otherwise be interpreted as a single
         token. However, applications should attempt to follow "common
         form" when generating HTTP constructs, since there exist some
         implementations that fail to accept anything beyond the common
         forms.
"fixed": |-
  - The grammar described by this specification is word-based. Except where noted otherwise, linear whitespace (LWS) can be included between any two adjacent words (token or quoted-string), and between adjacent tokens and delimiters (tspecials), without changing the interpretation of a field. At least one delimiter (tspecials) must exist between any two tokens, since they would otherwise be interpreted as a single token. However, applications should attempt to follow "common form" when generating HTTP constructs, since there exist some implementations that fail to accept anything beyond the common forms.
"ko": |-
  - 본 명세서에서 설명하는 문법은 단어 기반이다. 별도로 명시하지 않는 한 선형 공백(LWS)은 필드 해석을 변경하지 않고 인접한 두 단어(토큰 또는 인용 문자열) 사이와 인접한 토큰과 구분 기호(tspecials) 사이에 포함될 수 있습니다. 두 토큰 사이에는 최소한 하나의 구분 기호(tspecials)가 있어야 합니다. 그렇지 않으면 단일 토큰으로 해석되기 때문입니다. 그러나 응용 프로그램은 HTTP 구성을 생성할 때 "일반 형식"을 따르도록 시도해야 합니다. 일반 형식을 넘어서는 어떤 것도 허용하지 않는 일부 구현이 있기 때문입니다.
