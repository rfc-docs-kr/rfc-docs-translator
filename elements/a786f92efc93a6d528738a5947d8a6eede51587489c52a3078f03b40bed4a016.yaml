"hash": |-
  a786f92efc93a6d528738a5947d8a6eede51587489c52a3078f03b40bed4a016
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     A TCP endpoint MUST implement the basic congestion control algorithms
     slow start, congestion avoidance, and exponential backoff of RTO to
     avoid creating congestion collapse conditions (MUST-19).  RFC 5681
     and RFC 6298 describe the basic algorithms on the IETF Standards
     Track that are broadly applicable.  Multiple other suitable
     algorithms exist and have been widely used.  Many TCP implementations
     support a set of alternative algorithms that can be configured for
     use on the endpoint.  An endpoint MAY implement such alternative
     algorithms provided that the algorithms are conformant with the TCP
     specifications from the IETF Standards Track as described in RFC
     2914, RFC 5033 [7], and RFC 8961 [15] (MAY-18).
"fixed": |-
  A TCP endpoint MUST implement the basic congestion control algorithms slow start, congestion avoidance, and exponential backoff of RTO to avoid creating congestion collapse conditions (MUST-19).  RFC 5681 and RFC 6298 describe the basic algorithms on the IETF Standards Track that are broadly applicable.  Multiple other suitable algorithms exist and have been widely used.  Many TCP implementations support a set of alternative algorithms that can be configured for use on the endpoint.  An endpoint MAY implement such alternative algorithms provided that the algorithms are conformant with the TCP specifications from the IETF Standards Track as described in RFC 2914, RFC 5033 [7], and RFC 8961 [15] (MAY-18).
"ko": |-
  TCP 엔드포인트는 혼잡 붕괴 조건 생성을 방지하기 위해 기본 혼잡 제어 알고리즘 느린 시작, 혼잡 회피 및 RTO의 지수 백오프를 구현해야 합니다(MUST-19). RFC 5681 및 RFC 6298은 광범위하게 적용할 수 있는 IETF 표준 트랙의 기본 알고리즘을 설명합니다. 다른 여러 가지 적합한 알고리즘이 존재하며 널리 사용되었습니다. 많은 TCP 구현은 엔드포인트에서 사용하도록 구성할 수 있는 대체 알고리즘 세트를 지원합니다. 알고리즘이 RFC 2914, RFC 5033 [7] 및 RFC 8961 [15](MAY-18)에 설명된 대로 IETF 표준 트랙의 TCP 사양을 준수하는 경우 엔드포인트는 이러한 대체 알고리즘을 구현할 수 있습니다.
