"hash": |-
  d35f480dfea9420de0be68ebcb504fdb3a93f1b9cd09346d2885cce71f69a626
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     OAuth 2.0 defines a shared-secret method of client authentication but
     also allows for defining and using additional client authentication
     mechanisms when interacting directly with the authorization server.
     This document describes an additional mechanism of client
     authentication utilizing mutual-TLS certificate-based authentication
     that provides better security characteristics than shared secrets.
     While [RFC6749] documents client authentication for requests to the
     token endpoint, extensions to OAuth 2.0 (such as Introspection
     [RFC7662], Revocation [RFC7009], and the Backchannel Authentication
     Endpoint in [OpenID.CIBA]) define endpoints that also utilize client
     authentication, and the mutual-TLS methods defined herein are
     applicable to those endpoints as well.
"fixed": |-
  OAuth 2.0 defines a shared-secret method of client authentication but also allows for defining and using additional client authentication mechanisms when interacting directly with the authorization server. This document describes an additional mechanism of client authentication utilizing mutual-TLS certificate-based authentication that provides better security characteristics than shared secrets. While [RFC6749] documents client authentication for requests to the token endpoint, extensions to OAuth 2.0 (such as Introspection [RFC7662], Revocation [RFC7009], and the Backchannel Authentication Endpoint in [OpenID.CIBA]) define endpoints that also utilize client authentication, and the mutual-TLS methods defined herein are applicable to those endpoints as well.
"ko": |-
  OAuth 2.0은 클라이언트 인증의 공유 비밀 방법을 정의하지만 인증 서버와 직접 상호 작용할 때 추가 클라이언트 인증 메커니즘을 정의하고 사용할 수도 있습니다. 이 문서에서는 공유 비밀보다 더 나은 보안 특성을 제공하는 상호 TLS 인증서 기반 인증을 활용하는 클라이언트 인증의 추가 메커니즘을 설명합니다. [RFC6749]는 토큰 끝점에 대한 요청에 대한 클라이언트 인증을 문서화하는 반면, OAuth 2.0에 대한 확장(예: Introspection [RFC7662], Revocation [RFC7009] 및 [OpenID.CIBA]의 백채널 인증 끝점)은 클라이언트 인증도 활용하는 끝점을 정의합니다. , 여기에 정의된 상호 TLS 방법은 해당 엔드포인트에도 적용 가능합니다.
