"hash": |-
  5421f7715fd7601638d64975f1c19e0c93bdd88f4484ff2e1c7a0b27f8ceca6b
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
      4. Relative efficiency: Cryptographic operations tend to be highly
         CPU intensive, particularly public key operations. For this
         reason, the TLS protocol has incorporated an optional session
         caching scheme to reduce the number of connections that need to
         be established from scratch. Additionally, care has been taken to
         reduce network activity.
"fixed": |-
  4. Relative efficiency: Cryptographic operations tend to be highly  -   CPU intensive, particularly public key operations. For this reason, the TLS protocol has incorporated an optional session caching scheme to reduce the number of connections that need to be established from scratch. Additionally, care has been taken to reduce network activity.
"ko": |-
  4. 상대적 효율성: 암호화 작업은 CPU를 많이 사용하는 경향이 있으며, 특히 공개 키 작업이 그렇습니다. 이러한 이유로 TLS 프로토콜은 처음부터 설정해야 하는 연결 수를 줄이기 위해 선택적 세션 캐싱 체계를 통합했습니다. 또한 네트워크 활동을 줄이기 위해 주의를 기울였습니다.
