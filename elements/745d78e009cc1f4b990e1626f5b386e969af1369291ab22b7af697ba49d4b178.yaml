"hash": |-
  745d78e009cc1f4b990e1626f5b386e969af1369291ab22b7af697ba49d4b178
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Reclaiming previously assigned values for reuse is tricky, because
     doing so can lead to interoperability problems with deployed systems
     still using the assigned values.  Moreover, it can be extremely
     difficult to determine the extent of deployment of systems making use
     of a particular value.  However, in cases where the namespace is
     running out of unassigned values and additional ones are needed, it
     may be desirable to attempt to reclaim unused values.  When
     reclaiming unused values, the following (at a minimum) should be
     considered:
"fixed": |-
  Reclaiming previously assigned values for reuse is tricky, because doing so can lead to interoperability problems with deployed systems still using the assigned values.  Moreover, it can be extremely difficult to determine the extent of deployment of systems making use of a particular value.  However, in cases where the namespace is running out of unassigned values and additional ones are needed, it may be desirable to attempt to reclaim unused values.  When reclaiming unused values, the following (at a minimum) should be considered:
"ko": |-
  재사용을 위해 이전에 할당된 값을 회수하는 것은 까다롭습니다. 그렇게 하면 여전히 할당된 값을 사용하는 배포된 시스템에 상호 운용성 문제가 발생할 수 있기 때문입니다. 더욱이 특정 가치를 활용하는 시스템 배포 범위를 결정하는 것은 매우 어려울 수 있습니다. 그러나 네임스페이스에 할당되지 않은 값이 부족하고 추가 값이 필요한 경우 사용되지 않은 값을 회수하는 것이 바람직할 수 있습니다. 사용되지 않은 값을 회수할 때 최소한 다음 사항을 고려해야 합니다.
