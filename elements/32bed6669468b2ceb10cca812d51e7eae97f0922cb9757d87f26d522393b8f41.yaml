"hash": |-
  32bed6669468b2ceb10cca812d51e7eae97f0922cb9757d87f26d522393b8f41
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     An entity tag can be abused in ways that create privacy risks.  For
     example, a site might deliberately construct a semantically invalid
     entity tag that is unique to the user or user agent, send it in a
     cacheable response with a long freshness time, and then read that
     entity tag in later conditional requests as a means of re-identifying
     that user or user agent.  Such an identifying tag would become a
     persistent identifier for as long as the user agent retained the
     original cache entry.  User agents that cache representations ought
     to ensure that the cache is cleared or replaced whenever the user
     performs privacy-maintaining actions, such as clearing stored cookies
     or changing to a private browsing mode.
"fixed": |-
  An entity tag can be abused in ways that create privacy risks.  For example, a site might deliberately construct a semantically invalid entity tag that is unique to the user or user agent, send it in a cacheable response with a long freshness time, and then read that entity tag in later conditional requests as a means of re-identifying that user or user agent.  Such an identifying tag would become a persistent identifier for as long as the user agent retained the original cache entry.  User agents that cache representations ought to ensure that the cache is cleared or replaced whenever the user performs privacy-maintaining actions, such as clearing stored cookies or changing to a private browsing mode.
"ko": |-
  엔터티 태그는 개인 정보 보호 위험을 초래하는 방식으로 남용될 수 있습니다. 예를 들어, 사이트는 사용자 또는 사용자 에이전트에 고유한 의미상 유효하지 않은 엔터티 태그를 의도적으로 구성하고 이를 긴 신선도 시간으로 캐시 가능한 응답으로 보낸 다음 나중에 조건부 요청에서 해당 엔터티 태그를 읽을 수 있습니다. - 해당 사용자 또는 사용자 에이전트를 식별합니다. 이러한 식별 태그는 사용자 에이전트가 원래 캐시 항목을 유지하는 한 영구 식별자가 됩니다. 표현을 캐시하는 사용자 에이전트는 사용자가 저장된 쿠키를 지우거나 개인 브라우징 모드로 변경하는 등 개인 정보 보호 작업을 수행할 때마다 캐시가 지워지거나 교체되도록 해야 합니다.
