"hash": |-
  562a96aaec41953f460e65bef76185833c5a2b77a1a4d81b52d41f79ef936276
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Explicit flow control is not required for PPSPP over UDP.  In the
     case of video on demand, the receiver explicitly requests the content
     from peers, and is therefore in control of how much data is coming
     towards it.  In the case of live streaming, where a push model may be
     used, the amount of data incoming is limited to the stream bitrate,
     which the receiver must be able to process for a continuous playback.
     Should, for any reason, the receiver get saturated with data, the
     congestion control at the sender side will detect the situation and
     adjust the sending rate accordingly.
"fixed": |-
  Explicit flow control is not required for PPSPP over UDP.  In the case of video on demand, the receiver explicitly requests the content from peers, and is therefore in control of how much data is coming towards it.  In the case of live streaming, where a push model may be used, the amount of data incoming is limited to the stream bitrate, which the receiver must be able to process for a continuous playback. Should, for any reason, the receiver get saturated with data, the congestion control at the sender side will detect the situation and adjust the sending rate accordingly.
"ko": |-
  UDP를 통한 PPSPP에는 명시적인 흐름 제어가 필요하지 않습니다. 주문형 비디오의 경우 수신자는 피어에게 콘텐츠를 명시적으로 요청하므로 해당 콘텐츠로 들어오는 데이터의 양을 제어할 수 있습니다. 푸시 모델을 사용할 수 있는 라이브 스트리밍의 경우 수신되는 데이터 양은 스트림 비트 전송률로 제한되며, 수신기는 연속 재생을 위해 이를 처리할 수 있어야 합니다. 어떤 이유로든 수신자가 데이터로 포화되면 발신자 측의 혼잡 제어가 상황을 감지하고 그에 따라 전송 속도를 조정합니다.
