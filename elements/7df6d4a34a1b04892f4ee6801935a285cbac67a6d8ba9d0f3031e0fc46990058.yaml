"hash": |-
  7df6d4a34a1b04892f4ee6801935a285cbac67a6d8ba9d0f3031e0fc46990058
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
        In this case, a FIN segment can be constructed and placed on the
        outgoing segment queue.  No further SENDs from the user will be
        accepted by the TCP implementation, and it enters the FIN-WAIT-1
        state.  RECEIVEs are allowed in this state.  All segments
        preceding and including FIN will be retransmitted until
        acknowledged.  When the other TCP peer has both acknowledged the
        FIN and sent a FIN of its own, the first TCP peer can ACK this
        FIN.  Note that a TCP endpoint receiving a FIN will ACK but not
        send its own FIN until its user has CLOSED the connection also.
"fixed": |-
  - In this case, a FIN segment can be constructed and placed on the outgoing segment queue.  No further SENDs from the user will be accepted by the TCP implementation, and it enters the FIN-WAIT-1 state.  RECEIVEs are allowed in this state.  All segments preceding and including FIN will be retransmitted until acknowledged.  When the other TCP peer has both acknowledged the FIN and sent a FIN of its own, the first TCP peer can ACK this FIN.  Note that a TCP endpoint receiving a FIN will ACK but not send its own FIN until its user has CLOSED the connection also.
"ko": |-
  - 이 경우 FIN 세그먼트를 구성하여 나가는 세그먼트 큐에 배치할 수 있습니다. 사용자의 더 이상 SEND는 TCP 구현에 의해 허용되지 않으며 FIN-WAIT-1 상태로 들어갑니다. 이 상태에서는 RECEIVE가 허용됩니다. FIN 이전 및 FIN을 포함한 모든 세그먼트는 승인될 때까지 재전송됩니다. 다른 TCP 피어가 FIN을 확인하고 자체 FIN을 보낸 경우 첫 번째 TCP 피어가 이 FIN을 ACK할 수 있습니다. FIN을 수신하는 TCP 엔드포인트는 ACK를 보내지만 사용자가 연결을 종료할 때까지 자체 FIN을 보내지 않습니다.
