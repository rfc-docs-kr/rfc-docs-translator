"hash": |-
  9b4d68f731a10238031c7e15723b7064a31f708908869c3ce52d6ac223b70c2c
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     (Note that this use of the identity KDF is a technicality.  The
     complete picture is that ECDH is employed with a non-trivial KDF
     because TLS does not directly use the premaster secret for anything
     other than for computing the master secret.  As of TLS 1.0 [2] and
     1.1 [3], this means that the MD5- and SHA-1-based TLS PRF serves as a
     KDF; it is conceivable that future TLS versions or new TLS extensions
     introduced in the future may vary this computation.)
"fixed": |-
  (Note that this use of the identity KDF is a technicality.  The complete picture is that ECDH is employed with a non-trivial KDF because TLS does not directly use the premaster secret for anything other than for computing the master secret.  As of TLS 1.0 [2] and 1.1 [3], this means that the MD5- and SHA-1-based TLS PRF serves as a KDF; it is conceivable that future TLS versions or new TLS extensions introduced in the future may vary this computation.)
"ko": |-
  (이러한 ID KDF 사용은 기술적인 문제입니다. 전체 그림은 TLS가 마스터 비밀번호를 계산하는 것 이외의 다른 용도로 프리마스터 비밀번호를 직접 사용하지 않기 때문에 ECDH가 중요하지 않은 KDF와 함께 사용된다는 것입니다. TLS 1.0부터 [2] 및 1.1 [3], 이는 MD5 및 SHA-1 기반 TLS PRF가 KDF 역할을 한다는 것을 의미합니다. 향후 TLS 버전이나 향후 도입될 새로운 TLS 확장이 이 계산을 변경할 수 있다고 생각할 수 있습니다.
