"hash": |-
  f4d7fb98f1175046ab146bba49eb54518d6e4a77caa0c6e4c81230a58b70e4a7
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
        Tutorial: A digital signature should have these properties:
        -  Be capable of being verified. (See: validate vs. verify.)
        -  Be bound to the signed data object in such a way that if the
           data is changed, then when an attempt is made to verify the
           signature, it will be seen as not authentic. (In some schemes,
           the signature is appended to the signed object as stated by
           definition 2, but in other it, schemes is not.)
        -  Uniquely identify a system entity as being the signer.
        -  Be under the signer's sole control, so that it cannot be
           created by any other entity.
"fixed": |-
  - Tutorial: A digital signature should have these properties: -  Be capable of being verified. (See: validate vs. verify.) -  Be bound to the signed data object in such a way that if the data is changed, then when an attempt is made to verify the signature, it will be seen as not authentic. (In some schemes, the signature is appended to the signed object as stated by definition 2, but in other it, schemes is not.) -  Uniquely identify a system entity as being the signer. -  Be under the signer's sole control, so that it cannot be created by any other entity.
"ko": |-
  - 튜토리얼: 디지털 서명에는 다음과 같은 속성이 있어야 합니다. - 확인이 가능해야 합니다. (참조: 유효성 검사 및 확인) - 데이터가 변경된 후 서명을 확인하려고 시도하면 인증되지 않은 것으로 표시되는 방식으로 서명된 데이터 개체에 바인딩됩니다. (일부 체계에서는 정의 2에 명시된 대로 서명이 서명된 개체에 추가되지만 다른 체계에서는 그렇지 않습니다.) - 시스템 엔터티를 서명자로 고유하게 식별합니다. - 서명자의 단독 통제 하에 있으므로 다른 주체가 생성할 수 없습니다.
