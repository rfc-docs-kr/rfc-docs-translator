"hash": |-
  50e4271d406a52b0181cab317ee456d6fb74fb9800ad0a8b71d9943286ed2cae
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The IDLE command is terminated by the receipt of a "DONE"
     continuation from the client; such response satisfies the server's
     continuation request.  At that point, the server MAY send any
     remaining queued untagged responses and then MUST immediately send
     the tagged response to the IDLE command and prepare to process other
     commands.  As for other commands, the processing of any new command
     may cause the sending of unsolicited untagged responses, subject to
     the ambiguity limitations.  The client MUST NOT send a command while
     the server is waiting for the DONE, since the server will not be able
     to distinguish a command from a continuation.
"fixed": |-
  The IDLE command is terminated by the receipt of a "DONE" continuation from the client; such response satisfies the server's continuation request.  At that point, the server MAY send any remaining queued untagged responses and then MUST immediately send the tagged response to the IDLE command and prepare to process other commands.  As for other commands, the processing of any new command may cause the sending of unsolicited untagged responses, subject to the ambiguity limitations.  The client MUST NOT send a command while the server is waiting for the DONE, since the server will not be able to distinguish a command from a continuation.
"ko": |-
  IDLE 명령은 클라이언트로부터 "DONE" 연속을 수신하면 종료됩니다. 이러한 응답은 서버의 계속 요청을 만족시킵니다.  이 시점에서 서버는 대기열에 남아 있는 태그가 지정되지 않은 나머지 응답을 보낼 수 있으며 그런 다음 IDLE 명령에 태그가 지정된 응답을 즉시 보내고 다른 명령을 처리할 준비를 해야 합니다.  다른 명령의 경우, 새 명령을 처리하면 모호성 제한에 따라 원치 않는 태그 없는 응답이 전송될 수 있습니다.  클라이언트는 서버가 DONE을 기다리는 동안 명령을 보내면 안 됩니다. 서버는 명령을 연속과 구별할 수 없기 때문입니다.
