"hash": |-
  35a3662c280322f2ddf383ea3158c4a7a7f1f5c53643f6c2a7a6e3274611031b
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     When more than one conditional request header field is present in a
     request, the order in which the fields are evaluated becomes
     important.  In practice, the fields defined in this document are
     consistently implemented in a single, logical order, since "lost
     update" preconditions have more strict requirements than cache
     validation, a validated cache is more efficient than a partial
     response, and entity tags are presumed to be more accurate than date
     validators.
"fixed": |-
  When more than one conditional request header field is present in a request, the order in which the fields are evaluated becomes important.  In practice, the fields defined in this document are consistently implemented in a single, logical order, since "lost update" preconditions have more strict requirements than cache validation, a validated cache is more efficient than a partial response, and entity tags are presumed to be more accurate than date validators.
"ko": |-
  요청에 둘 이상의 조건부 요청 헤더 필드가 있는 경우 필드가 평가되는 순서가 중요해집니다. 실제로 이 문서에 정의된 필드는 단일 논리적 순서로 일관되게 구현됩니다. 왜냐하면 "업데이트 손실" 전제 조건은 캐시 유효성 검사보다 더 엄격한 요구 사항을 갖고 있고, 검증된 캐시는 부분 응답보다 효율적이며, 엔터티 태그는 다음과 같은 것으로 가정되기 때문입니다. 날짜 유효성 검사기보다 더 정확합니다.
