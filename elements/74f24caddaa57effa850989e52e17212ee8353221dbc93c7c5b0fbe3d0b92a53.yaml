"hash": |-
  74f24caddaa57effa850989e52e17212ee8353221dbc93c7c5b0fbe3d0b92a53
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     One of the benefits of QUIC is avoidance of head-of-line blocking
     across multiple streams.  When a packet loss occurs, only streams
     with data in that packet are blocked waiting for a retransmission to
     be received, while other streams can continue making progress.  Note
     that when data from multiple streams is included in a single QUIC
     packet, loss of that packet blocks all those streams from making
     progress.  Implementations are advised to include as few streams as
     necessary in outgoing packets without losing transmission efficiency
     to underfilled packets.
"fixed": |-
  One of the benefits of QUIC is avoidance of head-of-line blocking across multiple streams.  When a packet loss occurs, only streams with data in that packet are blocked waiting for a retransmission to be received, while other streams can continue making progress.  Note that when data from multiple streams is included in a single QUIC packet, loss of that packet blocks all those streams from making progress.  Implementations are advised to include as few streams as necessary in outgoing packets without losing transmission efficiency to underfilled packets.
"ko": |-
  QUIC의 장점 중 하나는 여러 스트림에 걸쳐 HOL(head-of-line) 차단을 방지한다는 것입니다. 패킷 손실이 발생하면 해당 패킷에 데이터가 있는 스트림만 차단되어 재전송이 수신될 때까지 기다리며 다른 스트림은 계속해서 진행할 수 있습니다. 여러 스트림의 데이터가 단일 QUIC 패킷에 포함된 경우 해당 패킷이 손실되면 모든 스트림의 진행이 차단됩니다. 구현 시에는 언더필 패킷으로 인해 전송 효율성을 잃지 않고 나가는 패킷에 필요한 만큼 적은 수의 스트림을 포함하는 것이 좋습니다.
