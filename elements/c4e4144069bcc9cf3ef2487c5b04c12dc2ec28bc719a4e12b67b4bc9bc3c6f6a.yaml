"hash": |-
  c4e4144069bcc9cf3ef2487c5b04c12dc2ec28bc719a4e12b67b4bc9bc3c6f6a
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Another issue is the potential for catastrophic failures when a
     single elliptic curve is widely used.  In this case, an attack on the
     elliptic curve might result in the compromise of a large number of
     keys.  Again, this concern may need to be balanced against efficiency
     and interoperability improvements associated with widely-used curves.
     Substantial additional information on elliptic curve choice can be
     found in [5], [6], [7], and [11].
"fixed": |-
  Another issue is the potential for catastrophic failures when a single elliptic curve is widely used.  In this case, an attack on the elliptic curve might result in the compromise of a large number of keys.  Again, this concern may need to be balanced against efficiency and interoperability improvements associated with widely-used curves. Substantial additional information on elliptic curve choice can be found in [5], [6], [7], and [11].
"ko": |-
  또 다른 문제는 단일 타원 곡선을 널리 사용할 경우 치명적인 오류가 발생할 가능성이 있다는 것입니다. 이 경우 타원 곡선에 대한 공격으로 인해 많은 수의 키가 손상될 수 있습니다. 다시 말하지만, 이러한 우려는 널리 사용되는 곡선과 관련된 효율성 및 상호 운용성 향상과 균형을 이루어야 할 수도 있습니다. 타원 곡선 선택에 대한 실질적인 추가 정보는 [5], [6], [7] 및 [11]에서 찾을 수 있습니다.
