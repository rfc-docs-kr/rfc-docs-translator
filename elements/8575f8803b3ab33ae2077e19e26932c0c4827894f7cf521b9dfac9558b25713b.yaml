"hash": |-
  8575f8803b3ab33ae2077e19e26932c0c4827894f7cf521b9dfac9558b25713b
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     At line 4, TCP Peer A responds with an empty segment containing an
     ACK for TCP Peer B's SYN; and in line 5, TCP Peer A sends some data.
     Note that the sequence number of the segment in line 5 is the same as
     in line 4 because the ACK does not occupy sequence number space (if
     it did, we would wind up ACKing ACKs!).
"fixed": |-
  At line 4, TCP Peer A responds with an empty segment containing an ACK for TCP Peer B's SYN; and in line 5, TCP Peer A sends some data. Note that the sequence number of the segment in line 5 is the same as in line 4 because the ACK does not occupy sequence number space (if it did, we would wind up ACKing ACKs!).
"ko": |-
  4행에서 TCP 피어 A는 TCP 피어 B의 SYN에 대한 ACK가 포함된 빈 세그먼트로 응답합니다. 5번째 줄에서는 TCP 피어 A가 일부 데이터를 보냅니다. ACK가 시퀀스 번호 공간을 차지하지 않기 때문에 라인 5에 있는 세그먼트의 시퀀스 번호는 라인 4와 동일합니다(만약 그렇다면 우리는 ACK를 보내는 ACK를 종료할 것입니다!).
