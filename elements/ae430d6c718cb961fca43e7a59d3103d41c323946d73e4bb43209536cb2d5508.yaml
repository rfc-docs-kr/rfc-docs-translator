"hash": |-
  ae430d6c718cb961fca43e7a59d3103d41c323946d73e4bb43209536cb2d5508
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
        This is the first message the client can send after receiving a
        server hello done message.  This message is only sent if the
        server requests a certificate.  If no suitable certificate is
        available, the client SHOULD send a certificate message containing
        no certificates.  That is, the certificate_list structure has a
        length of zero.  If client authentication is required by the
        server for the handshake to continue, it may respond with a fatal
        handshake failure alert.  Client certificates are sent using the
        Certificate structure defined in Section 7.4.2.
"fixed": |-
  - This is the first message the client can send after receiving a server hello done message.  This message is only sent if the server requests a certificate.  If no suitable certificate is available, the client SHOULD send a certificate message containing no certificates.  That is, the certificate_list structure has a length of zero.  If client authentication is required by the server for the handshake to continue, it may respond with a fatal handshake failure alert.  Client certificates are sent using the Certificate structure defined in Section 7.4.2.
"ko": |-
  - 클라이언트가 서버의 Hello Done 메시지를 받은 후 보낼 수 있는 첫 번째 메시지입니다. 이 메시지는 서버가 인증서를 요청하는 경우에만 전송됩니다. 적합한 인증서를 사용할 수 없는 경우 클라이언트는 인증서가 포함되지 않은 인증서 메시지를 보내야 합니다. 즉, Certificate_list 구조의 길이는 0입니다. 핸드셰이크를 계속하기 위해 서버에서 클라이언트 인증이 필요한 경우 치명적인 핸드셰이크 실패 경고로 응답할 수 있습니다. 클라이언트 인증서는 섹션 7.4.2에 정의된 인증서 구조를 사용하여 전송됩니다.
