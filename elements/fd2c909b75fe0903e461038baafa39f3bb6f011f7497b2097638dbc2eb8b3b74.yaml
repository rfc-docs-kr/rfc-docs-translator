"hash": |-
  fd2c909b75fe0903e461038baafa39f3bb6f011f7497b2097638dbc2eb8b3b74
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The nature of a proxy is often to act as a "man in the middle", while
     security is often about preventing the existence of one.  This
     section provides clients with the possibility to use proxies even
     when applying secure transports (TLS) between the RTSP agents.  The
     TLS proxy mechanism allows for server and proxy identification using
     certificates.  However, the client cannot be identified based on
     certificates.  The client needs to select between using the procedure
     specified below or using a TLS connection directly (bypassing any
     proxies) to the server.  The choice may be dependent on policies.
"fixed": |-
  The nature of a proxy is often to act as a "man in the middle", while security is often about preventing the existence of one.  This section provides clients with the possibility to use proxies even when applying secure transports (TLS) between the RTSP agents.  The TLS proxy mechanism allows for server and proxy identification using certificates.  However, the client cannot be identified based on certificates.  The client needs to select between using the procedure specified below or using a TLS connection directly (bypassing any proxies) to the server.  The choice may be dependent on policies.
"ko": |-
  프록시의 본질은 종종 "중간자" 역할을 하는 반면, 보안은 종종 프록시의 존재를 방지하는 것입니다. 이 섹션에서는 클라이언트가 RTSP 에이전트 간에 보안 전송(TLS)을 적용하는 경우에도 프록시를 사용할 수 있는 가능성을 제공합니다. TLS 프록시 메커니즘은 인증서를 사용하여 서버 및 프록시 식별을 허용합니다. 그러나 인증서를 기반으로 클라이언트를 식별할 수는 없습니다. 클라이언트는 아래에 지정된 절차를 사용하거나 서버에 직접 TLS 연결(프록시 우회)을 사용하는 것 중에서 선택해야 합니다. 선택은 정책에 따라 달라질 수 있습니다.
