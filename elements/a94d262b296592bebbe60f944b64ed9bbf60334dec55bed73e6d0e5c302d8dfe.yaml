"hash": |-
  a94d262b296592bebbe60f944b64ed9bbf60334dec55bed73e6d0e5c302d8dfe
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Implementers should not mix quantum-resistant key management
     algorithms with their non-quantum-resistant counterparts.  For
     example, the same content should not be protected with
     KeyTransRecipientInfo and KeyTransPSKRecipientInfo.  Likewise, the
     same content should not be protected with KeyAgreeRecipientInfo and
     KeyAgreePSKRecipientInfo.  Doing so would make the content vulnerable
     to the future invention of a large-scale quantum computer.
"fixed": |-
  Implementers should not mix quantum-resistant key management algorithms with their non-quantum-resistant counterparts.  For example, the same content should not be protected with KeyTransRecipientInfo and KeyTransPSKRecipientInfo.  Likewise, the same content should not be protected with KeyAgreeRecipientInfo and KeyAgreePSKRecipientInfo.  Doing so would make the content vulnerable to the future invention of a large-scale quantum computer.
"ko": |-
  구현자는 양자 저항 키 관리 알고리즘과 비양자 저항 대응 알고리즘을 혼합해서는 안 됩니다.  예를 들어 동일한 콘텐츠를 KeyTransRecipientInfo 및 KeyTransPSKRecipientInfo로 보호하면 안 됩니다.  마찬가지로 동일한 콘텐츠를 KeyAgreeRecipientInfo 및 KeyAgreePSKRecipientInfo로 보호해서는 안 됩니다.  그렇게 하면 해당 콘텐츠가 향후 대규모 양자 컴퓨터 발명에 취약해지게 됩니다.
