"hash": |-
  6845d72ec6e6ce3b2e51a2ecc0be203d22bad56d1e9b19769a239dc138841563
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     As CoAP was designed according to the REST architecture [REST], and
     thus exhibits functionality similar to that of the HTTP protocol, it
     is quite straightforward to map from CoAP to HTTP and from HTTP to
     CoAP.  Such a mapping may be used to realize an HTTP REST interface
     using CoAP or to convert between HTTP and CoAP.  This conversion can
     be carried out by a cross-protocol proxy ("cross-proxy"), which
     converts the Method or Response Code, media type, and options to the
     corresponding HTTP feature.  Section 10 provides more detail about
     HTTP mapping.
"fixed": |-
  As CoAP was designed according to the REST architecture [REST], and thus exhibits functionality similar to that of the HTTP protocol, it is quite straightforward to map from CoAP to HTTP and from HTTP to CoAP.  Such a mapping may be used to realize an HTTP REST interface using CoAP or to convert between HTTP and CoAP.  This conversion can be carried out by a cross-protocol proxy ("cross-proxy"), which converts the Method or Response Code, media type, and options to the corresponding HTTP feature.  Section 10 provides more detail about HTTP mapping.
"ko": |-
  CoAP는 REST 아키텍처[REST]에 따라 설계되어 HTTP 프로토콜과 유사한 기능을 나타내기 때문에 CoAP에서 HTTP로, HTTP에서 CoAP로 매핑하는 것이 매우 간단합니다. 이러한 매핑은 CoAP를 이용하여 HTTP REST 인터페이스를 구현하거나 HTTP와 CoAP 간 변환을 위해 사용될 수 있다. 이 변환은 메소드 또는 응답 코드, 미디어 유형 및 옵션을 해당 HTTP 기능으로 변환하는 교차 프로토콜 프록시("교차 프록시")에 의해 수행될 수 있습니다. 섹션 10에서는 HTTP 매핑에 대한 자세한 내용을 제공합니다.
