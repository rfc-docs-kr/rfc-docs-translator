"hash": |-
  3e5623c732b0c8f638845cfdfd2e381bb762096585d9e6738a252b5c2f0bfb59
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     In particular, a malicious Peer T could send PEX_RES messages to
     well-behaved Peer A with addresses of Peers B1..Bn; on receipt, Peer
     A could send a HANDSHAKE to all these peers.  So, in the worst case,
     a single datagram results in N datagrams.  The actual damage depends
     on Peer A's behavior.  For example, when Peer A already has
     sufficient connections, it may not connect to the offered ones at
     all; but if it is a fresh peer, it may connect to all directly.
"fixed": |-
  In particular, a malicious Peer T could send PEX_RES messages to well-behaved Peer A with addresses of Peers B1..Bn; on receipt, Peer A could send a HANDSHAKE to all these peers.  So, in the worst case, a single datagram results in N datagrams.  The actual damage depends on Peer A's behavior.  For example, when Peer A already has sufficient connections, it may not connect to the offered ones at all; but if it is a fresh peer, it may connect to all directly.
"ko": |-
  특히, 악의적인 피어 T는 피어 B1..Bn의 주소를 사용하여 선의로 행동하는 피어 A에게 PEX_RES 메시지를 보낼 수 있습니다. 수신 시 피어 A는 이러한 모든 피어에게 HANDSHAKE를 보낼 수 있습니다. 따라서 최악의 경우 단일 데이터그램은 N개의 데이터그램이 됩니다. 실제 피해는 피어 A의 행동에 따라 달라집니다. 예를 들어, 피어 A가 이미 충분한 연결을 갖고 있는 경우 제공된 피어 A에 전혀 연결되지 않을 수 있습니다. 그러나 새로운 피어인 경우 모든 항목에 직접 연결할 수 있습니다.
