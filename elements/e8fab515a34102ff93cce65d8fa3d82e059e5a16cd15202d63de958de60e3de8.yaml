"hash": |-
  e8fab515a34102ff93cce65d8fa3d82e059e5a16cd15202d63de958de60e3de8
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Using encryption-only for confidentiality is allowed by ESP.
     However, it should be noted that in general, this will provide
     defense only against passive attackers.  Using encryption without a
     strong integrity mechanism on top of it (either in ESP or separately
     via AH) may render the confidentiality service insecure against some
     forms of active attacks [Bel96, Kra01].  Moreover, an underlying
     integrity service, such as AH, applied before encryption does not
     necessarily protect the encryption-only confidentiality against
     active attackers [Kra01].  ESP allows encryption-only SAs because
     this may offer considerably better performance and still provide
"fixed": |-
  Using encryption-only for confidentiality is allowed by ESP. However, it should be noted that in general, this will provide defense only against passive attackers.  Using encryption without a strong integrity mechanism on top of it (either in ESP or separately via AH) may render the confidentiality service insecure against some forms of active attacks [Bel96, Kra01].  Moreover, an underlying integrity service, such as AH, applied before encryption does not necessarily protect the encryption-only confidentiality against active attackers [Kra01].  ESP allows encryption-only SAs because this may offer considerably better performance and still provide
"ko": |-
  기밀성을 위해 암호화 전용을 사용하는 것은 ESP에서 허용됩니다. 그러나 일반적으로 이는 수동적 공격자에 대해서만 방어를 제공한다는 점에 유의해야 합니다.  강력한 무결성 메커니즘 없이 암호화를 사용하면(ESP에서 또는 별도로 AH를 통해) 기밀성 서비스가 일부 형태의 활성 공격에 대해 안전하지 않게 될 수 있습니다[Bel96, Kra01].  또한, 암호화 이전에 적용되는 AH와 같은 기본 무결성 서비스는 적극적인 공격자로부터 암호화 전용 기밀성을 반드시 보호하지는 않습니다[Kra01].  ESP는 훨씬 더 나은 성능을 제공하면서도 여전히 암호화 전용 SA를 제공할 수 있기 때문에 이를 허용합니다.
