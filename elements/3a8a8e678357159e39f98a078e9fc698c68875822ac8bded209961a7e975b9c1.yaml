"hash": |-
  3a8a8e678357159e39f98a078e9fc698c68875822ac8bded209961a7e975b9c1
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Also, like 'text', 'name' is really an abbreviated notation for
     either 'nameWithoutLanguage' or 'nameWithLanguage'.  That is, all IPP
     objects and Clients MUST support both the 'nameWithoutLanguage' and
     'nameWithLanguage' attribute syntaxes.  However, in actual usage and
     protocol execution, IPP objects and Clients accept and return only
     one of the two syntaxes per attribute.  The syntax 'name' never
     appears "on-the-wire".
"fixed": |-
  Also, like 'text', 'name' is really an abbreviated notation for either 'nameWithoutLanguage' or 'nameWithLanguage'.  That is, all IPP objects and Clients MUST support both the 'nameWithoutLanguage' and 'nameWithLanguage' attribute syntaxes.  However, in actual usage and protocol execution, IPP objects and Clients accept and return only one of the two syntaxes per attribute.  The syntax 'name' never appears "on-the-wire".
"ko": |-
  또한 'text'와 마찬가지로 'name'은 실제로 'nameWithoutLanguage' 또는 'nameWithLanguage'의 축약 표기법입니다. 즉, 모든 IPP 객체와 클라이언트는 'nameWithoutLanguage' 및 'nameWithLanguage' 속성 구문을 모두 지원해야 합니다. 그러나 실제 사용 및 프로토콜 실행에서 IPP 개체와 클라이언트는 속성당 두 가지 구문 중 하나만 허용하고 반환합니다. 'name' 구문은 "on-the-wire"로 표시되지 않습니다.
