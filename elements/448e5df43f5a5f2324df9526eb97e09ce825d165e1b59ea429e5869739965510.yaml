"hash": |-
  448e5df43f5a5f2324df9526eb97e09ce825d165e1b59ea429e5869739965510
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Base64url Encoding
        Base64 encoding using the URL- and filename-safe character set
        defined in Section 5 of RFC 4648 [RFC4648], with all trailing '='
        characters omitted (as permitted by Section 3.2) and without the
        inclusion of any line breaks, whitespace, or other additional
        characters.  Note that the base64url encoding of the empty octet
        sequence is the empty string.  (See Appendix C for notes on
        implementing base64url encoding without padding.)
"fixed": |-
  Base64url Encoding  -  Base64 encoding using the URL- and filename-safe character set defined in Section 5 of RFC 4648 [RFC4648], with all trailing '=' characters omitted (as permitted by Section 3.2) and without the inclusion of any line breaks, whitespace, or other additional characters.  Note that the base64url encoding of the empty octet sequence is the empty string.  (See Appendix C for notes on implementing base64url encoding without padding.)
"ko": |-
  Base64url 인코딩 - RFC 4648 [RFC4648]의 섹션 5에 정의된 URL 및 파일 이름 안전 문자 집합을 사용하는 Base64 인코딩으로, 모든 후행 '=' 문자는 생략(섹션 3.2에서 허용)하고 줄 바꿈, 공백 또는 기타 추가 문자는 포함하지 않습니다. 빈 옥텟 시퀀스의 base64url 인코딩은 빈 문자열입니다. (패딩 없이 base64url 인코딩을 구현하는 방법에 대한 참고 사항은 부록 C를 참조하세요.)
