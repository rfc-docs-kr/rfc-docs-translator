"hash": |-
  31ab9e52daa6913e8a23d376b34083a998132338e5d5ab7c2ecb112be624c660
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
        Note: If the client is sending data, server implementations on TCP
        should be careful to ensure that the client acknowledges receipt
        of the packet(s) containing the response prior to closing the
        input connection. If the client continues sending data to the
        server after the close, the server's controller will send a reset
        packet to the client, which may erase the client's unacknowledged
        input buffers before they can be read and interpreted by the HTTP
        application.
"fixed": |-
  - Note: If the client is sending data, server implementations on TCP should be careful to ensure that the client acknowledges receipt of the packet(s) containing the response prior to closing the input connection. If the client continues sending data to the server after the close, the server's controller will send a reset packet to the client, which may erase the client's unacknowledged input buffers before they can be read and interpreted by the HTTP application.
"ko": |-
  - 참고: 클라이언트가 데이터를 보내는 경우 TCP의 서버 구현은 입력 연결을 닫기 전에 클라이언트가 응답이 포함된 패킷의 수신을 확인하도록 주의해야 합니다. 클라이언트가 닫힌 후에도 계속해서 서버에 데이터를 보내는 경우 서버의 컨트롤러는 클라이언트에 재설정 패킷을 보내며, 이로 인해 클라이언트의 확인되지 않은 입력 버퍼가 HTTP 애플리케이션에서 읽고 해석되기 전에 지워질 수 있습니다.
