"hash": |-
  364d51bc4d3799929dc44621caa4984e9928df35452089920a4e39da2c3b1d22
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Transactions have a client side and a server side.  The client side
     is known as a client transaction and the server side as a server
     transaction.  The client transaction sends the request, and the
     server transaction sends the response.  The client and server
     transactions are logical functions that are embedded in any number of
     elements.  Specifically, they exist within user agents and stateful
     proxy servers.  Consider the example in Section 4.  In this example,
     the UAC executes the client transaction, and its outbound proxy
     executes the server transaction.  The outbound proxy also executes a
     client transaction, which sends the request to a server transaction
     in the inbound proxy.  That proxy also executes a client transaction,
     which in turn sends the request to a server transaction in the UAS.
     This is shown in Figure 4.
"fixed": |-
  Transactions have a client side and a server side.  The client side is known as a client transaction and the server side as a server transaction.  The client transaction sends the request, and the server transaction sends the response.  The client and server transactions are logical functions that are embedded in any number of elements.  Specifically, they exist within user agents and stateful proxy servers.  Consider the example in Section 4.  In this example, the UAC executes the client transaction, and its outbound proxy executes the server transaction.  The outbound proxy also executes a client transaction, which sends the request to a server transaction in the inbound proxy.  That proxy also executes a client transaction, which in turn sends the request to a server transaction in the UAS. This is shown in Figure 4.
"ko": |-
  트랜잭션에는 클라이언트 측과 서버 측이 있습니다. 클라이언트 측은 클라이언트 트랜잭션으로, 서버 측은 서버 트랜잭션으로 알려져 있습니다. 클라이언트 트랜잭션은 요청을 보내고, 서버 트랜잭션은 응답을 보냅니다. 클라이언트 및 서버 트랜잭션은 여러 요소에 내장된 논리적 기능입니다. 특히 사용자 에이전트와 상태 저장 프록시 서버 내에 존재합니다. 섹션 4의 예를 고려하십시오. 이 예에서 UAC는 클라이언트 트랜잭션을 실행하고 해당 아웃바운드 프록시는 서버 트랜잭션을 실행합니다. 아웃바운드 프록시는 또한 인바운드 프록시의 서버 트랜잭션에 요청을 보내는 클라이언트 트랜잭션을 실행합니다. 또한 해당 프록시는 클라이언트 트랜잭션을 실행하며, 클라이언트 트랜잭션은 UAS의 서버 트랜잭션에 요청을 보냅니다. 이는 그림 4에 나와 있습니다.
