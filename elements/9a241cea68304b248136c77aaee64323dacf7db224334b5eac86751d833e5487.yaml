"hash": |-
  9a241cea68304b248136c77aaee64323dacf7db224334b5eac86751d833e5487
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     An abstract data type for HTTP messages has been introduced to define
     the components of a message and their semantics as an abstraction
     across multiple HTTP versions, rather than in terms of the specific
     syntax form of HTTP/1.1 in [HTTP/1.1], and reflect the contents after
     the message is parsed.  This makes it easier to distinguish between
     requirements on the content (what is conveyed) versus requirements on
     the messaging syntax (how it is conveyed) and avoids baking
     limitations of early protocol versions into the future of HTTP.
     (Section 6)
"fixed": |-
  An abstract data type for HTTP messages has been introduced to define the components of a message and their semantics as an abstraction across multiple HTTP versions, rather than in terms of the specific syntax form of HTTP/1.1 in [HTTP/1.1], and reflect the contents after the message is parsed.  This makes it easier to distinguish between requirements on the content (what is conveyed) versus requirements on the messaging syntax (how it is conveyed) and avoids baking limitations of early protocol versions into the future of HTTP. (Section 6)
"ko": |-
  HTTP 메시지에 대한 추상 데이터 유형은 [HTTP/1.1]의 HTTP/1.1의 특정 구문 형식의 관점이 아닌 여러 HTTP 버전에 대한 추상화로 메시지의 구성 요소와 의미를 정의하고 이를 반영하기 위해 도입되었습니다. 메시지가 구문 분석된 후의 내용입니다. 이를 통해 콘텐츠에 대한 요구 사항(전달되는 내용)과 메시징 구문에 대한 요구 사항(전달 방법)을 더 쉽게 구분할 수 있으며 초기 프로토콜 버전의 제한 사항을 HTTP의 미래에 반영하는 것을 방지할 수 있습니다. (6항)
