"hash": |-
  45bb2a39a158fad80927422837db8dedaa7ca6746356c1b7809a1c3a1d581eee
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Implementations of HTTP origin servers should be careful to restrict
     the documents returned by HTTP requests to be only those that were
     intended by the server administrators. If an HTTP server translates
     HTTP URIs directly into file system calls, the server must take
     special care not to serve files that were not intended to be
     delivered to HTTP clients. For example, Unix, Microsoft Windows, and
     other operating systems use ".." as a path component to indicate a
     directory level above the current one. On such a system, an HTTP
     server must disallow any such construct in the Request-URI if it
     would otherwise allow access to a resource outside those intended to
     be accessible via the HTTP server. Similarly, files intended for
     reference only internally to the server (such as access control
     files, configuration files, and script code) must be protected from
     inappropriate retrieval, since they might contain sensitive
     information. Experience has shown that minor bugs in such HTTP server
     implementations have turned into security risks.
"fixed": |-
  Implementations of HTTP origin servers should be careful to restrict the documents returned by HTTP requests to be only those that were intended by the server administrators. If an HTTP server translates HTTP URIs directly into file system calls, the server must take special care not to serve files that were not intended to be delivered to HTTP clients. For example, Unix, Microsoft Windows, and other operating systems use ".." as a path component to indicate a directory level above the current one. On such a system, an HTTP server must disallow any such construct in the Request-URI if it would otherwise allow access to a resource outside those intended to be accessible via the HTTP server. Similarly, files intended for reference only internally to the server (such as access control files, configuration files, and script code) must be protected from inappropriate retrieval, since they might contain sensitive information. Experience has shown that minor bugs in such HTTP server implementations have turned into security risks.
"ko": |-
  HTTP 원본 서버 구현에서는 HTTP 요청에 의해 반환되는 문서를 서버 관리자가 의도한 문서로만 제한하도록 주의해야 합니다. HTTP 서버가 HTTP URI를 파일 시스템 호출로 직접 변환하는 경우 서버는 HTTP 클라이언트에 전달하려는 의도가 아닌 파일을 제공하지 않도록 특별한 주의를 기울여야 합니다. 예를 들어 Unix, Microsoft Windows 및 기타 운영 체제에서는 ".."를 경로 구성 요소로 사용하여 현재 디렉터리 수준 위의 디렉터리 수준을 나타냅니다. 이러한 시스템에서 HTTP 서버는 HTTP 서버를 통해 액세스할 수 있도록 의도된 리소스 외부의 리소스에 대한 액세스를 허용하는 경우 Request-URI에서 그러한 구성을 허용하지 않아야 합니다. 마찬가지로, 서버 내부에서만 참조하기 위한 파일(예: 액세스 제어 파일, 구성 파일, 스크립트 코드)은 민감한 정보를 포함할 수 있으므로 부적절한 검색으로부터 보호해야 합니다. 경험에 따르면 이러한 HTTP 서버 구현의 사소한 버그가 보안 위험으로 바뀌는 것으로 나타났습니다.
