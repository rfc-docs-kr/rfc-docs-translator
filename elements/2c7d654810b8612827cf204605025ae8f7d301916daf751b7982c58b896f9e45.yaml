"hash": |-
  2c7d654810b8612827cf204605025ae8f7d301916daf751b7982c58b896f9e45
"type": |-
  Content
"comment": !!null |-
  null
"original": |-
  /*
   * hmacResult
   *
   * Description:
   *   This function will return the N-byte message digest into the
   *   Message_Digest array provided by the caller.
   *
   * Parameters:
   *   context: [in/out]
   *     The context to use to calculate the HMAC hash.
   *   digest[ ]: [out]
   *     Where the digest is returned.
   *     NOTE 2: The length of the hash is determined by the value of
   *      whichSha that was passed to hmacReset().
   *
   * Returns:
   *   sha Error Code.
   *
   */
  int hmacResult(HMACContext *context, uint8_t *digest)
  {
    int ret;
    if (!context) return shaNull;
    if (context->Corrupted) return context->Corrupted;
    if (context->Computed) return context->Corrupted = shaStateError;
"fixed": |-
  /* * hmacResult * * Description: *   This function will return the N-byte message digest into the *   Message_Digest array provided by the caller. * * Parameters: *   context: [in/out] *     The context to use to calculate the HMAC hash. *   digest[ ]: [out] *     Where the digest is returned. *     NOTE 2: The length of the hash is determined by the value of *      whichSha that was passed to hmacReset(). * * Returns: *   sha Error Code. * */ int hmacResult(HMACContext *context, uint8_t *digest) { int ret; if (!context) return shaNull; if (context->Corrupted) return context->Corrupted; if (context->Computed) return context->Corrupted = shaStateError;
"ko": |-
  /* * hmacResult * * 설명: * 이 함수는 N바이트 메시지 다이제스트를 호출자가 제공한 * Message_Digest 배열로 반환합니다. * * 매개변수: * context: [in/out] * HMAC 해시를 계산하는 데 사용할 컨텍스트입니다. * 다이제스트[ ]: [out] * 다이제스트가 반환되는 위치. * 참고 2: 해시 길이는 hmacReset()에 전달된 * whichSha 값에 따라 결정됩니다. * * 반환: * sha 오류 코드. * */ int hmacResult(HMACContext *context, uint8_t *digest) { int ret; if (!context) shaNull을 반환합니다. if (컨텍스트->손상) return context->손상; if (컨텍스트->계산됨) return context->Corrupted = shaStateError;
