"hash": |-
  760734f324e7bfcaebbfe3c4f998e3ad2b6c297b31a26ff3d0d521c7ed963256
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The KeyUpdate handshake message is used to indicate that the sender
     is updating its sending cryptographic keys.  This message can be sent
     by either peer after it has sent a Finished message.  Implementations
     that receive a KeyUpdate message prior to receiving a Finished
     message MUST terminate the connection with an "unexpected_message"
     alert.  After sending a KeyUpdate message, the sender SHALL send all
     its traffic using the next generation of keys, computed as described
     in Section 7.2.  Upon receiving a KeyUpdate, the receiver MUST update
     its receiving keys.
"fixed": |-
  The KeyUpdate handshake message is used to indicate that the sender is updating its sending cryptographic keys.  This message can be sent by either peer after it has sent a Finished message.  Implementations that receive a KeyUpdate message prior to receiving a Finished message MUST terminate the connection with an "unexpected_message" alert.  After sending a KeyUpdate message, the sender SHALL send all its traffic using the next generation of keys, computed as described in Section 7.2.  Upon receiving a KeyUpdate, the receiver MUST update its receiving keys.
"ko": |-
  KeyUpdate 핸드셰이크 메시지는 보낸 사람이 보내는 암호화 키를 업데이트하고 있음을 나타내는 데 사용됩니다. 이 메시지는 Finished 메시지를 보낸 후 피어 중 하나에 의해 전송될 수 있습니다. Finished 메시지를 수신하기 전에 KeyUpdate 메시지를 수신하는 구현은 "unexpected_message" 경고와 함께 연결을 종료해야 합니다. KeyUpdate 메시지를 보낸 후 발신자는 섹션 7.2에 설명된 대로 계산된 차세대 키를 사용하여 모든 트래픽을 전송해야 합니다. KeyUpdate를 수신하면 수신자는 수신 키를 업데이트해야 합니다.
