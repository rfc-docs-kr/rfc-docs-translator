"hash": |-
  c37786aeb6af611b1945ec1f98163518744124e6ca943c46fa333c235fd05cff
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     After the initial HEADERS frame sent by each peer, all subsequent
     DATA frames correspond to data sent on the TCP connection.  The frame
     payload of any DATA frames sent by the client is transmitted by the
     proxy to the TCP server; data received from the TCP server is
     assembled into DATA frames by the proxy.  Frame types other than DATA
     or stream management frames (RST_STREAM, WINDOW_UPDATE, and PRIORITY)
     MUST NOT be sent on a connected stream and MUST be treated as a
     stream error (Section 5.4.2) if received.
"fixed": |-
  After the initial HEADERS frame sent by each peer, all subsequent DATA frames correspond to data sent on the TCP connection.  The frame payload of any DATA frames sent by the client is transmitted by the proxy to the TCP server; data received from the TCP server is assembled into DATA frames by the proxy.  Frame types other than DATA or stream management frames (RST_STREAM, WINDOW_UPDATE, and PRIORITY) MUST NOT be sent on a connected stream and MUST be treated as a stream error (Section 5.4.2) if received.
"ko": |-
  각 피어가 보낸 초기 HEADERS 프레임 이후의 모든 후속 DATA 프레임은 TCP 연결에서 전송된 데이터에 해당합니다. 클라이언트가 보낸 모든 DATA 프레임의 프레임 페이로드는 프록시에 의해 TCP 서버로 전송됩니다. TCP 서버로부터 수신된 데이터는 프록시에 의해 DATA 프레임으로 조립됩니다. DATA 또는 스트림 관리 프레임(RST_STREAM, WINDOW_UPDATE 및 PRIORITY) 이외의 프레임 유형은 연결된 스트림에서 전송되어서는 안 되며 수신된 경우 스트림 오류(섹션 5.4.2)로 처리되어야 합니다.
