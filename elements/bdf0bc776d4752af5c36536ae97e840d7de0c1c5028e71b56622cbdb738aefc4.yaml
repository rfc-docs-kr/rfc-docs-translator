"hash": |-
  bdf0bc776d4752af5c36536ae97e840d7de0c1c5028e71b56622cbdb738aefc4
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     A single static key can be used across all connections to the same
     endpoint by generating the proof using a pseudorandom function that
     takes a static key and the connection ID chosen by the endpoint (see
     Section 5.1) as input.  An endpoint could use HMAC [RFC2104] (for
     example, HMAC(static_key, connection_id)) or the HMAC-based Key
     Derivation Function (HKDF) [RFC5869] (for example, using the static
     key as input keying material, with the connection ID as salt).  The
     output of this function is truncated to 16 bytes to produce the
     stateless reset token for that connection.
"fixed": |-
  A single static key can be used across all connections to the same endpoint by generating the proof using a pseudorandom function that takes a static key and the connection ID chosen by the endpoint (see Section 5.1) as input.  An endpoint could use HMAC [RFC2104] (for example, HMAC(static_key, connection_id)) or the HMAC-based Key Derivation Function (HKDF) [RFC5869] (for example, using the static key as input keying material, with the connection ID as salt).  The output of this function is truncated to 16 bytes to produce the stateless reset token for that connection.
"ko": |-
  엔드포인트(섹션 5.1 참조)에서 선택한 연결 ID와 정적 키를 입력으로 사용하는 의사 난수 함수를 사용하여 증명을 생성함으로써 동일한 엔드포인트에 대한 모든 연결에서 단일 정적 키를 사용할 수 있습니다. 엔드포인트는 HMAC [RFC2104](예: HMAC(static_key, Connection_id)) 또는 HMAC 기반 키 파생 함수(HKDF) [RFC5869](예: 연결 ID와 함께 정적 키를 입력 키 자료로 사용)를 사용할 수 있습니다. 소금으로). 이 함수의 출력은 해당 연결에 대한 상태 비저장 재설정 토큰을 생성하기 위해 16바이트로 잘립니다.
