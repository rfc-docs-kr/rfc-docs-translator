"hash": |-
  adecc7ac80b140d358a9ab967b653ede4ff856adb5cef9b2c118b877f2808057
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Note that this sort of extended traffic loss is likely to be detected
     at higher layers in most cases, before IPsec would have to invoke the
     sort of re-synchronization mechanism described in A3.1 and A3.2. If
     any significant fraction of the traffic on the SA in question is TCP,
     the source would fail to receive ACKs and would stop sending long
     before 2^32 packets had been lost.  Also, for any bi-directional
     application, even ones operating above UDP, such an extended outage
     would likely result in triggering some form of timeout.  However, a
     unidirectional application, operating over UDP, might lack feedback
     that would cause automatic detection of a loss of this magnitude,
     hence the motivation to develop a recovery method for this case.
     Note that the above observations apply to SAs between security
     gateways, or between hosts, or between host and security gateways.
"fixed": |-
  Note that this sort of extended traffic loss is likely to be detected at higher layers in most cases, before IPsec would have to invoke the sort of re-synchronization mechanism described in A3.1 and A3.2. If any significant fraction of the traffic on the SA in question is TCP, the source would fail to receive ACKs and would stop sending long before 2^32 packets had been lost.  Also, for any bi-directional application, even ones operating above UDP, such an extended outage would likely result in triggering some form of timeout.  However, a unidirectional application, operating over UDP, might lack feedback that would cause automatic detection of a loss of this magnitude, hence the motivation to develop a recovery method for this case. Note that the above observations apply to SAs between security gateways, or between hosts, or between host and security gateways.
"ko": |-
  이러한 종류의 확장된 트래픽 손실은 IPsec이 A3.1 및 A3.2에 설명된 일종의 재동기화 메커니즘을 호출해야 하기 전에 대부분의 경우 상위 계층에서 감지될 가능성이 높습니다. 문제의 SA 트래픽 중 상당 부분이 TCP인 경우 소스는 ACK 수신에 실패하고 2^32 패킷이 손실되기 오래 전에 전송을 중지합니다.  또한 UDP 이상으로 작동하는 양방향 애플리케이션의 경우에도 이러한 확장된 중단으로 인해 일종의 시간 초과가 발생할 수 있습니다.  그러나 UDP를 통해 작동하는 단방향 애플리케이션에는 이 규모의 손실을 자동으로 감지하는 피드백이 부족할 수 있으므로 이 경우에 대한 복구 방법을 개발하려는 동기가 부여됩니다. 위의 관찰 내용은 보안 게이트웨이 간, 호스트 간 또는 호스트와 보안 게이트웨이 간 SA에 적용됩니다.
