"hash": |-
  9211fff188b0b64a472ad03b11148d1306085abfa5641bf0fa2b178c814be069
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     In a request, the header MUST contain the method (User, Proxy, or
     Any) for approving credentials selected by the requester.  The method
     MUST NOT be changed by any proxy, unless it is "Proxy" when a proxy
     MAY change it to "user" to take the role of user approving each
     further hop.  If the method is "User", the header contains zero or
     more of the credentials that the client accepts.  The header may
     contain zero credentials in the first RTSP request to an RTSP server
     via a proxy when using the "User" method.  This is because the client
     has not yet received any credentials to accept.  Each credential MUST
     consist of one URI identifying the proxy or server, the hash
     algorithm identifier, and the hash over that agent's ASN.1 DER-
     encoded certificate [RFC5280] in Base64, according to Section 4 of
     [RFC4648] and where the padding bits are set to zero.  All RTSP
     clients and proxies MUST implement the SHA-256 [FIPS180-4] algorithm
     for computation of the hash of the DER-encoded certificate.  The
     SHA-256 algorithm is identified by the token "sha-256".
"fixed": |-
  In a request, the header MUST contain the method (User, Proxy, or Any) for approving credentials selected by the requester.  The method MUST NOT be changed by any proxy, unless it is "Proxy" when a proxy MAY change it to "user" to take the role of user approving each further hop.  If the method is "User", the header contains zero or more of the credentials that the client accepts.  The header may contain zero credentials in the first RTSP request to an RTSP server via a proxy when using the "User" method.  This is because the client has not yet received any credentials to accept.  Each credential MUST consist of one URI identifying the proxy or server, the hash algorithm identifier, and the hash over that agent's ASN.1 DER- encoded certificate [RFC5280] in Base64, according to Section 4 of [RFC4648] and where the padding bits are set to zero.  All RTSP clients and proxies MUST implement the SHA-256 [FIPS180-4] algorithm for computation of the hash of the DER-encoded certificate.  The SHA-256 algorithm is identified by the token "sha-256".
"ko": |-
  요청에서 헤더에는 요청자가 선택한 자격 증명을 승인하기 위한 방법(사용자, 프록시 또는 임의)이 포함되어야 합니다. 프록시가 각 추가 홉을 승인하는 사용자의 역할을 수행하기 위해 이를 "사용자"로 변경할 수 있는 경우 "프록시"가 아닌 한, 메서드는 프록시에 의해 변경되어서는 안 됩니다. 메서드가 "User"인 경우 헤더에는 클라이언트가 수락하는 자격 증명이 0개 이상 포함되어 있습니다. "사용자" 방법을 사용할 때 헤더에는 프록시를 통해 RTSP 서버에 대한 첫 번째 RTSP 요청에 자격 증명이 없을 수 있습니다. 이는 클라이언트가 아직 수락할 자격 증명을 받지 못했기 때문입니다. 각 자격 증명은 프록시 또는 서버를 식별하는 하나의 URI, 해시 알고리즘 식별자, [RFC4648]의 섹션 4에 따라 Base64에서 해당 에이전트의 ASN.1 DER 인코딩 인증서[RFC5280]에 대한 해시로 구성되어야 하며 여기서 패딩 비트는 0으로 설정됩니다. 모든 RTSP 클라이언트와 프록시는 DER로 인코딩된 인증서의 해시 계산을 위해 SHA-256 [FIPS180-4] 알고리즘을 구현해야 합니다. SHA-256 알고리즘은 "sha-256" 토큰으로 식별됩니다.
