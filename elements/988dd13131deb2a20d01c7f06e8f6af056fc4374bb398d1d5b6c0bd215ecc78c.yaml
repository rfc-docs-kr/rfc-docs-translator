"hash": |-
  988dd13131deb2a20d01c7f06e8f6af056fc4374bb398d1d5b6c0bd215ecc78c
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Overloading the Session-Timeout Attribute is problematic in
     situations where it is necessary to control the maximum session time
     and key lifetime independently.  For example, it might be desirable
     to limit the lifetime of cached keying material to 5 minutes while
     permitting a user once authenticated to remain connected for up to an
     hour without re-authenticating.  As a result, in the future,
     additional attributes can be specified to control the lifetime of
     cached keys; these attributes MAY modify the meaning of the
     Session-Timeout Attribute in specific circumstances.
"fixed": |-
  Overloading the Session-Timeout Attribute is problematic in situations where it is necessary to control the maximum session time and key lifetime independently.  For example, it might be desirable to limit the lifetime of cached keying material to 5 minutes while permitting a user once authenticated to remain connected for up to an hour without re-authenticating.  As a result, in the future, additional attributes can be specified to control the lifetime of cached keys; these attributes MAY modify the meaning of the Session-Timeout Attribute in specific circumstances.
"ko": |-
  Session-Timeout 속성을 오버로드하는 것은 최대 세션 시간과 키 수명을 독립적으로 제어해야 하는 상황에서 문제가 됩니다. 예를 들어, 일단 인증된 사용자가 재인증 없이 최대 1시간 동안 연결을 유지하도록 허용하면서 캐시된 키 자료의 수명을 5분으로 제한하는 것이 바람직할 수 있습니다. 결과적으로 향후에는 캐시된 키의 수명을 제어하기 위해 추가 속성을 지정할 수 있습니다. 이러한 속성은 특정 상황에서 Session-Timeout 속성의 의미를 수정할 수 있습니다.
