"hash": |-
  2e91e6adbe7ed41606421ee1bc569af7b282885007dc3c57d297e38b54b2000d
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     TLS does not provide any specific defenses against this form of
     attack but does include a padding mechanism for use by applications:
     The plaintext protected by the AEAD function consists of content plus
     variable-length padding, which allows the application to produce
     arbitrary-length encrypted records as well as padding-only cover
     traffic to conceal the difference between periods of transmission and
     periods of silence.  Because the padding is encrypted alongside the
     actual content, an attacker cannot directly determine the length of
     the padding but may be able to measure it indirectly by the use of
     timing channels exposed during record processing (i.e., seeing how
     long it takes to process a record or trickling in records to see
"fixed": |-
  TLS does not provide any specific defenses against this form of attack but does include a padding mechanism for use by applications: The plaintext protected by the AEAD function consists of content plus variable-length padding, which allows the application to produce arbitrary-length encrypted records as well as padding-only cover traffic to conceal the difference between periods of transmission and periods of silence.  Because the padding is encrypted alongside the actual content, an attacker cannot directly determine the length of the padding but may be able to measure it indirectly by the use of timing channels exposed during record processing (i.e., seeing how long it takes to process a record or trickling in records to see
"ko": |-
  TLS는 이러한 형태의 공격에 대해 특정 방어 기능을 제공하지 않지만 애플리케이션에서 사용할 패딩 메커니즘을 포함합니다. AEAD 기능으로 보호되는 일반 텍스트는 콘텐츠와 가변 길이 패딩으로 구성되어 애플리케이션이 임의 길이의 암호화된 레코드를 생성할 수 있습니다. 전송 기간과 침묵 기간의 차이를 숨기기 위한 패딩 전용 커버 트래픽도 포함됩니다. 패딩은 실제 콘텐츠와 함께 암호화되기 때문에 공격자가 패딩의 길이를 직접 확인할 수는 없지만 레코드 처리 중에 노출된 타이밍 채널을 사용하여 간접적으로 측정할 수 있습니다(예: 레코드를 처리하는 데 걸리는 시간 확인). 아니면 기록을 조금씩 살펴보거나
