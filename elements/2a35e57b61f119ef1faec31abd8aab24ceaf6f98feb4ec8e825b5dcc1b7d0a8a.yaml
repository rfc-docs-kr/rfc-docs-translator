"hash": |-
  2a35e57b61f119ef1faec31abd8aab24ceaf6f98feb4ec8e825b5dcc1b7d0a8a
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The role of UAC and UAS, as well as proxy and redirect servers, are
     defined on a transaction-by-transaction basis.  For example, the user
     agent initiating a call acts as a UAC when sending the initial INVITE
     request and as a UAS when receiving a BYE request from the callee.
     Similarly, the same software can act as a proxy server for one
     request and as a redirect server for the next request.
"fixed": |-
  The role of UAC and UAS, as well as proxy and redirect servers, are defined on a transaction-by-transaction basis.  For example, the user agent initiating a call acts as a UAC when sending the initial INVITE request and as a UAS when receiving a BYE request from the callee. Similarly, the same software can act as a proxy server for one request and as a redirect server for the next request.
"ko": |-
  UAC와 UAS, 프록시 및 리디렉션 서버의 역할은 트랜잭션별로 정의됩니다. 예를 들어 통화를 시작하는 사용자 에이전트는 초기 INVITE 요청을 보낼 때 UAC 역할을 하고, 수신자로부터 BYE 요청을 받을 때 UAS 역할을 합니다. 마찬가지로 동일한 소프트웨어가 한 요청에 대한 프록시 서버 역할을 하고 다음 요청에 대한 리디렉션 서버 역할을 할 수 있습니다.
