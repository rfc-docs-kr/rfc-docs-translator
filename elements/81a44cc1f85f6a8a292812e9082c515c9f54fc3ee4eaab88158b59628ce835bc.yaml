"hash": |-
  81a44cc1f85f6a8a292812e9082c515c9f54fc3ee4eaab88158b59628ce835bc
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The most secure option for countering the Triple Handshake attack is
     to refuse any change of certificates during renegotiation.  In
     addition, TLS clients SHOULD apply the same validation policy for all
     certificates received over a connection.  The [triple-handshake]
     document suggests several other possible countermeasures, such as
     binding the master secret to the full handshake (see [SESSION-HASH])
     and binding the abbreviated session resumption handshake to the
     original full handshake.  Although the latter two techniques are
     still under development and thus do not qualify as current practices,
     those who implement and deploy TLS are advised to watch for further
     development of appropriate countermeasures.
"fixed": |-
  The most secure option for countering the Triple Handshake attack is to refuse any change of certificates during renegotiation.  In addition, TLS clients SHOULD apply the same validation policy for all certificates received over a connection.  The [triple-handshake] document suggests several other possible countermeasures, such as binding the master secret to the full handshake (see [SESSION-HASH]) and binding the abbreviated session resumption handshake to the original full handshake.  Although the latter two techniques are still under development and thus do not qualify as current practices, those who implement and deploy TLS are advised to watch for further development of appropriate countermeasures.
"ko": |-
  Triple Handshake 공격에 대응하기 위한 가장 안전한 옵션은 재협상 중에 인증서 변경을 거부하는 것입니다. 또한 TLS 클라이언트는 연결을 통해 수신된 모든 인증서에 대해 동일한 유효성 검사 정책을 적용해야 합니다. [트리플 핸드셰이크] 문서는 마스터 시크릿을 전체 핸드셰이크에 바인딩하고([SESSION-HASH] 참조) 축약된 세션 재개 핸드셰이크를 원래 전체 핸드셰이크에 바인딩하는 등 여러 가지 가능한 대응책을 제안합니다. 후자의 두 가지 기술은 아직 개발 중이므로 현재 관행으로 적합하지 않지만 TLS를 구현하고 배포하는 사람들은 적절한 대책이 추가로 개발되는지 관찰하는 것이 좋습니다.
