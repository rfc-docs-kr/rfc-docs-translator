"hash": |-
  0705d44094a39c4042047b27760bf5c1836bf59f7bd57f65820785d360c1855b
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The management considerations for PPSPP are very similar to other
     protocols that are used for large-scale content distribution, in
     particular HTTP.  How does one manage large numbers of servers?  How
     does one push new content out to a server farm and allows staged
     releases?  How are faults detected and how are servers and end-user
     performance measured?  As standard solutions to these challenges are
     still being developed, this section cannot provide a definitive
     recommendation on how PPSPP should be managed.  Hence, it describes
     the standard solutions available at this time and assumes a future
     extension document will provide more complete guidelines.
"fixed": |-
  The management considerations for PPSPP are very similar to other protocols that are used for large-scale content distribution, in particular HTTP.  How does one manage large numbers of servers?  How does one push new content out to a server farm and allows staged releases?  How are faults detected and how are servers and end-user performance measured?  As standard solutions to these challenges are still being developed, this section cannot provide a definitive recommendation on how PPSPP should be managed.  Hence, it describes the standard solutions available at this time and assumes a future extension document will provide more complete guidelines.
"ko": |-
  PPSPP에 대한 관리 고려 사항은 대규모 콘텐츠 배포에 사용되는 다른 프로토콜, 특히 HTTP와 매우 유사합니다. 많은 수의 서버를 어떻게 관리합니까? 새 콘텐츠를 서버 팜에 푸시하고 단계적 릴리스를 허용하려면 어떻게 해야 합니까? 오류는 어떻게 감지되며 서버와 최종 사용자 성능은 어떻게 측정됩니까? 이러한 문제에 대한 표준 솔루션이 아직 개발 중이므로 이 섹션에서는 PPSPP 관리 방법에 대한 확실한 권장 사항을 제공할 수 없습니다. 따라서 현재 사용 가능한 표준 솔루션을 설명하고 향후 확장 문서가 보다 완전한 지침을 제공할 것이라고 가정합니다.
