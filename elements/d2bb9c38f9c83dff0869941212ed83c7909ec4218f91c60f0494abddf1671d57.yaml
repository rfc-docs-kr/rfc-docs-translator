"hash": |-
  d2bb9c38f9c83dff0869941212ed83c7909ec4218f91c60f0494abddf1671d57
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
        This message will be ignored by the client if the client is
        currently negotiating a session.  This message MAY be ignored by
        the client if it does not wish to renegotiate a session, or the
        client may, if it wishes, respond with a no_renegotiation alert.
        Since handshake messages are intended to have transmission
        precedence over application data, it is expected that the
        negotiation will begin before no more than a few records are
        received from the client.  If the server sends a HelloRequest but
        does not receive a ClientHello in response, it may close the
        connection with a fatal alert.
"fixed": |-
  - This message will be ignored by the client if the client is currently negotiating a session.  This message MAY be ignored by the client if it does not wish to renegotiate a session, or the client may, if it wishes, respond with a no_renegotiation alert. Since handshake messages are intended to have transmission precedence over application data, it is expected that the negotiation will begin before no more than a few records are received from the client.  If the server sends a HelloRequest but does not receive a ClientHello in response, it may close the connection with a fatal alert.
"ko": |-
  - 클라이언트가 현재 세션을 협상 중인 경우 이 메시지는 클라이언트에서 무시됩니다. 세션 재협상을 원하지 않는 경우 클라이언트는 이 메시지를 무시할 수 있으며, 클라이언트가 원하는 경우 no_renegotiation 경고로 응답할 수 있습니다. 핸드셰이크 메시지는 애플리케이션 데이터보다 전송 우선순위를 가지도록 되어 있으므로 클라이언트로부터 몇 개의 레코드만 수신되기 전에 협상이 시작될 것으로 예상됩니다. 서버가 HelloRequest를 보냈지만 응답으로 ClientHello를 받지 못한 경우 치명적인 경고와 함께 연결이 종료될 수 있습니다.
