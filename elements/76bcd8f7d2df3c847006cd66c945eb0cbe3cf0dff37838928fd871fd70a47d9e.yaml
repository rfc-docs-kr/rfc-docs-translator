"hash": |-
  76bcd8f7d2df3c847006cd66c945eb0cbe3cf0dff37838928fd871fd70a47d9e
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Thus, this specification requires that the "SHOULD" in Section 4 of
     [RFC7159] be treated as a "MUST" by producers and that it be either
     treated as a "MUST" or treated in the manner specified in ECMAScript
     5.1 by consumers.  Ambiguous and potentially exploitable situations
     could arise if the JSON parser used does not enforce the uniqueness
     of member names or returns an unpredictable value for duplicate
     member names.
"fixed": |-
  Thus, this specification requires that the "SHOULD" in Section 4 of [RFC7159] be treated as a "MUST" by producers and that it be either treated as a "MUST" or treated in the manner specified in ECMAScript 5.1 by consumers.  Ambiguous and potentially exploitable situations could arise if the JSON parser used does not enforce the uniqueness of member names or returns an unpredictable value for duplicate member names.
"ko": |-
  따라서 이 사양에서는 [RFC7159]의 섹션 4에 있는 "SHOULD"를 생산자가 "MUST"로 처리하고 소비자가 "MUST"로 처리하거나 ECMAScript 5.1에 명시된 방식으로 처리해야 합니다. 사용된 JSON 파서가 멤버 이름의 고유성을 적용하지 않거나 중복된 멤버 이름에 대해 예측할 수 없는 값을 반환하는 경우 모호하고 잠재적으로 악용될 수 있는 상황이 발생할 수 있습니다.
