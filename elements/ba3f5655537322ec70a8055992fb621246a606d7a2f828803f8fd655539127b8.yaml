"hash": |-
  ba3f5655537322ec70a8055992fb621246a606d7a2f828803f8fd655539127b8
"type": |-
  Content
"comment": !!null |-
  null
"original": |-
  #ifdef USE_32BIT_ONLY
    for (i = i2 = 0; i < HashSize; ) {
      Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>24);
      Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>16);
      Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>8);
      Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2++]);
      Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>24);
      Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>16);
      Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>8);
      Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2++]);
    }
  #else /* !USE_32BIT_ONLY */
    for (i = 0; i < HashSize; ++i)
      Message_Digest[i] = (uint8_t)
        (context->Intermediate_Hash[i>>3] >> 8 * ( 7 - ( i % 8 ) ));
  #endif /* USE_32BIT_ONLY */
"fixed": |-
  #ifdef USE_32BIT_ONLY for (i = i2 = 0; i < HashSize; ) { Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>24); Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>16); Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>8); Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2++]); Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>24); Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>16); Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>8); Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2++]); } #else /* !USE_32BIT_ONLY */ for (i = 0; i < HashSize; ++i) Message_Digest[i] = (uint8_t) (context->Intermediate_Hash[i>>3] >> 8 * ( 7 - ( i % 8 ) )); #endif /* USE_32BIT_ONLY */
"ko": |-
  #ifdef USE_32BIT_ONLY for (i = i2 = 0; i < HashSize; ) { Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>24); Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>16); Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>8); Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2++]); Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>24); Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>16); Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2]>>8); Message_Digest[i++]=(uint8_t)(context->Intermediate_Hash[i2++]); } #else /* !USE_32BIT_ONLY */ for (i = 0; i < HashSize; ++i) Message_Digest[i] = (uint8_t) (context->Intermediate_Hash[i>>3] >> 8 * ( 7 - ( 나는 % 8 ) )); #endif /* USE_32BIT_ONLY */
