"hash": |-
  c1266d5bbb7e26dde51f3e84617962b2f33e5c10cff9739acd0ae1ab853388dd
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     If a client or server chooses to continue with a full handshake
     without the extended master secret extension, then the new session
     becomes vulnerable to the man-in-the-middle key synchronization
     attack described in Section 1.  Hence, the client or server MUST NOT
     export any key material based on the new master secret for any
     subsequent application-level authentication.  In particular, it MUST
     disable [RFC5705] and any Extensible Authentication Protocol (EAP)
     relying on compound authentication [COMPOUND-AUTH].
"fixed": |-
  If a client or server chooses to continue with a full handshake without the extended master secret extension, then the new session becomes vulnerable to the man-in-the-middle key synchronization attack described in Section 1.  Hence, the client or server MUST NOT export any key material based on the new master secret for any subsequent application-level authentication.  In particular, it MUST disable [RFC5705] and any Extensible Authentication Protocol (EAP) relying on compound authentication [COMPOUND-AUTH].
"ko": |-
  클라이언트 또는 서버가 확장된 마스터 비밀 확장 없이 전체 핸드셰이크를 계속 진행하기로 선택하는 경우, 새로운 세션은 섹션 1에 설명된 중간자 키 동기화 공격에 취약해집니다. 따라서 클라이언트 또는 서버는 후속 애플리케이션 수준 인증을 위해 새로운 마스터 비밀을 기반으로 하는 키 자료를 내보내서는 안 됩니다. 특히 [RFC5705] 및 복합 인증 [COMPOUND-AUTH]에 의존하는 모든 확장 가능 인증 프로토콜(EAP)을 비활성화해야 합니다.
