"hash": |-
  12ff1b4fd7d90408e1c015893ca324f3661a99a1772b807bc3dd3a5313783ada
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     TLS provides transport-layer security over connection-oriented
     protocols (for the purposes of this document, TCP); "tls" (signifying
     TLS over TCP) can be specified as the desired transport protocol
     within a Via header field value or a SIP-URI.  TLS is most suited to
     architectures in which hop-by-hop security is required between hosts
     with no pre-existing trust association.  For example, Alice trusts
     her local proxy server, which after a certificate exchange decides to
     trust Bob's local proxy server, which Bob trusts, hence Bob and Alice
     can communicate securely.
"fixed": |-
  TLS provides transport-layer security over connection-oriented protocols (for the purposes of this document, TCP); "tls" (signifying TLS over TCP) can be specified as the desired transport protocol within a Via header field value or a SIP-URI.  TLS is most suited to architectures in which hop-by-hop security is required between hosts with no pre-existing trust association.  For example, Alice trusts her local proxy server, which after a certificate exchange decides to trust Bob's local proxy server, which Bob trusts, hence Bob and Alice can communicate securely.
"ko": |-
  TLS는 연결 지향 프로토콜(이 문서에서는 TCP)을 통해 전송 계층 보안을 제공합니다. "tls"(TCP를 통한 TLS를 나타냄)는 Via 헤더 필드 값 또는 SIP-URI 내에서 원하는 전송 프로토콜로 지정할 수 있습니다. TLS는 기존 신뢰 연결이 없는 호스트 간에 홉별 보안이 필요한 아키텍처에 가장 적합합니다. 예를 들어, Alice는 인증서 교환 후 Bob이 신뢰하는 Bob의 로컬 프록시 서버를 신뢰하기로 결정한 로컬 프록시 서버를 신뢰하므로 Bob과 Alice는 안전하게 통신할 수 있습니다.
