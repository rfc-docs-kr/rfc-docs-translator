"hash": |-
  57375f31ddb97e0168fbe04f3cdce6cf22f25b40f5aa505f0574d81ad8102c13
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Both now share K = X25519(a, X25519(b, 9)) = X25519(b, X25519(a, 9))
     as a shared secret.  Both MAY check, without leaking extra
     information about the value of K, whether K is the all-zero value and
     abort if so (see below).  Alice and Bob can then use a key-derivation
     function that includes K, K_A, and K_B to derive a symmetric key.
"fixed": |-
  Both now share K = X25519(a, X25519(b, 9)) = X25519(b, X25519(a, 9)) as a shared secret.  Both MAY check, without leaking extra information about the value of K, whether K is the all-zero value and abort if so (see below).  Alice and Bob can then use a key-derivation function that includes K, K_A, and K_B to derive a symmetric key.
"ko": |-
  이제 둘 다 K = X25519(a, X25519(b, 9)) = X25519(b, X25519(a, 9))를 공유 비밀로 공유합니다. 둘 다 K 값에 대한 추가 정보 유출 없이 K가 모두 0 값인지 확인하고 그렇다면 중단할 수 있습니다(아래 참조). 그런 다음 Alice와 Bob은 K, K_A 및 K_B를 포함하는 키 파생 함수를 사용하여 대칭 키를 파생할 수 있습니다.
