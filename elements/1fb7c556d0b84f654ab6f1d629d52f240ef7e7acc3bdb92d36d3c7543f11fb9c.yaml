"hash": |-
  1fb7c556d0b84f654ab6f1d629d52f240ef7e7acc3bdb92d36d3c7543f11fb9c
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     SMTP itself provides no communications security, and therefore a
     large number of attacks are possible.  A passive attack is sufficient
     to recover the text of messages transmitted with SMTP.  No endpoint
     authentication is provided by the protocol.  Sender spoofing is
     trivial, and therefore forging email messages is trivial.  Some
     implementations do add header lines with hostnames derived through
     reverse name resolution (which is only secure to the extent that it
     is difficult to spoof DNS -- not very), although these header lines
     are normally not displayed to users.  Receiver spoofing is also
     fairly straight-forward, either using TCP connection hijacking or DNS
     spoofing.  Moreover, since email messages often pass through SMTP
     gateways, all intermediate gateways must be trusted, a condition
     nearly impossible on the global Internet.
"fixed": |-
  SMTP itself provides no communications security, and therefore a large number of attacks are possible.  A passive attack is sufficient to recover the text of messages transmitted with SMTP.  No endpoint authentication is provided by the protocol.  Sender spoofing is trivial, and therefore forging email messages is trivial.  Some implementations do add header lines with hostnames derived through reverse name resolution (which is only secure to the extent that it is difficult to spoof DNS -- not very), although these header lines are normally not displayed to users.  Receiver spoofing is also fairly straight-forward, either using TCP connection hijacking or DNS spoofing.  Moreover, since email messages often pass through SMTP gateways, all intermediate gateways must be trusted, a condition nearly impossible on the global Internet.
"ko": |-
  SMTP 자체는 통신 보안을 제공하지 않으므로 많은 공격이 가능합니다. SMTP로 전송된 메시지의 텍스트를 복구하려면 수동적 공격만으로도 충분합니다. 프로토콜은 엔드포인트 인증을 제공하지 않습니다. 보낸 사람 스푸핑은 사소한 일이므로 이메일 메시지를 위조하는 일도 쉽지 않습니다. 일부 구현에서는 역방향 이름 확인을 통해 파생된 호스트 이름이 포함된 헤더 라인을 추가합니다(이는 DNS를 스푸핑하기 어려울 정도로만 안전합니다. 그다지 안전하지는 않습니다). 하지만 이러한 헤더 라인은 일반적으로 사용자에게 표시되지 않습니다. 수신기 스푸핑도 TCP 연결 하이재킹이나 DNS 스푸핑을 사용하여 매우 간단합니다. 더욱이 이메일 메시지는 종종 SMTP 게이트웨이를 통과하므로 모든 중간 게이트웨이를 신뢰할 수 있어야 하며 이는 글로벌 인터넷에서는 거의 불가능한 조건입니다.
