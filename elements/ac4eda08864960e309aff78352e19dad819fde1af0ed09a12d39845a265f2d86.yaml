"hash": |-
  ac4eda08864960e309aff78352e19dad819fde1af0ed09a12d39845a265f2d86
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     In practice, an implementation MAY choose any method to accelerate
     this search, although its externally visible behavior MUST be
     functionally equivalent to having searched the SAD in the above
     order.  For example, a software-based implementation could index into
     a hash table by the SPI.  The SAD entries in each hash table bucket's
     linked list are kept sorted to have those SAD entries with the
     longest SA identifiers first in that linked list.  Those SAD entries
     having the shortest SA identifiers are sorted so that they are the
     last entries in the linked list.  A hardware-based implementation may
     be able to effect the longest match search intrinsically, using
     commonly available Ternary Content-Addressable Memory (TCAM)
     features.
"fixed": |-
  In practice, an implementation MAY choose any method to accelerate this search, although its externally visible behavior MUST be functionally equivalent to having searched the SAD in the above order.  For example, a software-based implementation could index into a hash table by the SPI.  The SAD entries in each hash table bucket's linked list are kept sorted to have those SAD entries with the longest SA identifiers first in that linked list.  Those SAD entries having the shortest SA identifiers are sorted so that they are the last entries in the linked list.  A hardware-based implementation may be able to effect the longest match search intrinsically, using commonly available Ternary Content-Addressable Memory (TCAM) features.
"ko": |-
  실제로, 구현은 이 검색을 가속화하기 위해 어떤 방법이든 선택할 수 있지만, 외부적으로 보이는 동작은 위의 순서로 SAD를 검색한 것과 기능적으로 동일해야 합니다.  예를 들어, 소프트웨어 기반 구현은 SPI를 통해 해시 테이블에 색인을 생성할 수 있습니다.  각 해시 테이블 버킷의 연결 목록에 있는 SAD 항목은 해당 연결 목록에서 가장 긴 SA 식별자를 가진 SAD 항목이 먼저 정렬되도록 정렬됩니다.  가장 짧은 SA 식별자를 가진 SAD 항목은 연결 목록의 마지막 항목이 되도록 정렬됩니다.  하드웨어 기반 구현은 일반적으로 사용 가능한 TCAM(Ternary Content-Addressable Memory) 기능을 사용하여 본질적으로 가장 긴 일치 검색에 영향을 미칠 수 있습니다.
