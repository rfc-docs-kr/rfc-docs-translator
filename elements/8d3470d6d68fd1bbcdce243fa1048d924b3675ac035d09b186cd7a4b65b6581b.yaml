"hash": |-
  8d3470d6d68fd1bbcdce243fa1048d924b3675ac035d09b186cd7a4b65b6581b
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     For original character sequences that contain non-ASCII characters,
     however, the situation is more difficult. Internet protocols that
     transmit octet sequences intended to represent character sequences
     are expected to provide some way of identifying the charset used, if
     there might be more than one [RFC2277].  However, there is currently
     no provision within the generic URI syntax to accomplish this
     identification. An individual URI scheme may require a single
     charset, define a default charset, or provide a way to indicate the
     charset used.
"fixed": |-
  For original character sequences that contain non-ASCII characters, however, the situation is more difficult. Internet protocols that transmit octet sequences intended to represent character sequences are expected to provide some way of identifying the charset used, if there might be more than one [RFC2277].  However, there is currently no provision within the generic URI syntax to accomplish this identification. An individual URI scheme may require a single charset, define a default charset, or provide a way to indicate the charset used.
"ko": |-
  그러나 ASCII가 아닌 문자가 포함된 원래 문자 시퀀스의 경우 상황이 더 어렵습니다. 문자 시퀀스를 나타내기 위해 옥텟 시퀀스를 전송하는 인터넷 프로토콜은 둘 이상의 문자 집합이 있는 경우 사용된 문자 집합을 식별하는 방법을 제공할 것으로 예상됩니다[RFC2277]. 그러나 현재 일반 URI 구문에는 이 식별을 수행하기 위한 규정이 없습니다. 개별 URI 체계에는 단일 문자 집합이 필요하거나, 기본 문자 집합을 정의하거나, 사용된 문자 집합을 표시하는 방법을 제공할 수 있습니다.
