"hash": |-
  e57f990253f82f2cc0d4fc518161180e1be3e1d0f98bd8848c97fc976d184b75
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The HTTP authentication framework does not define a single mechanism
     for maintaining the confidentiality of credentials; instead, each
     authentication scheme defines how the credentials are encoded prior
     to transmission.  While this provides flexibility for the development
     of future authentication schemes, it is inadequate for the protection
     of existing schemes that provide no confidentiality on their own, or
     that do not sufficiently protect against replay attacks.
     Furthermore, if the server expects credentials that are specific to
     each individual user, the exchange of those credentials will have the
     effect of identifying that user even if the content within
     credentials remains confidential.
"fixed": |-
  The HTTP authentication framework does not define a single mechanism for maintaining the confidentiality of credentials; instead, each authentication scheme defines how the credentials are encoded prior to transmission.  While this provides flexibility for the development of future authentication schemes, it is inadequate for the protection of existing schemes that provide no confidentiality on their own, or that do not sufficiently protect against replay attacks. Furthermore, if the server expects credentials that are specific to each individual user, the exchange of those credentials will have the effect of identifying that user even if the content within credentials remains confidential.
"ko": |-
  HTTP 인증 프레임워크는 자격 증명의 기밀성을 유지하기 위한 단일 메커니즘을 정의하지 않습니다. 대신 각 인증 체계는 전송 전에 자격 증명을 인코딩하는 방법을 정의합니다. 이는 향후 인증 체계 개발에 유연성을 제공하지만 자체적으로 기밀성을 제공하지 않거나 재생 공격으로부터 충분히 보호하지 못하는 기존 체계를 보호하기에는 부적절합니다. 또한 서버가 각 개별 사용자에게 특정한 자격 증명을 기대하는 경우 해당 자격 증명을 교환하면 자격 증명 내의 콘텐츠가 기밀로 유지되더라도 해당 사용자를 식별하는 효과가 있습니다.
