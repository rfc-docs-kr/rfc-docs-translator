"hash": |-
  3ccc8293a31138e1d6aafd95ec46fd20d373e9599555a77e47426ddf866bef25
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     this connection, or from another currently active connection.  The
     second option is useful if the client only wishes to update the
     random structures and derived values of a connection, and the third
     option makes it possible to establish several independent secure
     connections without repeating the full handshake protocol.  These
     independent connections may occur sequentially or simultaneously; a
     SessionID becomes valid when the handshake negotiating it completes
     with the exchange of Finished messages and persists until it is
     removed due to aging or because a fatal error was encountered on a
     connection associated with the session.  The actual contents of the
     SessionID are defined by the server.
"fixed": |-
  this connection, or from another currently active connection.  The second option is useful if the client only wishes to update the random structures and derived values of a connection, and the third option makes it possible to establish several independent secure connections without repeating the full handshake protocol.  These independent connections may occur sequentially or simultaneously; a SessionID becomes valid when the handshake negotiating it completes with the exchange of Finished messages and persists until it is removed due to aging or because a fatal error was encountered on a connection associated with the session.  The actual contents of the SessionID are defined by the server.
"ko": |-
  이 연결 또는 현재 활성화된 다른 연결에서. 두 번째 옵션은 클라이언트가 연결의 무작위 구조와 파생 값만 업데이트하려는 경우에 유용하며, 세 번째 옵션을 사용하면 전체 핸드셰이크 프로토콜을 반복하지 않고도 여러 개의 독립적인 보안 연결을 설정할 수 있습니다. 이러한 독립적인 연결은 순차적으로 또는 동시에 발생할 수 있습니다. SessionID는 협상하는 핸드셰이크가 완료됨 메시지 교환으로 완료되고 노화로 인해 제거되거나 세션과 관련된 연결에서 치명적인 오류가 발생하여 제거될 때까지 지속되면 유효해집니다. SessionID의 실제 내용은 서버에 의해 정의됩니다.
