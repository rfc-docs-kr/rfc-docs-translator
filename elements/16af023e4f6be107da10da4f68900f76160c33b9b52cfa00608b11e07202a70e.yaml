"hash": |-
  16af023e4f6be107da10da4f68900f76160c33b9b52cfa00608b11e07202a70e
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Initial packets use an AEAD function, the keys for which are derived
     using a value that is visible on the wire.  Initial packets therefore
     do not have effective confidentiality protection.  Initial protection
     exists to ensure that the sender of the packet is on the network
     path.  Any entity that receives an Initial packet from a client can
     recover the keys that will allow them to both read the contents of
     the packet and generate Initial packets that will be successfully
     authenticated at either endpoint.  The AEAD also protects Initial
     packets against accidental modification.
"fixed": |-
  Initial packets use an AEAD function, the keys for which are derived using a value that is visible on the wire.  Initial packets therefore do not have effective confidentiality protection.  Initial protection exists to ensure that the sender of the packet is on the network path.  Any entity that receives an Initial packet from a client can recover the keys that will allow them to both read the contents of the packet and generate Initial packets that will be successfully authenticated at either endpoint.  The AEAD also protects Initial packets against accidental modification.
"ko": |-
  초기 패킷은 회선에서 볼 수 있는 값을 사용하여 파생되는 키인 AEAD 기능을 사용합니다. 따라서 초기 패킷에는 효과적인 기밀 보호 기능이 없습니다. 패킷을 보낸 사람이 네트워크 경로에 있는지 확인하기 위한 초기 보호가 존재합니다. 클라이언트로부터 초기 패킷을 수신하는 모든 엔터티는 패킷의 내용을 읽고 양쪽 끝점에서 성공적으로 인증되는 초기 패킷을 생성할 수 있는 키를 복구할 수 있습니다. AEAD는 또한 우발적인 수정으로부터 초기 패킷을 보호합니다.
