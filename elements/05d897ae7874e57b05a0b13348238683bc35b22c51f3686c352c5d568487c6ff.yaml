"hash": |-
  05d897ae7874e57b05a0b13348238683bc35b22c51f3686c352c5d568487c6ff
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
        Tutorial: In effect, a constraint is a form of security policy and
        may be either static or dynamic:
        -  "Static constraint": A constraint that must be satisfied at the
           time the policy is defined, and then continues to be satisfied
           until the constraint is removed.
        -  "Dynamic constraint": A constraint that may be defined to apply
           at various times that the identity, role, or other object of
           the constraint is active in the system.
"fixed": |-
  - Tutorial: In effect, a constraint is a form of security policy and may be either static or dynamic: -  "Static constraint": A constraint that must be satisfied at the time the policy is defined, and then continues to be satisfied until the constraint is removed. -  "Dynamic constraint": A constraint that may be defined to apply at various times that the identity, role, or other object of the constraint is active in the system.
"ko": |-
  - 튜토리얼: 실제로 제약 조건은 보안 정책의 한 형태이며 정적이거나 동적일 수 있습니다. - "정적 제약 조건": 정책이 정의된 시점에 충족되어야 하며 정책이 정의될 때까지 계속 만족되는 제약 조건입니다. 제약 조건이 제거됩니다. - "동적 제약": 제약의 ID, 역할 또는 기타 객체가 시스템에서 활성화되는 다양한 시점에 적용되도록 정의될 수 있는 제약입니다.
