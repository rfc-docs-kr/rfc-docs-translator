"hash": |-
  6353a4bcdd6797bc07db38b5cb0dd2613b78be291237d36608733c9a0f08b421
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The bit count is a count of data bits in an OUT message or the size
     of the input buffer (not including the header) in an IN message.
     Thus the sender process can tell from the IN message bit count when
     it receives the IN message how much of the data in the OUT message
     was accepted by the receiver process and can use this knowledge to
     retransmit the remainder of the message if so desired.  After the
     rendezvous, we recommend that all of the data in the message be sent
     on the source of the IN message even if the OUT bit count was greater
     than the IN bit count.  Thus, at the receiver Host the monitor has
     the option (if it wants to take it) of discarding the message for
     being too long, sending the number of bits the receiver process has
     done an IN for into the receiver process and discarding the rest, or
     queuing the rest of the bits and somehow notify the receiver process
     that there are more bits which the receiver process can ask for.
"fixed": |-
  The bit count is a count of data bits in an OUT message or the size of the input buffer (not including the header) in an IN message. Thus the sender process can tell from the IN message bit count when it receives the IN message how much of the data in the OUT message was accepted by the receiver process and can use this knowledge to retransmit the remainder of the message if so desired.  After the rendezvous, we recommend that all of the data in the message be sent on the source of the IN message even if the OUT bit count was greater than the IN bit count.  Thus, at the receiver Host the monitor has the option (if it wants to take it) of discarding the message for being too long, sending the number of bits the receiver process has done an IN for into the receiver process and discarding the rest, or queuing the rest of the bits and somehow notify the receiver process that there are more bits which the receiver process can ask for.
"ko": |-
  비트 수는 OUT 메시지의 데이터 비트 수 또는 IN 메시지의 입력 버퍼(헤더 제외) 크기입니다. 따라서 송신자 프로세스는 IN 메시지를 수신할 때 IN 메시지 비트 카운트를 통해 수신자 프로세스가 OUT 메시지의 데이터 중 얼마나 많은 양을 승인했는지 알 수 있으며, 원하는 경우 이 지식을 사용하여 메시지의 나머지 부분을 재전송할 수 있습니다. 랑데뷰 후에는 OUT 비트 수가 IN 비트 수보다 크더라도 메시지의 모든 데이터를 IN 메시지의 소스에서 전송하는 것이 좋습니다. 따라서 수신자 호스트에서 모니터는 너무 길기 때문에 메시지를 폐기하고, 수신자 프로세스가 IN을 수행한 비트 수를 수신자 프로세스로 보내고 나머지는 버리는 옵션(원하는 경우)을 갖습니다. 또는 나머지 비트를 대기열에 추가하고 수신자 프로세스가 요청할 수 있는 비트가 더 있음을 수신자 프로세스에 어떻게든 알립니다.
