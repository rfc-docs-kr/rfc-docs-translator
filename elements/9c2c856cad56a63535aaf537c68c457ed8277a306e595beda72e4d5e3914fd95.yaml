"hash": |-
  9c2c856cad56a63535aaf537c68c457ed8277a306e595beda72e4d5e3914fd95
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     When an agent ceases using a media format (by not listing that format
     in an offer or answer, even though it was in a previous SDP) the
     agent will still need to be prepared to receive media with that
     format for a brief time.  How does it know when it can be prepared to
     stop receiving with that format? If it needs to know, there are three
     techniques that can be applied.  First, the agent can change ports in
     addition to changing formats.  When media arrives on the new port, it
     knows that the peer has ceased sending with the old format, and it
     can cease being prepared to receive with it.  This approach has the
     benefit of being media format independent.  However, changes in ports
     may require changes in resource reservation or rekeying of security
     protocols.  The second approach is to use a totally new set of
     dynamic payload types for all codecs when one is discarded.  When
     media is received with one of the new payload types, the agent knows
     that the peer has ceased sending with the old format.  This approach
     doesn't affect reservations or security contexts, but it is RTP
     specific and wasteful of a very small payload type space.  A third
     approach is to use a timer.  When the SDP from the peer is received,
     the timer is set.  When it fires, the agent can cease being prepared
     to receive with the old format.  A value of one minute would
     typically be more than sufficient.  In some cases, an agent may not
     care, and thus continually be prepared to receive with the old
     formats.  Nothing need be done in this case.
"fixed": |-
  When an agent ceases using a media format (by not listing that format in an offer or answer, even though it was in a previous SDP) the agent will still need to be prepared to receive media with that format for a brief time.  How does it know when it can be prepared to stop receiving with that format? If it needs to know, there are three techniques that can be applied.  First, the agent can change ports in addition to changing formats.  When media arrives on the new port, it knows that the peer has ceased sending with the old format, and it can cease being prepared to receive with it.  This approach has the benefit of being media format independent.  However, changes in ports may require changes in resource reservation or rekeying of security protocols.  The second approach is to use a totally new set of dynamic payload types for all codecs when one is discarded.  When media is received with one of the new payload types, the agent knows that the peer has ceased sending with the old format.  This approach doesn't affect reservations or security contexts, but it is RTP specific and wasteful of a very small payload type space.  A third approach is to use a timer.  When the SDP from the peer is received, the timer is set.  When it fires, the agent can cease being prepared to receive with the old format.  A value of one minute would typically be more than sufficient.  In some cases, an agent may not care, and thus continually be prepared to receive with the old formats.  Nothing need be done in this case.
"ko": |-
  에이전트가 미디어 형식을 사용하지 않을 때(이전 SDP에 있었음에도 불구하고 제안이나 답변에 해당 형식을 나열하지 않음) 에이전트는 잠시 동안 해당 형식의 미디어를 수신할 준비가 되어 있어야 합니다. 에이전트는 언제 해당 형식으로 수신을 중단할 준비가 되었는지 어떻게 알 수 있을까요? 알아야 하는 경우 적용할 수 있는 세 가지 기술이 있습니다. 첫째, 에이전트는 형식을 변경하는 것 외에도 포트를 변경할 수 있습니다. 미디어가 새 포트에 도착하면 피어가 이전 형식으로 전송을 중단했음을 알고 해당 형식으로 수신할 준비를 중단할 수 있습니다. 이 접근 방식은 미디어 형식에 독립적이라는 이점이 있습니다. 그러나 포트를 변경하면 리소스 예약을 변경하거나 보안 프로토콜을 다시 입력해야 할 수 있습니다. 두 번째 접근 방식은 코덱 하나를 버릴 때 모든 코덱에 대해 완전히 새로운 동적 페이로드 유형 세트를 사용하는 것입니다. 새 페이로드 유형 중 하나로 미디어를 수신하면 에이전트는 피어가 이전 형식으로 전송을 중단했음을 알게 됩니다. 이 접근 방식은 예약이나 보안 컨텍스트에 영향을 미치지 않지만 RTP에 국한되며 매우 작은 페이로드 유형 공간을 낭비합니다. 세 번째 접근 방식은 타이머를 사용하는 것입니다. 피어에서 SDP를 수신하면 타이머가 설정됩니다. 타이머가 작동하면 에이전트는 이전 형식으로 수신할 준비를 중단할 수 있습니다. 일반적으로 1분이라는 값이면 충분합니다. 어떤 경우에는 에이전트가 신경 쓰지 않을 수 있으므로 이전 형식으로 수신할 준비를 계속할 수 있습니다. 이 경우에는 아무것도 할 필요가 없습니다.
