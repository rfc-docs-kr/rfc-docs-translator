"hash": |-
  2a759cda6e916e99652ef86638669e9433ce52323619b574e64e2de28e055324
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     As a drawback, each transport connection needs to negotiate and
     maintain authentication state separately.  Some overhead is not
     amortized over multiple connections, e.g., overheads in packet
     exchanges, whereas other overheads are not amortized over different
     transport protocols, e.g., design and implementation complexity --
     both as would be the case in a network layer solution.  Because the
     authentication happens later in packet processing than is required,
     additional endpoint resources may be needlessly consumed, e.g., in
     demultiplexing received packets, indexing connection identifiers, and
     continuing to buffer spoofed packets, etc., only to be dropped later
     at the transport layer.
"fixed": |-
  As a drawback, each transport connection needs to negotiate and maintain authentication state separately.  Some overhead is not amortized over multiple connections, e.g., overheads in packet exchanges, whereas other overheads are not amortized over different transport protocols, e.g., design and implementation complexity -- both as would be the case in a network layer solution.  Because the authentication happens later in packet processing than is required, additional endpoint resources may be needlessly consumed, e.g., in demultiplexing received packets, indexing connection identifiers, and continuing to buffer spoofed packets, etc., only to be dropped later at the transport layer.
"ko": |-
  단점은 각 전송 연결이 인증 상태를 개별적으로 협상하고 유지해야 한다는 것입니다. 일부 오버헤드(예: 패킷 교환의 오버헤드)는 다중 연결을 통해 상각되지 않는 반면, 다른 오버헤드(예: 설계 및 구현 복잡성)는 네트워크 계층 솔루션의 경우처럼 서로 다른 전송 프로토콜을 통해 상각되지 않습니다. 인증은 필요한 것보다 나중에 패킷 처리에서 발생하기 때문에 추가 엔드포인트 리소스가 불필요하게 소비될 수 있습니다(예: 수신된 패킷 역다중화, 연결 식별자 인덱싱, 스푸핑된 패킷 버퍼링 계속 등). 나중에 전송 계층에서 삭제될 수 있습니다. .
