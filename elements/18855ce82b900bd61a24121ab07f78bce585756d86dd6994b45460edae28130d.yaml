"hash": |-
  18855ce82b900bd61a24121ab07f78bce585756d86dd6994b45460edae28130d
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Peer D also sends HAVE messages to Peer A when it downloads chunks
     from other peers.  When Peer D is willing to accept REQUESTs from
     Peer A, Peer D sends a datagram with an UNCHOKE message to inform
     Peer A.  If Peer B or C decides to choke Peer A, they send a CHOKE
     message and Peer A should then re-request from other peers.  Peers B
     and C may continue to send HAVE, REQUEST, or periodic keep-alive
     messages such that Peer A keeps sending them HAVE messages.
"fixed": |-
  Peer D also sends HAVE messages to Peer A when it downloads chunks from other peers.  When Peer D is willing to accept REQUESTs from Peer A, Peer D sends a datagram with an UNCHOKE message to inform Peer A.  If Peer B or C decides to choke Peer A, they send a CHOKE message and Peer A should then re-request from other peers.  Peers B and C may continue to send HAVE, REQUEST, or periodic keep-alive messages such that Peer A keeps sending them HAVE messages.
"ko": |-
  피어 D는 또한 다른 피어로부터 청크를 다운로드할 때 피어 A에 HAVE 메시지를 보냅니다. 피어 D가 피어 A의 요청을 기꺼이 수락하면 피어 D는 UNCHOKE 메시지와 함께 데이터그램을 보내 피어 A에게 알립니다. 피어 B 또는 C가 피어 A를 질식시키기로 결정하면 CHOKE 메시지를 보내고 피어 A는 다시 요청해야 합니다. 다른 동료로부터. 피어 B와 C는 피어 A가 HAVE 메시지를 계속 보내도록 HAVE, REQUEST 또는 주기적 연결 유지 메시지를 계속 보낼 수 있습니다.
