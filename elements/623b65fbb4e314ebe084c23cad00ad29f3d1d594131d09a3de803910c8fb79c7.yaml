"hash": |-
  623b65fbb4e314ebe084c23cad00ad29f3d1d594131d09a3de803910c8fb79c7
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
   *     three bits ###.)
   *   length: [in]
   *     The number of bits in message_bits, between 1 and 7.
   *
   * Returns:
   *   sha Error Code.
   */
  int hmacFinalBits(HMACContext *context,
      uint8_t bits, unsigned int bit_count)
  {
    if (!context) return shaNull;
    if (context->Corrupted) return context->Corrupted;
    if (context->Computed) return context->Corrupted = shaStateError;
    /* then final bits of datagram */
    return context->Corrupted =
      USHAFinalBits(&context->shaContext, bits, bit_count);
  }
"fixed": |-
  *     three bits ###.) *   length: [in] *     The number of bits in message_bits, between 1 and 7. * * Returns: *   sha Error Code. */ int hmacFinalBits(HMACContext *context, uint8_t bits, unsigned int bit_count) { if (!context) return shaNull; if (context->Corrupted) return context->Corrupted; if (context->Computed) return context->Corrupted = shaStateError; /* then final bits of datagram */ return context->Corrupted = USHAFinalBits(&context->shaContext, bits, bit_count); }
"ko": |-
  * 3비트 ###.) * 길이: [in] * message_bits의 비트 수(1에서 7 사이). * * 반환: * sha 오류 코드. */ int hmacFinalBits(HMACContext *context, uint8_t 비트, unsigned int bit_count) { if (!context) return shaNull; if (컨텍스트->손상) return context->손상; if (컨텍스트->계산됨) return context->Corrupted = shaStateError; /* 데이터그램의 마지막 비트 */ return context->Corrupted = USHAFinalBits(&context->shaContext, 비트, bit_count); }
