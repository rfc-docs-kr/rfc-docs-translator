"hash": |-
  3f9323aa7052dba6e1f7e6b34ac04b211657439894e9eab79432a64fc6321ccb
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Strict Reverse Path Forwarding (Strict RPF) is a simple way to
     implement an ingress filter.  It is conceptually identical to using
     access lists for ingress filtering, with the exception that the
     access list is dynamic.  This may also be used to avoid duplicate
     configuration (e.g., maintaining both static routes or BGP prefix-
     list filters and interface access-lists).  The procedure is that the
     source address is looked up in the Forwarding Information Base (FIB)
     - and if the packet is received on the interface which would be used
     to forward the traffic to the source of the packet, it passes the
     check.
"fixed": |-
  Strict Reverse Path Forwarding (Strict RPF) is a simple way to implement an ingress filter.  It is conceptually identical to using access lists for ingress filtering, with the exception that the access list is dynamic.  This may also be used to avoid duplicate configuration (e.g., maintaining both static routes or BGP prefix- list filters and interface access-lists).  The procedure is that the source address is looked up in the Forwarding Information Base (FIB) - and if the packet is received on the interface which would be used to forward the traffic to the source of the packet, it passes the check.
"ko": |-
  엄격한 역방향 경로 전달(Strict RPF)은 수신 필터를 구현하는 간단한 방법입니다. 액세스 목록이 동적이라는 점을 제외하면 수신 필터링에 액세스 목록을 사용하는 것과 개념적으로 동일합니다. 이는 중복 구성을 방지하는 데에도 사용될 수 있습니다(예: 정적 경로 또는 BGP 접두사 목록 필터 및 인터페이스 액세스 목록 유지). 절차는 FIB(Forwarding Information Base)에서 소스 주소를 조회하고 트래픽을 패킷 소스로 전달하는 데 사용되는 인터페이스에서 패킷이 수신되면 검사를 통과하는 것입니다.
