"hash": |-
  13ab1379e43fff2e800dd8da0c528ddca1dcdc4ea42e3588c2a8571cf7d0c26d
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Although inspired by and derived from the GSS-API, the notion of
     channel binding described herein is not at all limited to use by GSS-
     API applications.  We envision use of channel binding by applications
     that utilize other security frameworks, such as Simple Authentication
     and Security Layer (SASL) [RFC4422] and even protocols that provide
     their own authentication mechanisms (e.g., the Key Distribution
     Center (KDC) exchanges of Kerberos V [RFC4120]).  We also envision
     use of the notion of channel binding in the analysis of security
     protocols.
"fixed": |-
  Although inspired by and derived from the GSS-API, the notion of channel binding described herein is not at all limited to use by GSS- API applications.  We envision use of channel binding by applications that utilize other security frameworks, such as Simple Authentication and Security Layer (SASL) [RFC4422] and even protocols that provide their own authentication mechanisms (e.g., the Key Distribution Center (KDC) exchanges of Kerberos V [RFC4120]).  We also envision use of the notion of channel binding in the analysis of security protocols.
"ko": |-
  GSS-API에서 영감을 받고 파생되었지만 여기에 설명된 채널 바인딩의 개념은 GSS-API 응용 프로그램의 사용에만 전혀 제한되지 않습니다. 우리는 SASL(Simple Authentication and Security Layer) [RFC4422]과 같은 다른 보안 프레임워크와 자체 인증 메커니즘을 제공하는 프로토콜(예: Kerberos V의 KDC(키 배포 센터) 교환)을 활용하는 애플리케이션에서 채널 바인딩을 사용하는 것을 구상합니다. [RFC4120]). 우리는 또한 보안 프로토콜 분석에서 채널 바인딩 개념을 사용하는 것을 구상하고 있습니다.
