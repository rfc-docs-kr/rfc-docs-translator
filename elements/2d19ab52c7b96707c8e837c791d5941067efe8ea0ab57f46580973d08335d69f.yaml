"hash": |-
  2d19ab52c7b96707c8e837c791d5941067efe8ea0ab57f46580973d08335d69f
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     There are several problems with this.  If future advances in
     cryptanalysis reveal a weakness in AES, users will be in an
     unenviable position.  With the only other widely supported cipher
     being the much slower 3DES, it is not feasible to reconfigure
     deployments to use 3DES.  [Standby-Cipher] describes this issue and
     the need for a standby cipher in greater detail.  Another problem is
     that while AES is very fast on dedicated hardware, its performance on
     platforms that lack such hardware is considerably lower.  Yet another
     problem is that many AES implementations are vulnerable to cache-
     collision timing attacks ([Cache-Collisions]).
"fixed": |-
  There are several problems with this.  If future advances in cryptanalysis reveal a weakness in AES, users will be in an unenviable position.  With the only other widely supported cipher being the much slower 3DES, it is not feasible to reconfigure deployments to use 3DES.  [Standby-Cipher] describes this issue and the need for a standby cipher in greater detail.  Another problem is that while AES is very fast on dedicated hardware, its performance on platforms that lack such hardware is considerably lower.  Yet another problem is that many AES implementations are vulnerable to cache- collision timing attacks ([Cache-Collisions]).
"ko": |-
  여기에는 몇 가지 문제가 있습니다. 향후 암호 분석의 발전으로 인해 AES의 약점이 드러날 경우 사용자는 불리한 위치에 놓이게 될 것입니다. 널리 지원되는 유일한 암호는 훨씬 느린 3DES이므로 3DES를 사용하도록 배포를 재구성하는 것은 불가능합니다. [Standby-Cipher]에서는 이 문제와 대기 암호의 필요성에 대해 더 자세히 설명합니다. 또 다른 문제는 AES가 전용 하드웨어에서는 매우 빠르지만 이러한 하드웨어가 없는 플랫폼에서는 성능이 상당히 낮다는 것입니다. 또 다른 문제는 많은 AES 구현이 캐시 충돌 타이밍 공격([Cache-Collisions])에 취약하다는 것입니다.
