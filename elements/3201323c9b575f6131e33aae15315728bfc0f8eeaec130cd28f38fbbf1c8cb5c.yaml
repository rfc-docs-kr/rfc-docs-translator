"hash": |-
  3201323c9b575f6131e33aae15315728bfc0f8eeaec130cd28f38fbbf1c8cb5c
"type": |-
  Content
"comment": !!null |-
  null
"original": |-
  /*
   *  USHAReset
   *
   *  Description:
   *      This function will initialize the SHA Context in preparation
   *      for computing a new SHA message digest.
   *
   *  Parameters:
   *      context: [in/out]
   *          The context to reset.
   *      whichSha: [in]
   *          Selects which SHA reset to call
   *
   *  Returns:
   *      sha Error Code.
   *
   */
  int USHAReset(USHAContext *context, enum SHAversion whichSha)
  {
    if (!context) return shaNull;
    context->whichSha = whichSha;
    switch (whichSha) {
      case SHA1:   return SHA1Reset((SHA1Context*)&context->ctx);
      case SHA224: return SHA224Reset((SHA224Context*)&context->ctx);
      case SHA256: return SHA256Reset((SHA256Context*)&context->ctx);
      case SHA384: return SHA384Reset((SHA384Context*)&context->ctx);
      case SHA512: return SHA512Reset((SHA512Context*)&context->ctx);
      default: return shaBadParam;
    }
  }
"fixed": |-
  /* *  USHAReset * *  Description: *      This function will initialize the SHA Context in preparation *      for computing a new SHA message digest. * *  Parameters: *      context: [in/out] *          The context to reset. *      whichSha: [in] *          Selects which SHA reset to call * *  Returns: *      sha Error Code. * */ int USHAReset(USHAContext *context, enum SHAversion whichSha) { if (!context) return shaNull; context->whichSha = whichSha; switch (whichSha) { case SHA1:   return SHA1Reset((SHA1Context*)&context->ctx); case SHA224: return SHA224Reset((SHA224Context*)&context->ctx); case SHA256: return SHA256Reset((SHA256Context*)&context->ctx); case SHA384: return SHA384Reset((SHA384Context*)&context->ctx); case SHA512: return SHA512Reset((SHA512Context*)&context->ctx); default: return shaBadParam; } }
"ko": |-
  /* * USHAReset * * 설명: * 이 함수는 새로운 SHA 메시지 다이제스트를 계산하기 위한 준비로 * SHA 컨텍스트를 초기화합니다. * * 매개변수: * context: [in/out] * 재설정할 컨텍스트입니다. * whichSha: [in] * 호출할 SHA 재설정을 선택합니다. * * 반환: * sha 오류 코드. * */ int USHAReset(USHAContext *context, enum SHAversion whichSha) { if (!context) return shaNull; 컨텍스트-> whichSha = whichSha; 스위치 (whichSha) { 케이스 SHA1: return SHA1Reset((SHA1Context*)&context->ctx); 사례 SHA224: return SHA224Reset((SHA224Context*)&context->ctx); 사례 SHA256: return SHA256Reset((SHA256Context*)&context->ctx); 사례 SHA384: return SHA384Reset((SHA384Context*)&context->ctx); 케이스 SHA512: return SHA512Reset((SHA512Context*)&context->ctx); 기본값: shaBadParam을 반환합니다. } }
