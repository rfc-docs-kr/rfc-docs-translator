"hash": |-
  060b63e60c300153fac2feb437972e8133b1d166334cb9ecc1bedb400c3727fb
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     In addition to DNS and location service lookups shown in this
     example, proxy servers can make flexible "routing decisions" to
     decide where to send a request.  For example, if Bob's SIP phone
     returned a 486 (Busy Here) response, the biloxi.com proxy server
     could proxy the INVITE to Bob's voicemail server.  A proxy server can
     also send an INVITE to a number of locations at the same time.  This
     type of parallel search is known as forking.
"fixed": |-
  In addition to DNS and location service lookups shown in this example, proxy servers can make flexible "routing decisions" to decide where to send a request.  For example, if Bob's SIP phone returned a 486 (Busy Here) response, the biloxi.com proxy server could proxy the INVITE to Bob's voicemail server.  A proxy server can also send an INVITE to a number of locations at the same time.  This type of parallel search is known as forking.
"ko": |-
  이 예에 표시된 DNS 및 위치 서비스 조회 외에도 프록시 서버는 요청을 보낼 위치를 결정하기 위해 유연한 "라우팅 결정"을 내릴 수 있습니다. 예를 들어 Bob의 SIP 전화가 486(Busy Here) 응답을 반환한 경우 biloxi.com 프록시 서버는 INVITE를 Bob의 음성 메일 서버로 프록시할 수 있습니다. 프록시 서버는 동시에 여러 위치에 INVITE를 보낼 수도 있습니다. 이러한 유형의 병렬 검색을 분기라고 합니다.
