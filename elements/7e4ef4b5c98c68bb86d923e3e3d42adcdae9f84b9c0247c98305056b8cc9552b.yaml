"hash": |-
  7e4ef4b5c98c68bb86d923e3e3d42adcdae9f84b9c0247c98305056b8cc9552b
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Messages are intended to be "self-descriptive": everything a
     recipient needs to know about the message can be determined by
     looking at the message itself, after decoding or reconstituting parts
     that have been compressed or elided in transit, without requiring an
     understanding of the sender's current application state (established
     via prior messages).  However, a client MUST retain knowledge of the
     request when parsing, interpreting, or caching a corresponding
     response.  For example, responses to the HEAD method look just like
     the beginning of a response to GET but cannot be parsed in the same
     manner.
"fixed": |-
  Messages are intended to be "self-descriptive": everything a recipient needs to know about the message can be determined by looking at the message itself, after decoding or reconstituting parts that have been compressed or elided in transit, without requiring an understanding of the sender's current application state (established via prior messages).  However, a client MUST retain knowledge of the request when parsing, interpreting, or caching a corresponding response.  For example, responses to the HEAD method look just like the beginning of a response to GET but cannot be parsed in the same manner.
"ko": |-
  메시지는 "자기 설명적"으로 만들어졌습니다. 수신자가 메시지에 대해 알아야 하는 모든 것은 메시지 자체를 살펴보고 메시지 자체를 살펴보면 메시지에 대한 이해 없이도 전송 중에 압축되거나 생략된 부분을 디코딩하거나 재구성하여 결정할 수 있습니다. 발신자의 현재 애플리케이션 상태(이전 메시지를 통해 설정됨) 그러나 클라이언트는 해당 응답을 구문 분석, 해석 또는 캐싱할 ​​때 요청에 대한 지식을 유지해야 합니다. 예를 들어 HEAD 메서드에 대한 응답은 GET에 대한 응답의 시작 부분과 비슷해 보이지만 동일한 방식으로 구문 분석할 수는 없습니다.
