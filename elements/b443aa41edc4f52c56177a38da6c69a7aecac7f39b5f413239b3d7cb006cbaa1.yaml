"hash": |-
  b443aa41edc4f52c56177a38da6c69a7aecac7f39b5f413239b3d7cb006cbaa1
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Providing security functionality in a protocol can be difficult.  In
     addition to the problem of choosing authentication and key
     establishment mechanisms, one needs to integrate it into a protocol.
     One response to this problem (embodied in IPsec and TLS) is to create
     a lower-level security protocol and then insist that new protocols be
     run over that protocol.  Another approach that has recently become
     popular is to design generic application layer security frameworks.
     The idea is that you design a protocol that allows you to negotiate
     various security mechanisms in a pluggable fashion.  Application
     protocol designers then arrange to carry the security protocol PDUs
     in their application protocol.  Examples of such frameworks include
     GSS-API [GSS] and SASL [SASL].
"fixed": |-
  Providing security functionality in a protocol can be difficult.  In addition to the problem of choosing authentication and key establishment mechanisms, one needs to integrate it into a protocol. One response to this problem (embodied in IPsec and TLS) is to create a lower-level security protocol and then insist that new protocols be run over that protocol.  Another approach that has recently become popular is to design generic application layer security frameworks. The idea is that you design a protocol that allows you to negotiate various security mechanisms in a pluggable fashion.  Application protocol designers then arrange to carry the security protocol PDUs in their application protocol.  Examples of such frameworks include GSS-API [GSS] and SASL [SASL].
"ko": |-
  프로토콜에 보안 기능을 제공하는 것은 어려울 수 있습니다. 인증 및 키 설정 메커니즘을 선택하는 문제 외에도 이를 프로토콜에 통합해야 합니다. 이 문제(IPsec 및 TLS에 구현됨)에 대한 한 가지 대응은 낮은 수준의 보안 프로토콜을 만든 다음 해당 프로토콜을 통해 새 프로토콜이 실행되도록 하는 것입니다. 최근 대중화되는 또 다른 접근 방식은 일반 애플리케이션 계층 보안 프레임워크를 설계하는 것입니다. 아이디어는 플러그 가능한 방식으로 다양한 보안 메커니즘을 협상할 수 있는 프로토콜을 설계한다는 것입니다. 그러면 애플리케이션 프로토콜 설계자는 자신의 애플리케이션 프로토콜에 보안 프로토콜 PDU를 전달하도록 준비합니다. 이러한 프레임워크의 예로는 GSS-API [GSS] 및 SASL [SASL]이 있습니다.
