"hash": |-
  685a15b2888d2a0be729799257d1fd52611c0539c71df3ee1e896ed533bdaf55
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     However, defining a field doesn't guarantee its deployment or
     recognition by recipients.  Most fields are designed with the
     expectation that a recipient can safely ignore (but forward
     downstream) any field not recognized.  In other cases, the sender's
     ability to understand a given field might be indicated by its prior
     communication, perhaps in the protocol version or fields that it sent
     in prior messages, or its use of a specific media type.  Likewise,
     direct inspection of support might be possible through an OPTIONS
     request or by interacting with a defined well-known URI [RFC8615] if
     such inspection is defined along with the field being introduced.
"fixed": |-
  However, defining a field doesn't guarantee its deployment or recognition by recipients.  Most fields are designed with the expectation that a recipient can safely ignore (but forward downstream) any field not recognized.  In other cases, the sender's ability to understand a given field might be indicated by its prior communication, perhaps in the protocol version or fields that it sent in prior messages, or its use of a specific media type.  Likewise, direct inspection of support might be possible through an OPTIONS request or by interacting with a defined well-known URI [RFC8615] if such inspection is defined along with the field being introduced.
"ko": |-
  그러나 필드를 정의한다고 해서 수신자의 배포나 인식이 보장되는 것은 아닙니다. 대부분의 필드는 수신자가 인식되지 않은 필드를 안전하게 무시(그러나 다운스트림 전달)할 수 있다는 기대를 가지고 설계되었습니다. 다른 경우에는 특정 필드를 이해하는 발신자의 능력이 이전 통신, 아마도 이전 메시지에서 보낸 프로토콜 버전이나 필드 또는 특정 미디어 유형의 사용으로 표시될 수 있습니다. 마찬가지로 OPTIONS 요청을 통해 또는 해당 검사가 도입되는 필드와 함께 정의된 경우 정의된 잘 알려진 URI [RFC8615]와 상호 작용하여 지원에 대한 직접적인 검사가 가능할 수 있습니다.
