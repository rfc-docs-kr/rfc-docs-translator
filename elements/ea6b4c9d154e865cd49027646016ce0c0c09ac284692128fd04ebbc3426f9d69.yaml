"hash": |-
  ea6b4c9d154e865cd49027646016ce0c0c09ac284692128fd04ebbc3426f9d69
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Unfortunately, communicating authority to users can be difficult.
     For example, "phishing" is an attack on the user's perception of
     authority, where that perception can be misled by presenting similar
     branding in hypertext, possibly aided by userinfo obfuscating the
     authority component (see Section 4.2.1).  User agents can reduce the
     impact of phishing attacks by enabling users to easily inspect a
     target URI prior to making an action, by prominently distinguishing
     (or rejecting) userinfo when present, and by not sending stored
     credentials and cookies when the referring document is from an
     unknown or untrusted source.
"fixed": |-
  Unfortunately, communicating authority to users can be difficult. For example, "phishing" is an attack on the user's perception of authority, where that perception can be misled by presenting similar branding in hypertext, possibly aided by userinfo obfuscating the authority component (see Section 4.2.1).  User agents can reduce the impact of phishing attacks by enabling users to easily inspect a target URI prior to making an action, by prominently distinguishing (or rejecting) userinfo when present, and by not sending stored credentials and cookies when the referring document is from an unknown or untrusted source.
"ko": |-
  불행하게도 사용자에게 권한을 전달하는 것은 어려울 수 있습니다. 예를 들어, "피싱"은 권한에 대한 사용자의 인식에 대한 공격으로, 권한 구성 요소를 난독화하는 사용자 정보의 도움을 받아 유사한 브랜드를 하이퍼텍스트로 표시함으로써 해당 인식이 오해될 수 있습니다(섹션 4.2.1 참조). 사용자 에이전트는 사용자가 작업을 수행하기 전에 대상 URI를 쉽게 검사할 수 있도록 하고, 사용자 정보가 있는 경우 눈에 띄게 구별(또는 거부)하고, 참조 문서가 다른 문서에서 온 경우 저장된 자격 증명과 쿠키를 보내지 않음으로써 피싱 공격의 영향을 줄일 수 있습니다. 알 수 없거나 신뢰할 수 없는 소스.
