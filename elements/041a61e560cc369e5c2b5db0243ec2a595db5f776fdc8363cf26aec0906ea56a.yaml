"hash": |-
  041a61e560cc369e5c2b5db0243ec2a595db5f776fdc8363cf26aec0906ea56a
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Assuming that the hash function in EMSA-PKCS1-v1_5 has appropriate
     properties and the key size is sufficiently large, RSASSA-PKCS1-v1_5
     provides secure signatures, meaning that it is computationally
     infeasible to generate a signature without knowing the private key,
     and computationally infeasible to find a message with a given
     signature or two messages with the same signature. Also, in the
     encoding method EMSA-PKCS1-v1_5, a hash function identifier is
     embedded in the encoding.  Because of this feature, an adversary must
     invert or find collisions of the particular hash function being used;
     attacking a different hash function than the one selected by the
     signer is not useful to the adversary.
"fixed": |-
  Assuming that the hash function in EMSA-PKCS1-v1_5 has appropriate properties and the key size is sufficiently large, RSASSA-PKCS1-v1_5 provides secure signatures, meaning that it is computationally infeasible to generate a signature without knowing the private key, and computationally infeasible to find a message with a given signature or two messages with the same signature. Also, in the encoding method EMSA-PKCS1-v1_5, a hash function identifier is embedded in the encoding.  Because of this feature, an adversary must invert or find collisions of the particular hash function being used; attacking a different hash function than the one selected by the signer is not useful to the adversary.
"ko": |-
  EMSA-PKCS1-v1_5의 해시 함수에 적절한 속성이 있고 키 크기가 충분히 크다고 가정하면 RSASSA-PKCS1-v1_5는 보안 서명을 제공합니다. 즉, 개인 키를 모르고 서명을 생성하는 것은 계산적으로 불가능하고 계산적으로도 불가능합니다. 특정 서명이 있는 메시지를 찾거나 동일한 서명이 있는 메시지 두 개를 찾습니다. 또한 EMSA-PKCS1-v1_5 인코딩 방식에는 해시 함수 식별자가 인코딩에 내장되어 있습니다. 이 기능으로 인해 공격자는 사용 중인 특정 해시 함수의 충돌을 반전시키거나 찾아야 합니다. 서명자가 선택한 것과 다른 해시 함수를 공격하는 것은 적에게 유용하지 않습니다.
