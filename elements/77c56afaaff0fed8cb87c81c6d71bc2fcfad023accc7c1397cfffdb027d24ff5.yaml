"hash": |-
  77c56afaaff0fed8cb87c81c6d71bc2fcfad023accc7c1397cfffdb027d24ff5
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     RTSP requires the client to periodically show its liveness to the
     server or the server may terminate any session state.  Several
     different protocol mechanism include in their usage a liveness proof
     from the client.  These mechanisms are RTSP requests with a Session
     header to the server; if RTP & RTCP is used for media data transport
     and the transport is established, the RTCP message proves liveness;
     or through any other used media-transport protocol capable of
     indicating liveness of the RTSP client.  It is RECOMMENDED that a
     client not wait to the last second of the timeout before trying to
     send a liveness message.  The RTSP message may take some time to
     arrive safely at the receiver, due to packet loss and TCP
     retransmissions.  To show liveness between RTSP requests being issued
     to accomplish other things, the following mechanisms can be used, in
     descending order of preference:
"fixed": |-
  RTSP requires the client to periodically show its liveness to the server or the server may terminate any session state.  Several different protocol mechanism include in their usage a liveness proof from the client.  These mechanisms are RTSP requests with a Session header to the server; if RTP & RTCP is used for media data transport and the transport is established, the RTCP message proves liveness; or through any other used media-transport protocol capable of indicating liveness of the RTSP client.  It is RECOMMENDED that a client not wait to the last second of the timeout before trying to send a liveness message.  The RTSP message may take some time to arrive safely at the receiver, due to packet loss and TCP retransmissions.  To show liveness between RTSP requests being issued to accomplish other things, the following mechanisms can be used, in descending order of preference:
"ko": |-
  RTSP에서는 클라이언트가 주기적으로 서버에 활성 상태를 표시해야 합니다. 그렇지 않으면 서버가 세션 상태를 종료할 수 있습니다. 여러 가지 다른 프로토콜 메커니즘에는 클라이언트의 활성 증명이 포함됩니다. 이러한 메커니즘은 서버에 대한 세션 헤더가 있는 RTSP 요청입니다. 미디어 데이터 전송에 RTP 및 RTCP가 사용되고 전송이 설정된 경우 RTCP 메시지는 활성 상태를 증명합니다. 또는 RTSP 클라이언트의 활성 상태를 나타낼 수 있는 기타 사용된 미디어 전송 프로토콜을 통해. 클라이언트가 활성 메시지 전송을 시도하기 전에 제한 시간의 마지막 순간까지 기다리지 않는 것이 좋습니다. RTSP 메시지는 패킷 손실 및 TCP 재전송으로 인해 수신자에게 안전하게 도착하는 데 다소 시간이 걸릴 수 있습니다. 다른 작업을 수행하기 위해 발행되는 RTSP 요청 간의 활성 상태를 표시하려면 선호도 내림차순으로 다음 메커니즘을 사용할 수 있습니다.
