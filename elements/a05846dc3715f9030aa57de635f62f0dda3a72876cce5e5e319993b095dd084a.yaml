"hash": |-
  a05846dc3715f9030aa57de635f62f0dda3a72876cce5e5e319993b095dd084a
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     This authentication mechanism works only for client-to-server
     requests as currently defined.  This leaves server-to-client request
     outside of the context of TLS-based communication more vulnerable to
     message-injection attacks on the client.  Based on the server-to-
     client methods that exist, the potential risks are various: hijacking
     (REDIRECT), denial of service (TEARDOWN and PLAY_NOTIFY), or attacks
     with uncertain results (SET_PARAMETER).
"fixed": |-
  This authentication mechanism works only for client-to-server requests as currently defined.  This leaves server-to-client request outside of the context of TLS-based communication more vulnerable to message-injection attacks on the client.  Based on the server-to- client methods that exist, the potential risks are various: hijacking (REDIRECT), denial of service (TEARDOWN and PLAY_NOTIFY), or attacks with uncertain results (SET_PARAMETER).
"ko": |-
  이 인증 메커니즘은 현재 정의된 클라이언트-서버 요청에만 작동합니다. 이로 인해 TLS 기반 통신 컨텍스트 외부의 서버-클라이언트 요청이 클라이언트에 대한 메시지 삽입 공격에 더 취약해집니다. 존재하는 서버-클라이언트 방법에 따라 하이재킹(REDIRECT), 서비스 거부(TEARDOWN 및 PLAY_NOTIFY) 또는 결과가 불확실한 공격(SET_PARAMETER) 등 잠재적인 위험은 다양합니다.
