"hash": |-
  40a387f0af2a973019528644cf6a92831003b0b8431468c4bbbbf39b343ae475
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Sessions cannot be resumed unless both the client and server agree.
     If either party suspects that the session may have been compromised,
     or that certificates may have expired or been revoked, it should
     force a full handshake.  An upper limit of 24 hours is suggested for
     session ID lifetimes, since an attacker who obtains a master_secret
     may be able to impersonate the compromised party until the
     corresponding session ID is retired.  Applications that may be run in
     relatively insecure environments should not write session IDs to
     stable storage.
"fixed": |-
  Sessions cannot be resumed unless both the client and server agree. If either party suspects that the session may have been compromised, or that certificates may have expired or been revoked, it should force a full handshake.  An upper limit of 24 hours is suggested for session ID lifetimes, since an attacker who obtains a master_secret may be able to impersonate the compromised party until the corresponding session ID is retired.  Applications that may be run in relatively insecure environments should not write session IDs to stable storage.
"ko": |-
  클라이언트와 서버가 모두 동의하지 않으면 세션을 재개할 수 없습니다. 세션이 손상되었거나 인증서가 만료 또는 취소되었을 수 있다고 의심되는 경우 당사자는 전체 핸드셰이크를 강제해야 합니다. master_secret을 획득한 공격자가 해당 세션 ID가 만료될 때까지 손상된 당사자를 가장할 수 있으므로 세션 ID 수명에 대해 24시간의 상한이 제안됩니다. 상대적으로 안전하지 않은 환경에서 실행될 수 있는 애플리케이션은 안정적인 저장소에 세션 ID를 기록해서는 안 됩니다.
