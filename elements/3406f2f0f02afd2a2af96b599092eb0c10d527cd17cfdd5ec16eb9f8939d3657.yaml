"hash": |-
  3406f2f0f02afd2a2af96b599092eb0c10d527cd17cfdd5ec16eb9f8939d3657
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Though timer values are the choice of the implementation, mishandling
     of the timer can lead to serious congestion problems; for example, if
     many instances of a DTLS time out early and retransmit too quickly on
     a congested link.  Implementations SHOULD use an initial timer value
     of 1 second (the minimum defined in RFC 6298 [RFC6298]) and double
     the value at each retransmission, up to no less than the RFC 6298
     maximum of 60 seconds.  Note that we recommend a 1-second timer
     rather than the 3-second RFC 6298 default in order to improve latency
     for time-sensitive applications.  Because DTLS only uses
     retransmission for handshake and not dataflow, the effect on
     congestion should be minimal.
"fixed": |-
  Though timer values are the choice of the implementation, mishandling of the timer can lead to serious congestion problems; for example, if many instances of a DTLS time out early and retransmit too quickly on a congested link.  Implementations SHOULD use an initial timer value of 1 second (the minimum defined in RFC 6298 [RFC6298]) and double the value at each retransmission, up to no less than the RFC 6298 maximum of 60 seconds.  Note that we recommend a 1-second timer rather than the 3-second RFC 6298 default in order to improve latency for time-sensitive applications.  Because DTLS only uses retransmission for handshake and not dataflow, the effect on congestion should be minimal.
"ko": |-
  타이머 값은 구현에 따라 선택되지만 타이머를 잘못 처리하면 심각한 정체 문제가 발생할 수 있습니다. 예를 들어, DTLS의 많은 인스턴스가 일찍 시간 초과되어 혼잡한 링크에서 너무 빨리 재전송하는 경우입니다. 구현에서는 1초(RFC 6298 [RFC6298]에 정의된 최소값)의 초기 타이머 값을 사용해야 하며 각 재전송 시 값을 RFC 6298 최대값인 60초보다 두 배로 늘려야 합니다. 시간에 민감한 애플리케이션의 대기 시간을 개선하려면 RFC 6298 기본값인 3초 대신 1초 타이머를 권장합니다. DTLS는 데이터 흐름이 아닌 핸드셰이크에만 재전송을 사용하므로 혼잡에 대한 영향은 최소화되어야 합니다.
