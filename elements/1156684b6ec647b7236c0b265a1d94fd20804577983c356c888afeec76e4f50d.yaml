"hash": |-
  1156684b6ec647b7236c0b265a1d94fd20804577983c356c888afeec76e4f50d
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The characters slash ("/") and question mark ("?") may represent data
     within the query component.  Beware that some older, erroneous
     implementations may not handle such data correctly when it is used as
     the base URI for relative references (Section 5.1), apparently
     because they fail to distinguish query data from path data when
     looking for hierarchical separators.  However, as query components
     are often used to carry identifying information in the form of
     "key=value" pairs and one frequently used value is a reference to
     another URI, it is sometimes better for usability to avoid percent-
     encoding those characters.
"fixed": |-
  The characters slash ("/") and question mark ("?") may represent data within the query component.  Beware that some older, erroneous implementations may not handle such data correctly when it is used as the base URI for relative references (Section 5.1), apparently because they fail to distinguish query data from path data when looking for hierarchical separators.  However, as query components are often used to carry identifying information in the form of "key=value" pairs and one frequently used value is a reference to another URI, it is sometimes better for usability to avoid percent- encoding those characters.
"ko": |-
  슬래시("/") 및 물음표("?") 문자는 쿼리 구성 요소 내의 데이터를 나타낼 수 있습니다. 일부 오래되고 잘못된 구현은 상대 참조의 기본 URI(섹션 5.1)로 사용될 때 그러한 데이터를 올바르게 처리하지 못할 수 있다는 점에 유의하십시오. 계층적 구분 기호를 찾을 때 쿼리 데이터와 경로 데이터를 구별하지 못하기 때문입니다. 그러나 쿼리 구성 요소는 "key=value" 쌍의 형태로 식별 정보를 전달하는 데 자주 사용되며 자주 사용되는 값 중 하나는 다른 URI에 대한 참조이므로 해당 문자를 퍼센트 인코딩하지 않는 것이 유용성 측면에서 더 나을 때도 있습니다.
