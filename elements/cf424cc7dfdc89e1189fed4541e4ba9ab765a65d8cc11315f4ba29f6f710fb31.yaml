"hash": |-
  cf424cc7dfdc89e1189fed4541e4ba9ab765a65d8cc11315f4ba29f6f710fb31
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The main goal of QNAME minimisation is to improve privacy by sending
     less data.  However, it may have other advantages.  For instance, if
     a root name server receives a query from some resolver for A.example
     followed by B.example followed by C.example, the result will be three
     NXDOMAINs, since .example does not exist in the root zone.  Under
     query name minimisation, the root name servers would hear only one
     question (for .example itself) to which they could answer NXDOMAIN,
     thus opening up a negative caching opportunity in which the full
     resolver could know a priori that neither B.example nor C.example
     could exist.  Thus, in this common case the total number of upstream
     queries under QNAME minimisation would be counterintuitively less
     than the number of queries under the traditional iteration (as
     described in the DNS standard).
"fixed": |-
  The main goal of QNAME minimisation is to improve privacy by sending less data.  However, it may have other advantages.  For instance, if a root name server receives a query from some resolver for A.example followed by B.example followed by C.example, the result will be three NXDOMAINs, since .example does not exist in the root zone.  Under query name minimisation, the root name servers would hear only one question (for .example itself) to which they could answer NXDOMAIN, thus opening up a negative caching opportunity in which the full resolver could know a priori that neither B.example nor C.example could exist.  Thus, in this common case the total number of upstream queries under QNAME minimisation would be counterintuitively less than the number of queries under the traditional iteration (as described in the DNS standard).
"ko": |-
  QNAME 최소화의 주요 목표는 더 적은 양의 데이터를 전송하여 개인 정보 보호를 강화하는 것입니다. 그러나 다른 장점도 있을 수 있습니다. 예를 들어, 루트 이름 서버가 일부 확인자로부터 A.example, B.example, C.example에 대한 쿼리를 수신하는 경우 결과는 3개의 NXDOMAIN이 됩니다. 왜냐하면 .example이 루트 영역에 존재하지 않기 때문입니다. 쿼리 이름 최소화에서 루트 이름 서버는 NXDOMAIN에 대답할 수 있는 하나의 질문(.example 자체)만 듣게 되므로 전체 확인자가 B.example도 C도 아닌 것을 선험적으로 알 수 있는 부정적인 캐싱 기회가 열립니다. .example이 존재할 수 있습니다. 따라서 이 일반적인 경우 QNAME 최소화에 따른 총 업스트림 쿼리 수는 반직관적으로 기존 반복(DNS 표준에 설명된 대로)에 따른 쿼리 수보다 적습니다.
