"hash": |-
  4824d15e4e661f400c78340dbe75361743db3c4dfc6cd4bc2a002f624a39f5ca
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Existing HTTP clients and user agents typically retain authentication
     information indefinitely.  HTTP does not provide a mechanism for the
     origin server to direct clients to discard these cached credentials,
     since the protocol has no awareness of how credentials are obtained
     or managed by the user agent.  The mechanisms for expiring or
     revoking credentials can be specified as part of an authentication
     scheme definition.
"fixed": |-
  Existing HTTP clients and user agents typically retain authentication information indefinitely.  HTTP does not provide a mechanism for the origin server to direct clients to discard these cached credentials, since the protocol has no awareness of how credentials are obtained or managed by the user agent.  The mechanisms for expiring or revoking credentials can be specified as part of an authentication scheme definition.
"ko": |-
  기존 HTTP 클라이언트와 사용자 에이전트는 일반적으로 인증 정보를 무기한 유지합니다. HTTP는 원본 서버가 클라이언트에게 캐시된 자격 증명을 삭제하도록 지시하는 메커니즘을 제공하지 않습니다. 프로토콜은 사용자 에이전트가 자격 증명을 획득하거나 관리하는 방법을 인식하지 못하기 때문입니다. 자격 증명을 만료하거나 취소하는 메커니즘은 인증 체계 정의의 일부로 지정할 수 있습니다.
