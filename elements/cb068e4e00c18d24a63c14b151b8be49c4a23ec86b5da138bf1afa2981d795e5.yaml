"hash": |-
  cb068e4e00c18d24a63c14b151b8be49c4a23ec86b5da138bf1afa2981d795e5
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Four record protocol clients are described in this document: the
     handshake protocol, the alert protocol, the change cipher spec
     protocol, and the application data protocol. In order to allow
     extension of the TLS protocol, additional record types can be
     supported by the record protocol. Any new record types should
     allocate type values immediately beyond the ContentType values for
     the four record types described here (see Appendix A.2). If a TLS
     implementation receives a record type it does not understand, it
     should just ignore it. Any protocol designed for use over TLS must be
     carefully designed to deal with all possible attacks against it.
     Note that because the type and length of a record are not protected
     by encryption, care should be take to minimize the value of traffic
     analysis of these values.
"fixed": |-
  Four record protocol clients are described in this document: the handshake protocol, the alert protocol, the change cipher spec protocol, and the application data protocol. In order to allow extension of the TLS protocol, additional record types can be supported by the record protocol. Any new record types should allocate type values immediately beyond the ContentType values for the four record types described here (see Appendix A.2). If a TLS implementation receives a record type it does not understand, it should just ignore it. Any protocol designed for use over TLS must be carefully designed to deal with all possible attacks against it. Note that because the type and length of a record are not protected by encryption, care should be take to minimize the value of traffic analysis of these values.
"ko": |-
  이 문서에서는 네 가지 레코드 프로토콜 클라이언트(핸드셰이크 프로토콜, 경고 프로토콜, 암호 사양 변경 프로토콜, 애플리케이션 데이터 프로토콜)에 대해 설명합니다. TLS 프로토콜의 확장을 허용하기 위해 레코드 프로토콜에서 추가 레코드 유형을 지원할 수 있습니다. 모든 새로운 레코드 유형은 여기에 설명된 네 가지 레코드 유형에 대한 ContentType 값을 넘어서는 유형 값을 즉시 할당해야 합니다(부록 A.2 참조). TLS 구현이 이해하지 못하는 레코드 유형을 수신하는 경우 이를 무시해야 합니다. TLS를 통해 사용하도록 설계된 모든 프로토콜은 이에 대한 가능한 모든 공격을 처리하도록 신중하게 설계되어야 합니다. 레코드의 유형과 길이는 암호화로 보호되지 않으므로 이러한 값의 트래픽 분석 값을 최소화하도록 주의해야 합니다.
