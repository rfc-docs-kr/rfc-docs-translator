"hash": |-
  73eb4f7f813ac4cc15ea2af66b9f93425f3f9c560ff7dcf7f778644d5428ac70
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
        HTTP proxies, besides acting as HTTP proxies, often offer a
        transport-protocol proxying function ("CONNECT") to enable end-to-
        end transport layer security through the proxy.  No such function
        is defined for CoAP-to-CoAP proxies in this specification, as
        forwarding of UDP packets is unlikely to be of much value in
        Constrained RESTful Environments.  See also Section 10.2.7 for the
        cross-proxy case.
"fixed": |-
  - HTTP proxies, besides acting as HTTP proxies, often offer a transport-protocol proxying function ("CONNECT") to enable end-to- end transport layer security through the proxy.  No such function is defined for CoAP-to-CoAP proxies in this specification, as forwarding of UDP packets is unlikely to be of much value in Constrained RESTful Environments.  See also Section 10.2.7 for the cross-proxy case.
"ko": |-
  - HTTP 프록시는 HTTP 프록시 역할을 하는 것 외에도 종종 전송 프로토콜 프록시 기능("CONNECT")을 제공하여 프록시를 통해 종단 간 전송 계층 보안을 활성화합니다. 제한된 RESTful 환경에서는 UDP 패킷 전달이 큰 가치가 없을 가능성이 높기 때문에 이 사양에서는 CoAP-CoAP 프록시에 대해 그러한 기능이 정의되지 않았습니다. 교차 프록시의 경우 섹션 10.2.7을 참조하세요.
