"hash": |-
  889ba9d7cff3f609610f1db0577de515cb7143315c0b462ac0839c9c93ab2086
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Note also that the original ChaCha had a 64-bit nonce and 64-bit
     block count.  We have modified this here to be more consistent with
     recommendations in Section 3.2 of [RFC5116].  This limits the use of
     a single (key,nonce) combination to 2^32 blocks, or 256 GB, but that
     is enough for most uses.  In cases where a single key is used by
     multiple senders, it is important to make sure that they don't use
     the same nonces.  This can be assured by partitioning the nonce space
     so that the first 32 bits are unique per sender, while the other 64
     bits come from a counter.
"fixed": |-
  Note also that the original ChaCha had a 64-bit nonce and 64-bit block count.  We have modified this here to be more consistent with recommendations in Section 3.2 of [RFC5116].  This limits the use of a single (key,nonce) combination to 2^32 blocks, or 256 GB, but that is enough for most uses.  In cases where a single key is used by multiple senders, it is important to make sure that they don't use the same nonces.  This can be assured by partitioning the nonce space so that the first 32 bits are unique per sender, while the other 64 bits come from a counter.
"ko": |-
  또한 원본 ChaCha에는 64비트 nonce와 64비트 블록 수가 있었습니다. 우리는 [RFC5116] 섹션 3.2의 권장 사항과 더욱 일치하도록 이를 수정했습니다. 이는 단일 (key,nonce) 조합의 사용을 2^32 블록 또는 256GB로 제한하지만 대부분의 용도에는 충분합니다. 여러 발신자가 단일 키를 사용하는 경우 동일한 nonce를 사용하지 않는지 확인하는 것이 중요합니다. 처음 32비트는 발신자별로 고유하고 나머지 64비트는 카운터에서 나오도록 nonce 공간을 분할하면 이를 보장할 수 있습니다.
