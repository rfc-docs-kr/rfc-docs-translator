"hash": |-
  b2505622fab1c567445ee66454610e38bdc4808c487d91c6c37b53003345f8c1
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Suppose, for example, that a connection is opened starting with
     sequence number S.  Suppose that this connection is not used much and
     that eventually the initial sequence number function (ISN(t)) takes
     on a value equal to the sequence number, say S1, of the last segment
     sent by this TCP endpoint on a particular connection.  Now suppose,
     at this instant, the host reboots and establishes a new incarnation
     of the connection.  The initial sequence number chosen is S1 = ISN(t)
     -- last used sequence number on old incarnation of connection!  If
     the recovery occurs quickly enough, any old duplicates in the net
     bearing sequence numbers in the neighborhood of S1 may arrive and be
     treated as new packets by the receiver of the new incarnation of the
     connection.
"fixed": |-
  Suppose, for example, that a connection is opened starting with sequence number S.  Suppose that this connection is not used much and that eventually the initial sequence number function (ISN(t)) takes on a value equal to the sequence number, say S1, of the last segment sent by this TCP endpoint on a particular connection.  Now suppose, at this instant, the host reboots and establishes a new incarnation of the connection.  The initial sequence number chosen is S1 = ISN(t) -- last used sequence number on old incarnation of connection!  If the recovery occurs quickly enough, any old duplicates in the net bearing sequence numbers in the neighborhood of S1 may arrive and be treated as new packets by the receiver of the new incarnation of the connection.
"ko": |-
  예를 들어 시퀀스 번호 S로 시작하는 연결이 열린다고 가정합니다. 이 연결이 많이 사용되지 않고 결국 초기 시퀀스 번호 함수(ISN(t))가 시퀀스 번호와 동일한 값, 즉 S1을 취한다고 가정합니다. , 특정 연결에서 이 TCP 끝점이 보낸 마지막 세그먼트입니다. 이제 이 순간 호스트가 재부팅되고 새로운 연결이 설정된다고 가정해 보겠습니다. 선택된 초기 시퀀스 번호는 S1 = ISN(t)입니다. 연결의 이전 구현에서 마지막으로 사용된 시퀀스 번호입니다! 복구가 충분히 빠르게 발생하면 S1 근처에 있는 네트 베어링 시퀀스 번호의 이전 중복 항목이 도착하여 연결의 새로운 구현 수신자에 의해 새 패킷으로 처리될 수 있습니다.
