"hash": |-
  fe68a1474fb05e0477a4cdc0214075ddb430026a68a6f2c0685b46ed2607ae0e
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The injector now needs to inform its peers of the updated tree,
     communicating the addition of the new munro hash 9.  Hence, it sends
     a HAVE message with a chunk specification for nodes 8 + 10 to its
     peers.  As a response, Peer P requests the newly created chunk, e.g.,
     chunk 8, from the injector by sending a REQUEST message.  In reply,
     the injector sends the signed munro hash of node 9 as an INTEGRITY
     message with the hash of node 9, and a SIGNED_INTEGRITY message with
     the signature of the hash of node 9.  These messages are followed by
     an INTEGRITY message with the hash of node 10 and a DATA message with
     chunk 8.
"fixed": |-
  The injector now needs to inform its peers of the updated tree, communicating the addition of the new munro hash 9.  Hence, it sends a HAVE message with a chunk specification for nodes 8 + 10 to its peers.  As a response, Peer P requests the newly created chunk, e.g., chunk 8, from the injector by sending a REQUEST message.  In reply, the injector sends the signed munro hash of node 9 as an INTEGRITY message with the hash of node 9, and a SIGNED_INTEGRITY message with the signature of the hash of node 9.  These messages are followed by an INTEGRITY message with the hash of node 10 and a DATA message with chunk 8.
"ko": |-
  이제 인젝터는 업데이트된 트리를 피어에게 알리고 새로운 먼로 해시 9의 추가를 전달해야 합니다. 따라서 노드 8 + 10에 대한 청크 사양이 포함된 HAVE 메시지를 피어에게 보냅니다. 이에 대한 응답으로 Peer P는 REQUEST 메시지를 전송하여 새로 생성된 청크(예: 청크 8)를 인젝터에 요청합니다. 이에 대한 응답으로 인젝터는 노드 9의 해시가 포함된 INTEGRITY 메시지와 노드 9의 해시 서명이 포함된 SIGNED_INTEGRITY 메시지로 노드 9의 서명된 munro 해시를 보냅니다. 이 메시지 뒤에는 다음의 해시가 포함된 INTEGRITY 메시지가 옵니다. 노드 10과 청크 8이 있는 DATA 메시지.
