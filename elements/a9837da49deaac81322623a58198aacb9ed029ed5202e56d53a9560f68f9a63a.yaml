"hash": |-
  a9837da49deaac81322623a58198aacb9ed029ed5202e56d53a9560f68f9a63a
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Both RFC 1738 and RFC 1808 refer to the "reserved" set of characters
     as if URI-interpreting software were limited to a single set of
     characters with a reserved purpose (i.e., as meaning something other
     than the data to which the characters correspond), and that this set
     was fixed by the URI scheme.  However, this has not been true in
     practice; any character that is interpreted differently when it is
     escaped is, in effect, reserved.  Furthermore, the interpreting
     engine on a HTTP server is often dependent on the resource, not just
     the URI scheme.  The description of reserved characters has been
     changed accordingly.
"fixed": |-
  Both RFC 1738 and RFC 1808 refer to the "reserved" set of characters as if URI-interpreting software were limited to a single set of characters with a reserved purpose (i.e., as meaning something other than the data to which the characters correspond), and that this set was fixed by the URI scheme.  However, this has not been true in practice; any character that is interpreted differently when it is escaped is, in effect, reserved.  Furthermore, the interpreting engine on a HTTP server is often dependent on the resource, not just the URI scheme.  The description of reserved characters has been changed accordingly.
"ko": |-
  RFC 1738과 RFC 1808은 모두 URI 해석 소프트웨어가 예약된 목적(즉, 문자가 해당하는 데이터가 아닌 다른 것을 의미함)을 가진 단일 문자 세트로 제한되는 것처럼 "예약된" 문자 세트를 참조합니다. 그리고 이 세트는 URI 체계에 의해 수정되었습니다. 그러나 이는 실제로는 사실이 아닙니다. 이스케이프 처리될 때 다르게 해석되는 모든 문자는 사실상 예약되어 있습니다. 게다가 HTTP 서버의 해석 엔진은 URI 체계뿐만 아니라 리소스에 의존하는 경우가 많습니다. 이에 따라 예약된 문자에 대한 설명이 변경되었습니다.
