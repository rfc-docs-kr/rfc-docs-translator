"hash": |-
  970ef11be1896e9eadbd1402349151b733bd3d9c2ae29edeafb565168ab22981
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Some applications may include case-insensitive information in a case-
     sensitive value, such as including a DNS name as part of a "kid" (key
     ID) value.  In those cases, the application may need to define a
     convention for the canonical case to use for representing the case-
     insensitive portions, such as lowercasing them, if more than one
     party might need to produce the same value so that they can be
     compared.  (However, if all other parties consume whatever value the
     producing party emitted verbatim without attempting to compare it to
     an independently produced value, then the case used by the producer
     will not matter.)
"fixed": |-
  Some applications may include case-insensitive information in a case- sensitive value, such as including a DNS name as part of a "kid" (key ID) value.  In those cases, the application may need to define a convention for the canonical case to use for representing the case- insensitive portions, such as lowercasing them, if more than one party might need to produce the same value so that they can be compared.  (However, if all other parties consume whatever value the producing party emitted verbatim without attempting to compare it to an independently produced value, then the case used by the producer will not matter.)
"ko": |-
  일부 애플리케이션은 대소문자를 구분하지 않는 정보를 대소문자 구분 값에 포함할 수 있습니다(예: "kid"(키 ID) 값의 일부로 DNS 이름을 포함하는 경우). 이러한 경우 애플리케이션은 대소문자를 구분하지 않는 부분을 나타내는 데 사용할 표준 케이스에 대한 규칙을 정의해야 할 수 있습니다(예: 소문자로 표시). 둘 이상의 당사자가 동일한 값을 생성하여 비교할 수 있도록 해야 할 수 있습니다. (그러나 다른 모든 당사자가 독립적으로 생성된 값과 비교하려고 하지 않고 생성 당사자가 그대로 내보낸 값을 소비하는 경우 생성자가 사용한 케이스는 중요하지 않습니다.)
