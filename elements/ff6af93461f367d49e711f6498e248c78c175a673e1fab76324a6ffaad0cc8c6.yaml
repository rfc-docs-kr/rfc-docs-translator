"hash": |-
  ff6af93461f367d49e711f6498e248c78c175a673e1fab76324a6ffaad0cc8c6
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Both the SSLv3 and TLS 1.0/TLS 1.1 specifications require
     implementations to ignore data following the ClientHello (i.e.,
     extensions) if they do not understand it.  However, some SSLv3 and
     TLS 1.0 implementations incorrectly fail the handshake in such a
     case.  This means that clients that offer the "renegotiation_info"
     extension may encounter handshake failures.  In order to enhance
     compatibility with such servers, this document defines a second
     signaling mechanism via a special Signaling Cipher Suite Value (SCSV)
     "TLS_EMPTY_RENEGOTIATION_INFO_SCSV", with code point {0x00, 0xFF}.
     This SCSV is not a true cipher suite (it does not correspond to any
     valid set of algorithms) and cannot be negotiated.  Instead, it has
     the same semantics as an empty "renegotiation_info" extension, as
     described in the following sections.  Because SSLv3 and TLS
     implementations reliably ignore unknown cipher suites, the SCSV may
     be safely sent to any server.  The SCSV can also be included in the
     SSLv2 backward compatible CLIENT-HELLO (see Appendix E.2 of
     [RFC5246]).
"fixed": |-
  Both the SSLv3 and TLS 1.0/TLS 1.1 specifications require implementations to ignore data following the ClientHello (i.e., extensions) if they do not understand it.  However, some SSLv3 and TLS 1.0 implementations incorrectly fail the handshake in such a case.  This means that clients that offer the "renegotiation_info" extension may encounter handshake failures.  In order to enhance compatibility with such servers, this document defines a second signaling mechanism via a special Signaling Cipher Suite Value (SCSV) "TLS_EMPTY_RENEGOTIATION_INFO_SCSV", with code point {0x00, 0xFF}. This SCSV is not a true cipher suite (it does not correspond to any valid set of algorithms) and cannot be negotiated.  Instead, it has the same semantics as an empty "renegotiation_info" extension, as described in the following sections.  Because SSLv3 and TLS implementations reliably ignore unknown cipher suites, the SCSV may be safely sent to any server.  The SCSV can also be included in the SSLv2 backward compatible CLIENT-HELLO (see Appendix E.2 of [RFC5246]).
"ko": |-
  SSLv3 및 TLS 1.0/TLS 1.1 사양 모두 이해하지 못하는 경우 ClientHello(즉, 확장) 뒤에 오는 데이터를 무시하도록 구현을 요구합니다. 그러나 일부 SSLv3 및 TLS 1.0 구현에서는 이러한 경우 핸드셰이크가 잘못 실패합니다. 이는 "renegotiation_info" 확장을 제공하는 클라이언트에서 핸드셰이크 오류가 발생할 수 있음을 의미합니다. 이러한 서버와의 호환성을 향상시키기 위해 이 문서에서는 코드 포인트가 {0x00, 0xFF}인 특수 SCSV(Signaling Cipher Suite Value) "TLS_EMPTY_RENEGOTIATION_INFO_SCSV"를 통해 두 번째 신호 메커니즘을 정의합니다. 이 SCSV는 실제 암호화 제품군이 아니므로(유효한 알고리즘 세트와 일치하지 않음) 협상할 수 없습니다. 대신 다음 섹션에 설명된 대로 빈 "renegotiation_info" 확장과 동일한 의미를 갖습니다. SSLv3 및 TLS 구현은 알 수 없는 암호 그룹을 안정적으로 무시하므로 SCSV는 모든 서버로 안전하게 전송될 수 있습니다. SCSV는 SSLv2 이전 버전과 호환되는 CLIENT-HELLO에도 포함될 수 있습니다([RFC5246]의 부록 E.2 참조).
