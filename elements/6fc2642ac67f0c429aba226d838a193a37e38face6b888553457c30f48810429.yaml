"hash": |-
  6fc2642ac67f0c429aba226d838a193a37e38face6b888553457c30f48810429
"type": |-
  Content
"comment": !!null |-
  null
"original": |-
  /*
   *  hmacInput
   *
   *  Description:
   *      This function accepts an array of octets as the next portion
   *      of the message.  It may be called multiple times.
   *
   *  Parameters:
   *      context: [in/out]
   *          The HMAC context to update.
   *      text[ ]: [in]
   *          An array of octets representing the next portion of
   *          the message.
   *      text_len: [in]
   *          The length of the message in text.
   *
   *  Returns:
   *      sha Error Code.
   *
   */
  int hmacInput(HMACContext *context, const unsigned char *text,
      int text_len)
  {
    if (!context) return shaNull;
    if (context->Corrupted) return context->Corrupted;
    if (context->Computed) return context->Corrupted = shaStateError;
    /* then text of datagram */
    return context->Corrupted =
      USHAInput(&context->shaContext, text, text_len);
  }
"fixed": |-
  /* *  hmacInput * *  Description: *      This function accepts an array of octets as the next portion *      of the message.  It may be called multiple times. * *  Parameters: *      context: [in/out] *          The HMAC context to update. *      text[ ]: [in] *          An array of octets representing the next portion of *          the message. *      text_len: [in] *          The length of the message in text. * *  Returns: *      sha Error Code. * */ int hmacInput(HMACContext *context, const unsigned char *text, int text_len) { if (!context) return shaNull; if (context->Corrupted) return context->Corrupted; if (context->Computed) return context->Corrupted = shaStateError; /* then text of datagram */ return context->Corrupted = USHAInput(&context->shaContext, text, text_len); }
"ko": |-
  /* * hmacInput * * 설명: * 이 함수는 메시지의 다음 부분으로 옥텟 배열을 * 받아들입니다. 여러 번 호출될 수 있습니다. * * 매개변수: * context: [in/out] * 업데이트할 HMAC 컨텍스트입니다. * text[ ]: [in] * 메시지의 다음 부분을 나타내는 옥텟의 배열입니다. * text_len: [in] * 텍스트로 된 메시지의 길이입니다. * * 반환: * sha 오류 코드. * */ int hmacInput(HMACContext *context, const unsigned char *text, int text_len) { if (!context) return shaNull; if (컨텍스트->손상) return context->손상; if (컨텍스트->계산됨) return context->Corrupted = shaStateError; /* 데이터그램의 텍스트 */ return context->Corrupted = USHAInput(&context->shaContext, text, text_len); }
