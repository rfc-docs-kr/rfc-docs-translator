"hash": |-
  0fc6332772d15ce3259fd1ea990e6487c17101b4a4da8e4de61a4b791836c686
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     A host MAY implement a "half-duplex" TCP close sequence, so that an
     application that has called CLOSE cannot continue to read data from
     the connection (MAY-1).  If such a host issues a CLOSE call while
     received data is still pending in the TCP connection, or if new data
     is received after CLOSE is called, its TCP implementation SHOULD send
     a RST to show that data was lost (SHLD-3).  See [23], Section 2.17
     for discussion.
"fixed": |-
  A host MAY implement a "half-duplex" TCP close sequence, so that an application that has called CLOSE cannot continue to read data from the connection (MAY-1).  If such a host issues a CLOSE call while received data is still pending in the TCP connection, or if new data is received after CLOSE is called, its TCP implementation SHOULD send a RST to show that data was lost (SHLD-3).  See [23], Section 2.17 for discussion.
"ko": |-
  호스트는 "반이중" TCP 닫기 시퀀스를 구현할 수 있으므로 CLOSE를 호출한 애플리케이션은 연결에서 데이터를 계속 읽을 수 없습니다(MAY-1). 이러한 호스트가 TCP 연결에서 수신된 데이터가 아직 보류 중인 동안 CLOSE 호출을 발행하거나 CLOSE가 호출된 후 새 데이터가 수신되는 경우, TCP 구현은 RST를 보내 데이터가 손실되었음을 표시해야 합니다(SHLD-3). 논의는 [23], 섹션 2.17을 참조하십시오.
