"hash": |-
  dbbd833d60eb408706dc521196ec4fe57163870151960ddd607f75c7af53758f
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
           For example, consider a valid_policy_tree with a node of depth
           i-1 where the expected_policy_set is {Gold, Silver}.  Assume
           anyPolicy appears in the certificate policies extension of
           certificate i, but Gold and Silver do not.  This rule will
           generate two child nodes of depth i, one for each policy.  The
           result is shown below as Figure 6.
"fixed": |-
  - For example, consider a valid_policy_tree with a node of depth i-1 where the expected_policy_set is {Gold, Silver}.  Assume anyPolicy appears in the certificate policies extension of certificate i, but Gold and Silver do not.  This rule will generate two child nodes of depth i, one for each policy.  The result is shown below as Figure 6.
"ko": |-
  - 예를 들어, Expect_policy_set이 {Gold, Silver}인 깊이 i-1의 노드가 있는 valid_policy_tree를 생각해 보세요. anyPolicy가 인증서 i의 인증서 정책 확장에 나타나지만 Gold와 Silver는 그렇지 않다고 가정합니다. 이 규칙은 각 정책마다 하나씩, 깊이 i의 두 하위 노드를 생성합니다. 그 결과는 아래 그림 6과 같다.
