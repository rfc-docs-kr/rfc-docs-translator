"hash": |-
  b582a0cfcf5befc6a7d82da6a006f754873e5072090a005ecf3d6b8135d118b4
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Implementations are responsible for verifying the integrity of
     certificates and should generally support certificate revocation
     messages.  Absent a specific indication from an application profile,
     certificates should always be verified to ensure proper signing by a
     trusted certificate authority (CA).  The selection and addition of
     trust anchors should be done very carefully.  Users should be able to
     view information about the certificate and trust anchor.
     Applications SHOULD also enforce minimum and maximum key sizes.  For
     example, certification paths containing keys or signatures weaker
     than 2048-bit RSA or 224-bit ECDSA are not appropriate for secure
     applications.
"fixed": |-
  Implementations are responsible for verifying the integrity of certificates and should generally support certificate revocation messages.  Absent a specific indication from an application profile, certificates should always be verified to ensure proper signing by a trusted certificate authority (CA).  The selection and addition of trust anchors should be done very carefully.  Users should be able to view information about the certificate and trust anchor. Applications SHOULD also enforce minimum and maximum key sizes.  For example, certification paths containing keys or signatures weaker than 2048-bit RSA or 224-bit ECDSA are not appropriate for secure applications.
"ko": |-
  구현에서는 인증서의 무결성을 확인할 책임이 있으며 일반적으로 인증서 해지 메시지를 지원해야 합니다. 애플리케이션 프로필에 특정 표시가 없으면 인증서는 항상 신뢰할 수 있는 인증 기관(CA)의 적절한 서명을 확인해야 합니다. 트러스트 앵커의 선택과 추가는 매우 신중하게 이루어져야 합니다. 사용자는 인증서 및 트러스트 앵커에 대한 정보를 볼 수 있어야 합니다. 애플리케이션은 또한 최소 및 최대 키 크기를 적용해야 합니다(SHOULD). 예를 들어, 2048비트 RSA 또는 224비트 ECDSA보다 약한 키나 서명이 포함된 인증 경로는 보안 애플리케이션에 적합하지 않습니다.
