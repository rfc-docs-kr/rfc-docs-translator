"hash": |-
  0d0a23ccb28baed724ede92e7ec07c36f3ee61474e19c1c6a03ef0a9f741e3e8
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Trailer field semantics now transcend the specifics of chunked
     transfer coding.  The use of trailer fields has been further limited
     to allow generation as a trailer field only when the sender knows the
     field defines that usage and to allow merging into the header section
     only if the recipient knows the corresponding field definition
     permits and defines how to merge.  In all other cases,
     implementations are encouraged either to store the trailer fields
     separately or to discard them instead of merging.  (Section 6.5.1)
"fixed": |-
  Trailer field semantics now transcend the specifics of chunked transfer coding.  The use of trailer fields has been further limited to allow generation as a trailer field only when the sender knows the field defines that usage and to allow merging into the header section only if the recipient knows the corresponding field definition permits and defines how to merge.  In all other cases, implementations are encouraged either to store the trailer fields separately or to discard them instead of merging.  (Section 6.5.1)
"ko": |-
  트레일러 필드 의미론은 이제 청크 분할 전송 코딩의 특성을 초월합니다. 트레일러 필드의 사용은 발신자가 필드가 해당 사용법을 정의한다는 것을 알고 있는 경우에만 트레일러 필드로 생성을 허용하고 수신자가 해당 필드 정의가 허용하고 병합 방법을 정의하는 경우에만 헤더 섹션에 병합을 허용하도록 제한되었습니다. 다른 모든 경우에는 트레일러 필드를 별도로 저장하거나 병합하는 대신 삭제하는 것이 권장됩니다. (섹션 6.5.1)
