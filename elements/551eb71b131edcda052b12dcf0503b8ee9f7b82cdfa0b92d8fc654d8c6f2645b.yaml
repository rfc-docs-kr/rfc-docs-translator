"hash": |-
  551eb71b131edcda052b12dcf0503b8ee9f7b82cdfa0b92d8fc654d8c6f2645b
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The third property we're concerned with is PEER ENTITY
     AUTHENTICATION.  What we mean by this is that we know that one of the
     endpoints in the communication is the one we intended.  Without peer
     entity authentication, it's very difficult to provide either
     confidentiality or data integrity.  For instance, if we receive a
     message from Alice, the property of data integrity doesn't do us much
     good unless we know that it was in fact sent by Alice and not the
     attacker.  Similarly, if we want to send a confidential message to
     Bob, it's not of much value to us if we're actually sending a
     confidential message to the attacker.
"fixed": |-
  The third property we're concerned with is PEER ENTITY AUTHENTICATION.  What we mean by this is that we know that one of the endpoints in the communication is the one we intended.  Without peer entity authentication, it's very difficult to provide either confidentiality or data integrity.  For instance, if we receive a message from Alice, the property of data integrity doesn't do us much good unless we know that it was in fact sent by Alice and not the attacker.  Similarly, if we want to send a confidential message to Bob, it's not of much value to us if we're actually sending a confidential message to the attacker.
"ko": |-
  우리가 관심을 갖는 세 번째 속성은 PEER ENTITY AUTHENTICATION입니다. 이것이 의미하는 바는 통신의 끝점 중 하나가 우리가 의도한 끝점임을 안다는 것입니다. 피어 엔터티 인증이 없으면 기밀성이나 데이터 무결성을 제공하기가 매우 어렵습니다. 예를 들어, Alice로부터 메시지를 받은 경우, 해당 메시지가 실제로 공격자가 아니라 Alice가 보낸 것임을 알지 못하는 한 데이터 무결성 속성은 우리에게 큰 도움이 되지 않습니다. 마찬가지로 Bob에게 기밀 메시지를 보내려고 할 때 실제로 공격자에게 기밀 메시지를 보내는 것은 우리에게 별 가치가 없습니다.
