"hash": |-
  f6d2dcc704737b6c156c2e1a55017986a3a3531aca1048cb20cc3a2946a764a5
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     In practice, this approach would probably best be handled by a per-
     server timer that is restarted whenever a response to a
     DHCPLEASEQUERY message is received, and expires after one minute.
     The per-server timer would start off expired, and in the expired
     state only one DHCPLEASEQUERY message would be queued for the
     associated server.
"fixed": |-
  In practice, this approach would probably best be handled by a per- server timer that is restarted whenever a response to a DHCPLEASEQUERY message is received, and expires after one minute. The per-server timer would start off expired, and in the expired state only one DHCPLEASEQUERY message would be queued for the associated server.
"ko": |-
  실제로 이 접근 방식은 DHCPLEASEQUERY 메시지에 대한 응답이 수신될 때마다 다시 시작되고 1분 후에 만료되는 서버별 타이머로 처리하는 것이 가장 좋습니다. 서버별 타이머는 만료된 상태에서 시작되며, 만료된 상태에서는 하나의 DHCPLEASEQUERY 메시지만 연결된 서버에 대해 대기열에 추가됩니다.
