"hash": |-
  5fd257893543a0cbee9bc261475e8593dc0f24d53cce53ddf78045c7044fdc7c
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Implementations of the key derivation function must compute the
     entire result, which, in this specification, is a key-encryption key,
     before outputting any portion of the result.  The resulting key-
     encryption key must be protected.  Compromise of the key-encryption
     key may result in the disclosure of all content-encryption keys or
     content-authenticated-encryption keys that were protected with that
     keying material; this, in turn, may result in the disclosure of the
     content.  Note that there are two key-encryption keys when a PSK with
     a key agreement algorithm is used, with similar consequences for the
     compromise of either one of these keys.
"fixed": |-
  Implementations of the key derivation function must compute the entire result, which, in this specification, is a key-encryption key, before outputting any portion of the result.  The resulting key- encryption key must be protected.  Compromise of the key-encryption key may result in the disclosure of all content-encryption keys or content-authenticated-encryption keys that were protected with that keying material; this, in turn, may result in the disclosure of the content.  Note that there are two key-encryption keys when a PSK with a key agreement algorithm is used, with similar consequences for the compromise of either one of these keys.
"ko": |-
  키 파생 함수의 구현은 결과의 일부를 출력하기 전에 전체 결과(이 사양에서는 키 암호화 키)를 계산해야 합니다.  결과 키 암호화 키는 보호되어야 합니다.  키 암호화 키가 손상되면 해당 키 자료로 보호되었던 모든 콘텐츠 암호화 키 또는 콘텐츠 인증 암호화 키가 공개될 수 있습니다. 결과적으로 콘텐츠가 공개될 수 있습니다.  키 계약 알고리즘이 포함된 PSK를 사용하는 경우 두 개의 키 암호화 키가 있으며, 이러한 키 중 하나가 손상되면 비슷한 결과가 발생합니다.
