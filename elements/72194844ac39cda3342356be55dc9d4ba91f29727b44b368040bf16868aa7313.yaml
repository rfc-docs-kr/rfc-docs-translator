"hash": |-
  72194844ac39cda3342356be55dc9d4ba91f29727b44b368040bf16868aa7313
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Reverse-proxies do not make use of the Proxy-Uri or Proxy-Scheme
     options but need to determine the destination (next hop) of a request
     from information in the request and information in their
     configuration.  For example, a reverse-proxy might offer various
     resources as if they were its own resources, after having learned of
     their existence through resource discovery.  The reverse-proxy is
     free to build a namespace for the URIs that identify these resources.
     A reverse-proxy may also build a namespace that gives the client more
"fixed": |-
  Reverse-proxies do not make use of the Proxy-Uri or Proxy-Scheme options but need to determine the destination (next hop) of a request from information in the request and information in their configuration.  For example, a reverse-proxy might offer various resources as if they were its own resources, after having learned of their existence through resource discovery.  The reverse-proxy is free to build a namespace for the URIs that identify these resources. A reverse-proxy may also build a namespace that gives the client more
"ko": |-
  역방향 프록시는 Proxy-Uri 또는 Proxy-Scheme 옵션을 사용하지 않지만 요청 정보 및 구성 정보에서 요청 대상(다음 홉)을 결정해야 합니다. 예를 들어 역방향 프록시는 리소스 검색을 통해 리소스의 존재를 알게 된 후 다양한 리소스를 자신의 리소스인 것처럼 제공할 수 있습니다. 역방향 프록시는 이러한 리소스를 식별하는 URI에 대한 네임스페이스를 자유롭게 구축할 수 있습니다. 역방향 프록시는 클라이언트에게 더 많은 것을 제공하는 네임스페이스를 구축할 수도 있습니다.
