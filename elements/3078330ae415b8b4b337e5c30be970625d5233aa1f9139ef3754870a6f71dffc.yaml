"hash": |-
  3078330ae415b8b4b337e5c30be970625d5233aa1f9139ef3754870a6f71dffc
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The rekeying technique in TLS 1.3 (see Section 7.2) follows the
     construction of the serial generator as discussed in [REKEY], which
     shows that rekeying can allow keys to be used for a larger number of
     encryptions than without rekeying.  This relies on the security of
     the HKDF-Expand-Label function as a pseudorandom function (PRF).  In
     addition, as long as this function is truly one way, it is not
     possible to compute traffic keys from prior to a key change (forward
     secrecy).
"fixed": |-
  The rekeying technique in TLS 1.3 (see Section 7.2) follows the construction of the serial generator as discussed in [REKEY], which shows that rekeying can allow keys to be used for a larger number of encryptions than without rekeying.  This relies on the security of the HKDF-Expand-Label function as a pseudorandom function (PRF).  In addition, as long as this function is truly one way, it is not possible to compute traffic keys from prior to a key change (forward secrecy).
"ko": |-
  TLS 1.3의 키 재생성 기술(7.2절 참조)은 [REKEY]에서 설명한 직렬 생성기의 구성을 따릅니다. 이는 키 재생을 통해 키 재생이 없을 때보다 더 많은 수의 암호화에 키를 사용할 수 있음을 보여줍니다. 이는 의사 난수 함수(PRF)로서 HKDF-Expand-Label 함수의 보안에 의존합니다. 또한 이 기능이 실제로 단방향인 한 키 변경 이전의 트래픽 키를 계산하는 것은 불가능합니다(순방향 비밀성).
