"hash": |-
  a5f1f31069dcc8abb6702d7c96062038e9b2b98164b0337d23209952eb32c807
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     codes, though such understanding is obviously desirable. However,
     applications must understand the class of any status code, as
     indicated by the first digit, and treat any unrecognized response as
     being equivalent to the x00 status code of that class, with the
     exception that an unrecognized response must not be cached. For
     example, if an unrecognized status code of 431 is received by the
     client, it can safely assume that there was something wrong with its
     request and treat the response as if it had received a 400 status
     code. In such cases, user agents should present to the user the
     entity returned with the response, since that entity is likely to
     include human-readable information which will explain the unusual
     status.
"fixed": |-
  codes, though such understanding is obviously desirable. However, applications must understand the class of any status code, as indicated by the first digit, and treat any unrecognized response as being equivalent to the x00 status code of that class, with the exception that an unrecognized response must not be cached. For example, if an unrecognized status code of 431 is received by the client, it can safely assume that there was something wrong with its request and treat the response as if it had received a 400 status code. In such cases, user agents should present to the user the entity returned with the response, since that entity is likely to include human-readable information which will explain the unusual status.
"ko": |-
  코드를 이해하는 것이 분명히 바람직하지만. 그러나 애플리케이션은 첫 번째 숫자로 표시된 모든 상태 코드의 클래스를 이해해야 하며, 인식할 수 없는 응답을 캐시해서는 안 된다는 점을 제외하고는 인식할 수 없는 모든 응답을 해당 클래스의 x00 상태 코드와 동일한 것으로 처리해야 합니다. 예를 들어, 클라이언트가 인식할 수 없는 상태 코드 431을 수신하면 요청에 문제가 있다고 안전하게 가정하고 응답을 400 상태 코드를 수신한 것처럼 처리할 수 있습니다. 그러한 경우, 사용자 에이전트는 응답과 함께 반환된 엔터티를 사용자에게 제시해야 합니다. 그 엔터티에는 비정상적인 상태를 설명하는 사람이 읽을 수 있는 정보가 포함될 가능성이 높기 때문입니다.
