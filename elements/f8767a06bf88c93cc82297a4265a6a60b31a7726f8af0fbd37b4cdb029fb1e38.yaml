"hash": |-
  f8767a06bf88c93cc82297a4265a6a60b31a7726f8af0fbd37b4cdb029fb1e38
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The AUTH command takes a single parameter to define the security
     mechanism to be negotiated.  As the SSL/TLS protocols self-negotiate
     their levels, there is no need to distinguish between SSL and TLS in
     the application layer.  The mechanism name for negotiating TLS is the
     character string identified in {TLS-PARM}.  This allows the client
     and server to negotiate TLS on the control connection without
     altering the protection of the data channel.  To protect the data
     channel as well, the PBSZ command, followed by the PROT command
     sequence, MUST be used.
"fixed": |-
  The AUTH command takes a single parameter to define the security mechanism to be negotiated.  As the SSL/TLS protocols self-negotiate their levels, there is no need to distinguish between SSL and TLS in the application layer.  The mechanism name for negotiating TLS is the character string identified in {TLS-PARM}.  This allows the client and server to negotiate TLS on the control connection without altering the protection of the data channel.  To protect the data channel as well, the PBSZ command, followed by the PROT command sequence, MUST be used.
"ko": |-
  AUTH 명령은 단일 매개변수를 사용하여 협상할 보안 메커니즘을 정의합니다. SSL/TLS 프로토콜은 수준을 자체적으로 협상하므로 애플리케이션 계층에서 SSL과 TLS를 구별할 필요가 없습니다. TLS 협상을 위한 메커니즘 이름은 {TLS-PARM}에서 식별되는 문자열입니다. 이를 통해 클라이언트와 서버는 데이터 채널의 보호를 변경하지 않고 제어 연결에서 TLS를 협상할 수 있습니다. 데이터 채널도 보호하려면 PBSZ 명령과 PROT 명령 시퀀스를 사용해야 합니다.
