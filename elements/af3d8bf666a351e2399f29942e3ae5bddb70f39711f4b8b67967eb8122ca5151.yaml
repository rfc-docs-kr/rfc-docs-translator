"hash": |-
  af3d8bf666a351e2399f29942e3ae5bddb70f39711f4b8b67967eb8122ca5151
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     To deal with token capture and replay, the following recommendations
     are made: First, the lifetime of the token MUST be limited; one means
     of achieving this is by putting a validity time field inside the
     protected part of the token.  Note that using short-lived (one hour
     or less) tokens reduces the impact of them being leaked.  Second,
     confidentiality protection of the exchanges between the client and
     the authorization server and between the client and the resource
     server MUST be applied.  As a consequence, no eavesdropper along the
     communication path is able to observe the token exchange.
     Consequently, such an on-path adversary cannot replay the token.
     Furthermore, when presenting the token to a resource server, the
     client MUST verify the identity of that resource server, as per
     Section 3.1 of "HTTP Over TLS" [RFC2818].  Note that the client MUST
     validate the TLS certificate chain when making these requests to
     protected resources.  Presenting the token to an unauthenticated and
     unauthorized resource server or failing to validate the certificate
     chain will allow adversaries to steal the token and gain unauthorized
     access to protected resources.
"fixed": |-
  To deal with token capture and replay, the following recommendations are made: First, the lifetime of the token MUST be limited; one means of achieving this is by putting a validity time field inside the protected part of the token.  Note that using short-lived (one hour or less) tokens reduces the impact of them being leaked.  Second, confidentiality protection of the exchanges between the client and the authorization server and between the client and the resource server MUST be applied.  As a consequence, no eavesdropper along the communication path is able to observe the token exchange. Consequently, such an on-path adversary cannot replay the token. Furthermore, when presenting the token to a resource server, the client MUST verify the identity of that resource server, as per Section 3.1 of "HTTP Over TLS" [RFC2818].  Note that the client MUST validate the TLS certificate chain when making these requests to protected resources.  Presenting the token to an unauthenticated and unauthorized resource server or failing to validate the certificate chain will allow adversaries to steal the token and gain unauthorized access to protected resources.
"ko": |-
  토큰 캡처 및 재생을 처리하기 위해 다음 권장 사항이 제시됩니다. 첫째, 토큰의 수명이 제한되어야 합니다. 이를 달성하는 한 가지 방법은 토큰의 보호된 부분 안에 유효 시간 필드를 넣는 것입니다.  단기간(1시간 이하) 토큰을 사용하면 토큰 유출로 인한 영향이 줄어듭니다.  둘째, 클라이언트와 인증 서버 간, 클라이언트와 리소스 서버 간 교환에 대한 기밀 보호가 적용되어야 합니다.  결과적으로 통신 경로를 따라 도청하는 사람은 토큰 교환을 관찰할 수 없습니다. 결과적으로, 그러한 경로상의 상대는 토큰을 재생할 수 없습니다. 또한 리소스 서버에 토큰을 제공할 때 클라이언트는 "HTTP Over TLS"[RFC2818]의 섹션 3.1에 따라 해당 리소스 서버의 ID를 확인해야 합니다.  클라이언트는 보호된 리소스에 대해 이러한 요청을 할 때 TLS 인증서 체인의 유효성을 검사해야 합니다.  인증되지 않은 권한 없는 리소스 서버에 토큰을 제시하거나 인증서 체인의 유효성을 검사하지 못하면 공격자가 토큰을 훔치고 보호된 리소스에 무단으로 액세스할 수 있습니다.
