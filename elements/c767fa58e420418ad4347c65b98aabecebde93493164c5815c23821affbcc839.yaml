"hash": |-
  c767fa58e420418ad4347c65b98aabecebde93493164c5815c23821affbcc839
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     This example illustrates the process of creating a JWE with
     RSAES-PKCS1-v1_5 for key encryption and AES_CBC_HMAC_SHA2 for content
     encryption.  These results can be used to validate JWE decryption
     implementations for these algorithms.  Note that since the
     RSAES-PKCS1-v1_5 computation includes random values, the encryption
     results above will not be completely reproducible.  However, since
     the AES-CBC computation is deterministic, the JWE Encrypted
     Ciphertext values will be the same for all encryptions performed
     using these inputs.
"fixed": |-
  This example illustrates the process of creating a JWE with RSAES-PKCS1-v1_5 for key encryption and AES_CBC_HMAC_SHA2 for content encryption.  These results can be used to validate JWE decryption implementations for these algorithms.  Note that since the RSAES-PKCS1-v1_5 computation includes random values, the encryption results above will not be completely reproducible.  However, since the AES-CBC computation is deterministic, the JWE Encrypted Ciphertext values will be the same for all encryptions performed using these inputs.
"ko": |-
  이 예제는 키 암호화를 위해 RSAES-PKCS1-v1_5를 사용하고 콘텐츠 암호화를 위해 AES_CBC_HMAC_SHA2를 사용하여 JWE를 만드는 과정을 보여줍니다. 이러한 결과는 이러한 알고리즘에 대한 JWE 복호화 구현을 검증하는 데 사용할 수 있습니다. RSAES-PKCS1-v1_5 계산에는 난수 값이 포함되므로 위의 암호화 결과는 완전히 재현할 수 없습니다. 그러나 AES-CBC 계산은 결정적이므로 JWE 암호화된 암호문 값은 이러한 입력을 사용하여 수행된 모든 암호화에 대해 동일합니다.
