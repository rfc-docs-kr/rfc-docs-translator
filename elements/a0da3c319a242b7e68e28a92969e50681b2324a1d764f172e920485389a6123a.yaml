"hash": |-
  a0da3c319a242b7e68e28a92969e50681b2324a1d764f172e920485389a6123a
"type": |-
  Content
"comment": !!null |-
  null
"original": |-
  applied by causing the sending TCP to behave as  if  the  distant
  host's  window  size  has been reduced.  Our first implementation
  was simplistic but effective;  once  a  Source  Quench  has  been
  received  our  TCP behaves as if the window size is zero whenever
  the window isn't  empty.   This  behavior  continues  until  some
  number  (at  present 10) of ACKs have been received, at that time
  TCP returns to normal operation.* David Mills  of  Linkabit  Cor-
  poration  has  since  implemented  a  similar  but more elaborate
  throttle on the count of outstanding packets in his DCN  systems.
  The  additional  sophistication seems to produce a modest gain in
  throughput, but we have not made formal tests.  Both  implementa-
  tions effectively prevent congestion collapse in switching nodes.
"fixed": |-
  applied by causing the sending TCP to behave as  if  the  distant host's  window  size  has been reduced.  Our first implementation was simplistic but effective;  once  a  Source  Quench  has  been received  our  TCP behaves as if the window size is zero whenever the window isn't  empty.   This  behavior  continues  until  some number  (at  present 10) of ACKs have been received, at that time TCP returns to normal operation.* David Mills  of  Linkabit  Cor- poration  has  since  implemented  a  similar  but more elaborate throttle on the count of outstanding packets in his DCN  systems. The  additional  sophistication seems to produce a modest gain in throughput, but we have not made formal tests.  Both  implementa- tions effectively prevent congestion collapse in switching nodes.
"ko": |-
  송신 TCP가 마치 먼 호스트의 창 크기가 줄어든 것처럼 동작하도록 하여 적용됩니다. 우리의 첫 번째 구현은 단순했지만 효과적이었습니다. Source Quench가 수신되면 TCP는 창이 비어 있지 않을 때마다 창 크기가 0인 것처럼 동작합니다. 이 동작은 일정 수(현재 10개)의 ACK가 수신될 때까지 계속되며, 이때 TCP는 정상 작동으로 돌아갑니다.* 이후 Linkabit Corporation의 David Mills는 미해결 패킷 수에 대해 유사하지만 더 정교한 제한을 구현했습니다. 그의 DCN 시스템. 추가적인 정교함으로 인해 처리량이 어느 정도 증가하는 것으로 보이지만 공식적인 테스트는 수행하지 않았습니다. 두 가지 구현 모두 스위칭 노드의 혼잡 붕괴를 효과적으로 방지합니다.
