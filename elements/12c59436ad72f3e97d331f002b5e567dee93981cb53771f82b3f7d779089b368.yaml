"hash": |-
  12c59436ad72f3e97d331f002b5e567dee93981cb53771f82b3f7d779089b368
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Where a CA distributes self-signed certificates to specify trust
     anchor information, certificate extensions can be used to specify
     recommended inputs to path validation.  For example, a policy
     constraints extension could be included in the self-signed
     certificate to indicate that paths beginning with this trust anchor
     should be trusted only for the specified policies.  Similarly, a name
     constraints extension could be included to indicate that paths
     beginning with this trust anchor should be trusted only for the
     specified name spaces.  The path validation algorithm presented in
     Section 6.1 does not assume that trust anchor information is provided
     in self-signed certificates and does not specify processing rules for
     additional information included in such certificates.
     Implementations that use self-signed certificates to specify trust
     anchor information are free to process or ignore such information.
"fixed": |-
  Where a CA distributes self-signed certificates to specify trust anchor information, certificate extensions can be used to specify recommended inputs to path validation.  For example, a policy constraints extension could be included in the self-signed certificate to indicate that paths beginning with this trust anchor should be trusted only for the specified policies.  Similarly, a name constraints extension could be included to indicate that paths beginning with this trust anchor should be trusted only for the specified name spaces.  The path validation algorithm presented in Section 6.1 does not assume that trust anchor information is provided in self-signed certificates and does not specify processing rules for additional information included in such certificates. Implementations that use self-signed certificates to specify trust anchor information are free to process or ignore such information.
"ko": |-
  CA가 트러스트 앵커 정보를 지정하기 위해 자체 서명된 인증서를 배포하는 경우 인증서 확장을 사용하여 경로 유효성 검사에 권장되는 입력을 지정할 수 있습니다. 예를 들어, 정책 제약 확장은 자체 서명된 인증서에 포함되어 이 트러스트 앵커로 시작하는 경로가 지정된 정책에 대해서만 신뢰되어야 함을 나타낼 수 있습니다. 마찬가지로, 이 트러스트 앵커로 시작하는 경로는 지정된 네임스페이스에 대해서만 신뢰되어야 함을 나타내기 위해 이름 제약 확장이 포함될 수 있습니다. 섹션 6.1에 제시된 경로 유효성 검사 알고리즘은 트러스트 앵커 정보가 자체 서명된 인증서에 제공된다고 가정하지 않으며 해당 인증서에 포함된 추가 정보에 대한 처리 규칙을 지정하지 않습니다. 트러스트 앵커 정보를 지정하기 위해 자체 서명된 인증서를 사용하는 구현에서는 그러한 정보를 자유롭게 처리하거나 무시할 수 있습니다.
