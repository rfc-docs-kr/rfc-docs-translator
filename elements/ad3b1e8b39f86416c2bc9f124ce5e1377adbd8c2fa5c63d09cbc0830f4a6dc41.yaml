"hash": |-
  ad3b1e8b39f86416c2bc9f124ce5e1377adbd8c2fa5c63d09cbc0830f4a6dc41
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     This next section of this ongoing example demonstrates how kill-on-
     barge-in support works.  Since this last SPEAK request had Kill-On-
     Barge-In set to "true", when the recognizer (the server) generated
     the START-OF-INPUT event while a SPEAK was active, the client
     immediately issued a BARGE-IN-OCCURRED method to the synthesizer
     resource.  The speech synthesizer then terminated playback and
     notified the client.  The completion-cause code provided the
     indication that this was a kill-on-barge-in interruption rather than
     a normal completion.
"fixed": |-
  This next section of this ongoing example demonstrates how kill-on- barge-in support works.  Since this last SPEAK request had Kill-On- Barge-In set to "true", when the recognizer (the server) generated the START-OF-INPUT event while a SPEAK was active, the client immediately issued a BARGE-IN-OCCURRED method to the synthesizer resource.  The speech synthesizer then terminated playback and notified the client.  The completion-cause code provided the indication that this was a kill-on-barge-in interruption rather than a normal completion.
"ko": |-
  이 진행 중인 예제의 다음 섹션에서는 kill-on-barge-in 지원이 작동하는 방식을 보여줍니다. 이 마지막 SPEAK 요청에서 Kill-On-Barge-In이 "true"로 설정되어 있기 때문에 인식기(서버)가 SPEAK가 활성화된 동안 START-OF-INPUT 이벤트를 생성했을 때 클라이언트는 즉시 BARGE-IN-OCCURRED 메서드를 합성기 리소스에 발행했습니다. 그런 다음 음성 합성기는 재생을 종료하고 클라이언트에 알렸습니다. 완료 원인 코드는 이것이 정상적인 완료가 아니라 kill-on-barge-in 중단이라는 표시를 제공했습니다.
