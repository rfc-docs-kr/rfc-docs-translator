"hash": |-
  474a501ff35392f20021a159031bb59a4cf8290d08675c15bf231ef092b0cdd1
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     This multiplexing of requests and demultiplexing of responses is done
     by using the CSeq header field.  The proxy has to rewrite the CSeq in
     requests to the server and responses from the server and remember
     which CSeq is mapped to which client.  The proxy also needs to ensure
     that the order of the message related to each client is maintained.
     Section 18.20 defines the handling of how requests and responses are
     rewritten.
"fixed": |-
  This multiplexing of requests and demultiplexing of responses is done by using the CSeq header field.  The proxy has to rewrite the CSeq in requests to the server and responses from the server and remember which CSeq is mapped to which client.  The proxy also needs to ensure that the order of the message related to each client is maintained. Section 18.20 defines the handling of how requests and responses are rewritten.
"ko": |-
  이러한 요청 다중화 및 응답 다중화는 CSeq 헤더 필드를 사용하여 수행됩니다. 프록시는 서버에 대한 요청과 서버의 응답에서 CSeq를 다시 작성하고 어떤 CSeq가 어떤 클라이언트에 매핑되는지 기억해야 합니다. 또한 프록시는 각 클라이언트와 관련된 메시지의 순서가 유지되는지 확인해야 합니다. 섹션 18.20에서는 요청과 응답을 다시 작성하는 방법을 정의합니다.
