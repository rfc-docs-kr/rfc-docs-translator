"hash": |-
  8e6a3399246eda4c6188f0aed61031c9b8ec71b37e34b78a83e0326a422a9845
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     As described in Section 3.11, PPSPP uses a multiplexing scheme,
     called channels, to allow multiple swarms to use the same UDP port.
     In the UDP encapsulation, each datagram from Peer A to Peer B is
     prefixed with the channel ID allocated by Peer B.  The peers learn
     about each other's channel ID during the handshake as explained in
     Section 3.1.1.  A channel ID consists of 4 bytes and MUST be
     generated following the requirements in [RFC4960] (Section 5.1.3).
"fixed": |-
  As described in Section 3.11, PPSPP uses a multiplexing scheme, called channels, to allow multiple swarms to use the same UDP port. In the UDP encapsulation, each datagram from Peer A to Peer B is prefixed with the channel ID allocated by Peer B.  The peers learn about each other's channel ID during the handshake as explained in Section 3.1.1.  A channel ID consists of 4 bytes and MUST be generated following the requirements in [RFC4960] (Section 5.1.3).
"ko": |-
  섹션 3.11에 설명된 대로 PPSPP는 채널이라는 다중화 방식을 사용하여 여러 떼가 동일한 UDP 포트를 사용할 수 있도록 합니다. UDP 캡슐화에서 피어 A에서 피어 B로의 각 데이터그램에는 피어 B가 할당한 채널 ID가 앞에 붙습니다. 피어는 섹션 3.1.1에 설명된 대로 핸드셰이크 중에 서로의 채널 ID에 대해 알아봅니다. 채널 ID는 4바이트로 구성되며 [RFC4960](섹션 5.1.3)의 요구 사항에 따라 생성되어야 합니다.
