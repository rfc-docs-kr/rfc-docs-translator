"hash": |-
  bb20d43f6aafb52b0c0b379e8f9e7f62f0644972c3473d13897052844a6ce8a4
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     A problem can also appear when a name server does not react properly
     to ENTs (Empty Non-Terminals).  If ent.example.com has no resource
     records but foobar.ent.example.com does, then ent.example.com is an
     ENT.  Whatever the QTYPE, a query for ent.example.com must return
     NODATA (NOERROR / ANSWER: 0).  However, some name servers incorrectly
     return NXDOMAIN for ENTs.  If a resolver queries only
     foobar.ent.example.com, everything will be OK, but if it implements
     QNAME minimisation, it may query ent.example.com and get an NXDOMAIN.
     See also Section 3 of [DNS-Res-Improve] for the other bad
     consequences of this bad behaviour.
"fixed": |-
  A problem can also appear when a name server does not react properly to ENTs (Empty Non-Terminals).  If ent.example.com has no resource records but foobar.ent.example.com does, then ent.example.com is an ENT.  Whatever the QTYPE, a query for ent.example.com must return NODATA (NOERROR / ANSWER: 0).  However, some name servers incorrectly return NXDOMAIN for ENTs.  If a resolver queries only foobar.ent.example.com, everything will be OK, but if it implements QNAME minimisation, it may query ent.example.com and get an NXDOMAIN. See also Section 3 of [DNS-Res-Improve] for the other bad consequences of this bad behaviour.
"ko": |-
  네임 서버가 ENT(Empty Non-Terminals)에 제대로 반응하지 않는 경우에도 문제가 나타날 수 있습니다. ent.example.com에는 리소스 레코드가 없지만 foobar.ent.example.com에는 있는 경우 ent.example.com은 ENT입니다. QTYPE이 무엇이든 ent.example.com에 대한 쿼리는 NODATA(NOERROR / ANSWER: 0)를 반환해야 합니다. 그러나 일부 이름 서버는 ENT에 대해 NXDOMAIN을 잘못 반환합니다. 확인자가 foobar.ent.example.com만 쿼리하면 모든 것이 정상이지만 QNAME 최소화를 구현하면 ent.example.com을 쿼리하고 NXDOMAIN을 얻을 수 있습니다. 이 나쁜 행동의 다른 나쁜 결과에 대해서는 [DNS-Res-Improve]의 섹션 3을 참조하세요.
