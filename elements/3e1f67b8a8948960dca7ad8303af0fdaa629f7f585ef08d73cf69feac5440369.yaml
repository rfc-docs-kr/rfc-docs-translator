"hash": |-
  3e1f67b8a8948960dca7ad8303af0fdaa629f7f585ef08d73cf69feac5440369
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Upon receipt of a HelloRetryRequest, the client MUST check the
     legacy_version, legacy_session_id_echo, cipher_suite, and
     legacy_compression_method as specified in Section 4.1.3 and then
     process the extensions, starting with determining the version using
     "supported_versions".  Clients MUST abort the handshake with an
     "illegal_parameter" alert if the HelloRetryRequest would not result
     in any change in the ClientHello.  If a client receives a second
     HelloRetryRequest in the same connection (i.e., where the ClientHello
     was itself in response to a HelloRetryRequest), it MUST abort the
     handshake with an "unexpected_message" alert.
"fixed": |-
  Upon receipt of a HelloRetryRequest, the client MUST check the legacy_version, legacy_session_id_echo, cipher_suite, and legacy_compression_method as specified in Section 4.1.3 and then process the extensions, starting with determining the version using "supported_versions".  Clients MUST abort the handshake with an "illegal_parameter" alert if the HelloRetryRequest would not result in any change in the ClientHello.  If a client receives a second HelloRetryRequest in the same connection (i.e., where the ClientHello was itself in response to a HelloRetryRequest), it MUST abort the handshake with an "unexpected_message" alert.
"ko": |-
  HelloRetryRequest를 수신한 클라이언트는 반드시 섹션 4.1.3에 지정된 대로 레거시_버전, 레거시_세션_id_echo, cipher_suite 및 레거시_compression_method를 확인한 다음 "supported_versions"를 사용하여 버전 결정부터 시작하여 확장을 처리해야 합니다. HelloRetryRequest로 인해 ClientHello가 변경되지 않으면 클라이언트는 "illegal_parameter" 경고로 핸드셰이크를 중단해야 합니다. 클라이언트가 동일한 연결에서 두 번째 HelloRetryRequest를 수신하는 경우(즉, ClientHello 자체가 HelloRetryRequest에 대한 응답인 경우) "unexpected_message" 경고와 함께 핸드셰이크를 중단해야 합니다.
