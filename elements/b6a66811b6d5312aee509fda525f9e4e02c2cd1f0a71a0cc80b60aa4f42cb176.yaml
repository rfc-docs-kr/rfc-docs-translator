"hash": |-
  b6a66811b6d5312aee509fda525f9e4e02c2cd1f0a71a0cc80b60aa4f42cb176
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Note:  CoAP places the onus of congestion control mostly on the
        clients.  However, clients may malfunction or actually be
        attackers, e.g., to perform amplification attacks (Section 11.3).
        To limit the damage (to the network and to its own energy
        resources), a server SHOULD implement some rate limiting for its
        response transmission based on reasonable assumptions about
        application requirements.  This is most helpful if the rate limit
        can be made effective for the misbehaving endpoints, only.
"fixed": |-
  Note:  CoAP places the onus of congestion control mostly on the clients.  However, clients may malfunction or actually be attackers, e.g., to perform amplification attacks (Section 11.3). To limit the damage (to the network and to its own energy resources), a server SHOULD implement some rate limiting for its response transmission based on reasonable assumptions about application requirements.  This is most helpful if the rate limit can be made effective for the misbehaving endpoints, only.
"ko": |-
  참고: CoAP는 혼잡 제어의 책임을 주로 클라이언트에 둡니다. 그러나 클라이언트는 예를 들어 증폭 공격을 수행하기 위해 오작동하거나 실제로 공격자가 될 수 있습니다(11.3절). 네트워크 및 자체 에너지 자원에 대한 피해를 제한하려면 서버는 애플리케이션 요구 사항에 대한 합리적인 가정을 기반으로 응답 전송에 대한 일부 속도 제한을 구현해야 합니다. 이는 오작동하는 엔드포인트에만 비율 제한을 적용할 수 있는 경우 가장 유용합니다.
