"hash": |-
  bd18744096ebe642d69af810b39ca62a8ba00f13b87ef54778252dfa4a1bcde1
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     In this method, the chunks of content are used as the basis for a
     Merkle hash tree as for static content.  However, because chunks are
     continuously generated, this tree is not static, but dynamic.  As a
     result, the tree does not have a root hash, or, more precisely, it
     has a transient root hash.  Therefore, a public key serves as swarm
"fixed": |-
  In this method, the chunks of content are used as the basis for a Merkle hash tree as for static content.  However, because chunks are continuously generated, this tree is not static, but dynamic.  As a result, the tree does not have a root hash, or, more precisely, it has a transient root hash.  Therefore, a public key serves as swarm
"ko": |-
  이 방법에서는 콘텐츠 덩어리가 정적 콘텐츠와 마찬가지로 Merkle 해시 트리의 기초로 사용됩니다. 그러나 청크가 지속적으로 생성되기 때문에 이 트리는 정적이지 않고 동적입니다. 결과적으로 트리에는 루트 해시가 없습니다. 더 정확하게는 임시 루트 해시가 있습니다. 따라서 공개 키는 떼 역할을 합니다.
