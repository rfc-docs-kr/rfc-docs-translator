"hash": |-
  0b786bcfeb0702adb3de475508311cb8b0d03e468b7d7e948f10a8f66b000566
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Additional client metadata parameters are introduced by this document
     in support of certificate-bound access tokens and mutual-TLS client
     authentication.  The authorization server can obtain client metadata
     via the Dynamic Client Registration Protocol [RFC7591], which defines
     mechanisms for dynamically registering OAuth 2.0 client metadata with
     authorization servers.  Also the metadata defined by [RFC7591], and
     registered extensions to it, imply a general data model for clients
     that is useful for authorization server implementations, even when
     the Dynamic Client Registration Protocol isn't in play.  Such
     implementations will typically have some sort of user interface
     available for managing client configuration.
"fixed": |-
  Additional client metadata parameters are introduced by this document in support of certificate-bound access tokens and mutual-TLS client authentication.  The authorization server can obtain client metadata via the Dynamic Client Registration Protocol [RFC7591], which defines mechanisms for dynamically registering OAuth 2.0 client metadata with authorization servers.  Also the metadata defined by [RFC7591], and registered extensions to it, imply a general data model for clients that is useful for authorization server implementations, even when the Dynamic Client Registration Protocol isn't in play.  Such implementations will typically have some sort of user interface available for managing client configuration.
"ko": |-
  이 문서에서는 인증서 바인딩 액세스 토큰 및 상호 TLS 클라이언트 인증을 지원하기 위해 추가 클라이언트 메타데이터 매개변수를 소개합니다. 인증 서버는 OAuth 2.0 클라이언트 메타데이터를 인증 서버에 동적으로 등록하기 위한 메커니즘을 정의하는 동적 클라이언트 등록 프로토콜 [RFC7591]을 통해 클라이언트 메타데이터를 얻을 수 있습니다. 또한 [RFC7591]에 의해 정의된 메타데이터와 이에 등록된 확장은 동적 클라이언트 등록 프로토콜이 작동하지 않는 경우에도 인증 서버 구현에 유용한 클라이언트용 일반 데이터 모델을 의미합니다. 이러한 구현에는 일반적으로 클라이언트 구성을 관리하는 데 사용할 수 있는 일종의 사용자 인터페이스가 있습니다.
