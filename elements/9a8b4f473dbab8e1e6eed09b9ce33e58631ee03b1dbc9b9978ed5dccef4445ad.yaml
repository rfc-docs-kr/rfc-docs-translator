"hash": |-
  9a8b4f473dbab8e1e6eed09b9ce33e58631ee03b1dbc9b9978ed5dccef4445ad
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     If this extension is present in the ClientHello, servers MUST NOT use
     the ClientHello.legacy_version value for version negotiation and MUST
     use only the "supported_versions" extension to determine client
     preferences.  Servers MUST only select a version of TLS present in
     that extension and MUST ignore any unknown versions that are present
     in that extension.  Note that this mechanism makes it possible to
     negotiate a version prior to TLS 1.2 if one side supports a sparse
     range.  Implementations of TLS 1.3 which choose to support prior
     versions of TLS SHOULD support TLS 1.2.  Servers MUST be prepared to
     receive ClientHellos that include this extension but do not include
     0x0304 in the list of versions.
"fixed": |-
  If this extension is present in the ClientHello, servers MUST NOT use the ClientHello.legacy_version value for version negotiation and MUST use only the "supported_versions" extension to determine client preferences.  Servers MUST only select a version of TLS present in that extension and MUST ignore any unknown versions that are present in that extension.  Note that this mechanism makes it possible to negotiate a version prior to TLS 1.2 if one side supports a sparse range.  Implementations of TLS 1.3 which choose to support prior versions of TLS SHOULD support TLS 1.2.  Servers MUST be prepared to receive ClientHellos that include this extension but do not include 0x0304 in the list of versions.
"ko": |-
  이 확장이 ClientHello에 있는 경우 서버는 버전 협상을 위해 ClientHello.legacy_version 값을 사용해서는 안 되며 클라이언트 기본 설정을 결정하기 위해 "supported_versions" 확장만 사용해야 합니다. 서버는 해당 확장에 있는 TLS 버전만 선택해야 하며 해당 확장에 있는 알 수 없는 버전은 무시해야 합니다. 이 메커니즘을 사용하면 한쪽이 희소 범위를 지원하는 경우 TLS 1.2 이전 버전을 협상할 수 있습니다. 이전 버전의 TLS를 지원하기로 선택한 TLS 1.3의 구현은 TLS 1.2를 지원해야 합니다(SHOULD). 서버는 이 확장을 포함하지만 버전 목록에 0x0304를 포함하지 않는 ClientHellos를 수신할 준비를 해야 합니다.
