"hash": |-
  d89060cc3dfea9b309da05cd8915d82f5c7631cef174eb4aa69c5d7c82f6d67b
"type": |-
  Content
"comment": !!null |-
  null
"original": |-
  This technique has been used in NCP Telnet, X.25  PADs,  and  TCP
  Telnet. It has the advantage of being well-understood, and is not
  too difficult to implement.  Its flaw is that it is hard to  come
  up  with  a  time limit that will satisfy everyone.  A time limit
  short enough to provide highly responsive service over a 10M bits
  per  second Ethernet will be too short to prevent congestion col-
  lapse over a heavily loaded net with  a  five  second  round-trip
  time;  and  conversely,  a  time  limit long enough to handle the
  heavily loaded net will produce frustrated users on the Ethernet.
"fixed": |-
  This technique has been used in NCP Telnet, X.25  PADs,  and  TCP Telnet. It has the advantage of being well-understood, and is not too difficult to implement.  Its flaw is that it is hard to  come up  with  a  time limit that will satisfy everyone.  A time limit short enough to provide highly responsive service over a 10M bits per  second Ethernet will be too short to prevent congestion col- lapse over a heavily loaded net with  a  five  second  round-trip time;  and  conversely,  a  time  limit long enough to handle the heavily loaded net will produce frustrated users on the Ethernet.
"ko": |-
  이 기술은 NCP Telnet, X.25 PAD 및 TCP Telnet에서 사용되었습니다. 이해하기 쉽고, 구현하기가 그리 어렵지 않다는 장점이 있습니다. 그 결점은 모든 사람을 만족시킬 수 있는 시간 제한을 마련하기 어렵다는 것입니다. 초당 10M 비트 이더넷을 통해 응답성이 뛰어난 서비스를 제공할 수 있을 만큼 짧은 시간 제한은 왕복 시간이 5초인 무거운 부하의 네트에 대한 혼잡 붕괴를 방지하기에는 너무 짧습니다. 반대로, 과부하가 걸린 네트워크를 처리할 만큼 긴 시간 제한은 이더넷에서 사용자를 좌절하게 만들 것입니다.
