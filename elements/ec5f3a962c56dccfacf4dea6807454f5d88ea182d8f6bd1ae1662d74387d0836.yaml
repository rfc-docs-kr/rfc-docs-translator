"hash": |-
  ec5f3a962c56dccfacf4dea6807454f5d88ea182d8f6bd1ae1662d74387d0836
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     *  Although Certificate Revocation Lists (CRLs) are the most widely
        supported mechanism for distributing revocation information, they
        have known scaling challenges that limit their usefulness, despite
        workarounds such as partitioned CRLs and delta CRLs.  The more
        modern [CRLite] and the follow-on Let's Revoke [LetsRevoke] build
        on the availability of Certificate Transparency [RFC9162] logs and
        aggressive compression to allow practical use of the CRL
        infrastructure, but at the time of writing, neither solution is
        deployed for client-side revocation processing at scale.
"fixed": |-
  *  Although Certificate Revocation Lists (CRLs) are the most widely supported mechanism for distributing revocation information, they have known scaling challenges that limit their usefulness, despite workarounds such as partitioned CRLs and delta CRLs.  The more modern [CRLite] and the follow-on Let's Revoke [LetsRevoke] build on the availability of Certificate Transparency [RFC9162] logs and aggressive compression to allow practical use of the CRL infrastructure, but at the time of writing, neither solution is deployed for client-side revocation processing at scale.
"ko": |-
  * CRL(인증서 해지 목록)은 해지 정보 배포를 위해 가장 널리 지원되는 메커니즘이지만 분할된 CRL 및 델타 CRL과 같은 해결 방법에도 불구하고 유용성을 제한하는 확장 문제가 있는 것으로 알려져 있습니다. 보다 현대적인 [CRLite] 및 후속 Let's Revoke [LetsRevoke]는 인증서 투명성 [RFC9162] 로그의 가용성과 공격적인 압축을 기반으로 구축되어 CRL 인프라의 실제 사용을 허용하지만 작성 당시에는 두 솔루션 모두 배포되지 않았습니다. 대규모 클라이언트 측 해지 처리를 위한 것입니다.
