"hash": |-
  10efde2075ad9e7fd5d4c59e417e2d9f984b5c9d16cf9f4518667637328fad07
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     DTLS optionally supports record replay detection.  The technique used
     is the same as in IPsec AH/ESP, by maintaining a bitmap window of
     received records.  Records that are too old to fit in the window and
     records that have previously been received are silently discarded.
     The replay detection feature is optional, since packet duplication is
     not always malicious, but can also occur due to routing errors.
     Applications may conceivably detect duplicate packets and accordingly
     modify their data transmission strategy.
"fixed": |-
  DTLS optionally supports record replay detection.  The technique used is the same as in IPsec AH/ESP, by maintaining a bitmap window of received records.  Records that are too old to fit in the window and records that have previously been received are silently discarded. The replay detection feature is optional, since packet duplication is not always malicious, but can also occur due to routing errors. Applications may conceivably detect duplicate packets and accordingly modify their data transmission strategy.
"ko": |-
  DTLS는 선택적으로 레코드 재생 감지를 지원합니다. 사용된 기술은 수신된 레코드의 비트맵 창을 유지함으로써 IPsec AH/ESP와 동일합니다. 너무 오래되어 창에 맞지 ​​않는 레코드와 이전에 수신된 레코드는 자동으로 삭제됩니다. 패킷 복제가 항상 악의적인 것은 아니지만 라우팅 오류로 인해 발생할 수도 있으므로 재생 감지 기능은 선택 사항입니다. 응용 프로그램은 아마도 중복 패킷을 감지하고 이에 따라 데이터 전송 전략을 수정할 수 있습니다.
