"hash": |-
  f83ebcecc4bc6ab32e8e127e0758bff18a4574eab7e2563c5f8ab5cd1e4a64e3
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     For example, there is an implementation of an MSP in each Interface
     Message Processor.  We believe that the effective utilization of
     communications networks by computer operating systems will require a
     better understanding of MSPs.  In particular, we feel that Network
     Control Programs (NCPs), as they have been implemented on the ARPA
     Computer Network (ARPANET), do not adequately emphasize the
     communications aspects of networking -- i.e., they reflect a certain
     reluctance on the part of systems people to move away from what we
     term "the stream orientation".  We propose, as an aside the network
     development using the current NCPs, to rethink the design of NCP-
     level software beginning with a consideration of MSPs.
"fixed": |-
  For example, there is an implementation of an MSP in each Interface Message Processor.  We believe that the effective utilization of communications networks by computer operating systems will require a better understanding of MSPs.  In particular, we feel that Network Control Programs (NCPs), as they have been implemented on the ARPA Computer Network (ARPANET), do not adequately emphasize the communications aspects of networking -- i.e., they reflect a certain reluctance on the part of systems people to move away from what we term "the stream orientation".  We propose, as an aside the network development using the current NCPs, to rethink the design of NCP- level software beginning with a consideration of MSPs.
"ko": |-
  예를 들어, 각 인터페이스 메시지 프로세서에는 MSP 구현이 있습니다. 우리는 컴퓨터 운영 체제에서 통신 네트워크를 효과적으로 활용하려면 MSP에 대한 더 나은 이해가 필요하다고 믿습니다. 특히 우리는 ARPANET(ARPA 컴퓨터 네트워크)에 구현된 NCP(네트워크 제어 프로그램)가 네트워킹의 통신 측면을 적절하게 강조하지 않는다고 생각합니다. 즉, 시스템 측의 특정 거부감을 반영합니다. 사람들은 우리가 "스트림 지향"이라고 부르는 것에서 벗어나려고 합니다. 우리는 현재 NCP를 이용한 네트워크 개발과 별도로 MSP를 고려한 NCP 수준 소프트웨어 설계를 다시 생각해 볼 것을 제안합니다.
