"hash": |-
  5806f50724c1723c6a012e49511991f071a0ce18fac86bd334b80b13ab4f87ba
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Implementations must randomly generate key-derivation keys as well as
     content-encryption keys or content-authenticated-encryption keys.
     Also, the generation of public/private key pairs for the key
     transport and key agreement algorithms rely on random numbers.  The
     use of inadequate pseudorandom number generators (PRNGs) to generate
     cryptographic keys can result in little or no security.  An attacker
     may find it much easier to reproduce the PRNG environment that
     produced the keys, searching the resulting small set of
     possibilities, rather than brute-force searching the whole key space.
     The generation of quality random numbers is difficult.  [RFC4086]
     offers important guidance in this area.
"fixed": |-
  Implementations must randomly generate key-derivation keys as well as content-encryption keys or content-authenticated-encryption keys. Also, the generation of public/private key pairs for the key transport and key agreement algorithms rely on random numbers.  The use of inadequate pseudorandom number generators (PRNGs) to generate cryptographic keys can result in little or no security.  An attacker may find it much easier to reproduce the PRNG environment that produced the keys, searching the resulting small set of possibilities, rather than brute-force searching the whole key space. The generation of quality random numbers is difficult.  [RFC4086] offers important guidance in this area.
"ko": |-
  구현에서는 키 파생 키와 콘텐츠 암호화 키 또는 콘텐츠 인증 암호화 키를 무작위로 생성해야 합니다. 또한 키 전송을 위한 공개/개인 키 쌍 생성 및 키 계약 알고리즘은 난수에 의존합니다.  암호화 키를 생성하기 위해 부적절한 PRNG(의사 난수 생성기)를 사용하면 보안이 거의 또는 전혀 이루어지지 않을 수 있습니다.  공격자는 전체 키 공간을 무차별 대입 검색하는 것보다 결과적으로 작은 가능성 집합을 검색하여 키를 생성한 PRNG 환경을 재현하는 것이 훨씬 쉽다는 것을 알 수 있습니다. 고품질 난수 생성은 어렵습니다.  [RFC4086]은 이 영역에 대한 중요한 지침을 제공합니다.
