"hash": |-
  8211daed9760d93bc19f4187640d23a99c741d336c96722fc68fabb8e15196f6
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     A TLS [TLS-1.3] negotiation begins immediately after the CRLF at the
     end of the tagged OK response from the server.  Once a client issues
     a STARTTLS command, it MUST NOT issue further commands until a server
     response is seen and the TLS negotiation is complete.  Some past
     server implementations incorrectly implemented STARTTLS processing
     and are known to contain STARTTLS plaintext command injection
     vulnerability [CERT-555316].  In order to avoid this vulnerability,
     server implementations MUST do one of the following if any data is
     received in the same TCP buffer after the CRLF that starts the
     STARTTLS command:
"fixed": |-
  A TLS [TLS-1.3] negotiation begins immediately after the CRLF at the end of the tagged OK response from the server.  Once a client issues a STARTTLS command, it MUST NOT issue further commands until a server response is seen and the TLS negotiation is complete.  Some past server implementations incorrectly implemented STARTTLS processing and are known to contain STARTTLS plaintext command injection vulnerability [CERT-555316].  In order to avoid this vulnerability, server implementations MUST do one of the following if any data is received in the same TCP buffer after the CRLF that starts the STARTTLS command:
"ko": |-
  TLS [TLS-1.3] 협상은 서버의 태그가 지정된 OK 응답이 끝나는 CRLF 직후에 시작됩니다.  클라이언트가 STARTTLS 명령을 실행하면 서버 응답이 표시되고 TLS 협상이 완료될 때까지 추가 명령을 실행해서는 안 됩니다.  일부 과거 서버 구현에서는 STARTTLS 처리를 잘못 구현했으며 STARTTLS 일반 텍스트 명령 삽입 취약점[CERT-555316]이 포함된 것으로 알려져 있습니다.  이 취약점을 방지하기 위해 서버 구현은 STARTTLS 명령을 시작하는 CRLF 이후 동일한 TCP 버퍼에서 데이터가 수신되는 경우 다음 중 하나를 수행해야 합니다.
