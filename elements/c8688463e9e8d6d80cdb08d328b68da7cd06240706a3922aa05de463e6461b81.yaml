"hash": |-
  c8688463e9e8d6d80cdb08d328b68da7cd06240706a3922aa05de463e6461b81
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Testing strings for equivalence requires some basic precautions.
     This procedure is often referred to as "bit-for-bit" or
     "byte-for-byte" comparison, which is potentially misleading.  Testing
     strings for equality is normally based on pair comparison of the
     characters that make up the strings, starting from the first and
     proceeding until both strings are exhausted and all characters are
     found to be equal, until a pair of characters compares unequal, or
     until one of the strings is exhausted before the other.
"fixed": |-
  Testing strings for equivalence requires some basic precautions. This procedure is often referred to as "bit-for-bit" or "byte-for-byte" comparison, which is potentially misleading.  Testing strings for equality is normally based on pair comparison of the characters that make up the strings, starting from the first and proceeding until both strings are exhausted and all characters are found to be equal, until a pair of characters compares unequal, or until one of the strings is exhausted before the other.
"ko": |-
  문자열의 동등성을 테스트하려면 몇 가지 기본적인 예방 조치가 필요합니다. 이 절차를 종종 "비트별" 또는 "바이트별" 비교라고 부르는데 이는 오해의 소지가 있습니다. 문자열이 같은지 테스트하는 것은 일반적으로 문자열을 구성하는 문자의 쌍 비교를 기반으로 합니다. 첫 번째 문자열부터 시작하여 두 문자열이 모두 소진되고 모든 문자가 동일한 것으로 확인될 때까지, 한 쌍의 문자가 같지 않을 때까지 또는 하나가 될 때까지 계속됩니다. 문자열 중 다른 문자열이 먼저 소진됩니다.
