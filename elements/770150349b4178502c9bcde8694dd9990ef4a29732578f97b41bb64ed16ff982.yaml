"hash": |-
  770150349b4178502c9bcde8694dd9990ef4a29732578f97b41bb64ed16ff982
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     In an overall architecture for a Constrained RESTful Environment,
     proxies can serve quite different purposes.  Proxies can be
     explicitly selected by clients, a role that we term "forward-proxy".
     Proxies can also be inserted to stand in for origin servers, a role
     that we term "reverse-proxy".  Orthogonal to this distinction, a
     proxy can map from a CoAP request to a CoAP request (CoAP-to-CoAP
     proxy) or translate from or to a different protocol ("cross-proxy").
     Full definitions of these terms are provided in Section 1.2.
"fixed": |-
  In an overall architecture for a Constrained RESTful Environment, proxies can serve quite different purposes.  Proxies can be explicitly selected by clients, a role that we term "forward-proxy". Proxies can also be inserted to stand in for origin servers, a role that we term "reverse-proxy".  Orthogonal to this distinction, a proxy can map from a CoAP request to a CoAP request (CoAP-to-CoAP proxy) or translate from or to a different protocol ("cross-proxy"). Full definitions of these terms are provided in Section 1.2.
"ko": |-
  제한된 RESTful 환경의 전체 아키텍처에서 프록시는 상당히 다른 용도로 사용될 수 있습니다. 프록시는 클라이언트가 명시적으로 선택할 수 있으며, 이 역할을 "전달 프록시"라고 합니다. 원본 서버를 대신하기 위해 프록시를 삽입할 수도 있는데, 이 역할을 "역방향 프록시"라고 합니다. 이러한 구별과 직교하여 프록시는 CoAP 요청에서 CoAP 요청으로 매핑하거나(CoAP-CoAP 프록시) 다른 프로토콜 간에 변환할 수 있습니다("교차 프록시"). 이러한 용어의 전체 정의는 섹션 1.2에 나와 있습니다.
