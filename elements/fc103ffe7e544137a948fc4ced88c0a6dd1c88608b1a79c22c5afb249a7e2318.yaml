"hash": |-
  fc103ffe7e544137a948fc4ced88c0a6dd1c88608b1a79c22c5afb249a7e2318
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Certain RTSP headers, such as the CSeq header (Section 18.20), which
     may appear to be relevant only to connectionless transport scenarios,
     are still retained and MUST be implemented according to this
     specification.  In the case of CSeq, it is quite useful for matching
     responses to requests if the requests are pipelined (see Section 12).
     It is also useful in proxies for keeping track of the different
     requests when aggregating several client requests on a single TCP
     connection.
"fixed": |-
  Certain RTSP headers, such as the CSeq header (Section 18.20), which may appear to be relevant only to connectionless transport scenarios, are still retained and MUST be implemented according to this specification.  In the case of CSeq, it is quite useful for matching responses to requests if the requests are pipelined (see Section 12). It is also useful in proxies for keeping track of the different requests when aggregating several client requests on a single TCP connection.
"ko": |-
  비연결 전송 시나리오에만 관련된 것처럼 보일 수 있는 CSeq 헤더(18.20절)와 같은 특정 RTSP 헤더는 여전히 유지되며 이 사양에 따라 구현되어야 합니다. CSeq의 경우 요청이 파이프라인인 경우 요청에 대한 응답을 일치시키는 데 매우 유용합니다(섹션 12 참조). 또한 단일 TCP 연결에서 여러 클라이언트 요청을 집계할 때 다양한 요청을 추적하는 프록시에 유용합니다.
