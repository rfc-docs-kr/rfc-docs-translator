"hash": |-
  6a7d7ee243c21114de456ff1442a00d64fa9418710fef0349cb6c07ed981db6f
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The hashes necessary to verify a chunk are, in principle, its
     sibling's hash and all its uncle hashes, but the set of hashes to
     send can be optimized.  Before sending a packet of data to the
     receiver, the sender inspects the receiver's previous
     acknowledgements (HAVE or ACK) to derive which hashes the receiver
     already has for sure.  Suppose the receiver had acknowledged chunks
     C0 and C1 (the first two chunks of the file), then it must already
     have uncle hashes 5, 11, and so on.  That is because those hashes are
     necessary to check C0 and C1 against the root hash.  Then, hashes 3,
     7, and so on must also be known as they are calculated in the process
     of checking the uncle hash chain.  Hence, to send chunk C7, the
     sender needs to include just the hashes for nodes 14 and 9, which let
     the data be checked against hash 11, which is already known to the
     receiver.
"fixed": |-
  The hashes necessary to verify a chunk are, in principle, its sibling's hash and all its uncle hashes, but the set of hashes to send can be optimized.  Before sending a packet of data to the receiver, the sender inspects the receiver's previous acknowledgements (HAVE or ACK) to derive which hashes the receiver already has for sure.  Suppose the receiver had acknowledged chunks C0 and C1 (the first two chunks of the file), then it must already have uncle hashes 5, 11, and so on.  That is because those hashes are necessary to check C0 and C1 against the root hash.  Then, hashes 3, 7, and so on must also be known as they are calculated in the process of checking the uncle hash chain.  Hence, to send chunk C7, the sender needs to include just the hashes for nodes 14 and 9, which let the data be checked against hash 11, which is already known to the receiver.
"ko": |-
  청크를 검증하는 데 필요한 해시는 원칙적으로 형제 해시와 모든 삼촌 해시이지만 보낼 해시 세트는 최적화될 수 있습니다. 데이터 패킷을 수신자에게 보내기 전에 발신자는 수신자의 이전 승인(HAVE 또는 ACK)을 검사하여 수신자가 이미 확실히 갖고 있는 해시가 무엇인지 알아냅니다. 수신자가 청크 C0 및 C1(파일의 처음 두 청크)을 확인했다고 가정하면 이미 삼촌 해시 5, 11 등이 있어야 합니다. 이는 루트 해시와 비교하여 C0 및 C1을 확인하는 데 해당 해시가 필요하기 때문입니다. 그러면 해시 3, 7 등도 삼촌 해시 체인을 확인하는 과정에서 계산되기 때문에 알아야 한다. 따라서 청크 C7을 보내려면 발신자는 노드 14와 9에 대한 해시만 포함해야 하며, 이를 통해 수신자에게 이미 알려진 해시 11과 비교하여 데이터를 확인할 수 있습니다.
