"hash": |-
  e183fc97c39fb120cf63b79bb5932c9919960ff3047fa8b2781b2528fb468e45
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     2.  Unless other accommodations are made to mitigate the risks of
         PSKs known to a group, each PSK MUST be restricted in its use to
         at most two logical nodes: one logical node in a TLS client role
         and one logical node in a TLS server role.  (The two logical
         nodes MAY be the same, in different roles.)  Two acceptable
         accommodations are described in [RFC9258]: (1) exchanging client
         and server identifiers over the TLS connection after the
         handshake and (2) incorporating identifiers for both the client
         and the server into the context string for an external PSK
         importer.
"fixed": |-
  1.  Unless other accommodations are made to mitigate the risks of PSKs known to a group, each PSK MUST be restricted in its use to at most two logical nodes: one logical node in a TLS client role and one logical node in a TLS server role.  (The two logical nodes MAY be the same, in different roles.)  Two acceptable accommodations are described in [RFC9258]: (1) exchanging client and server identifiers over the TLS connection after the handshake and (2) incorporating identifiers for both the client and the server into the context string for an external PSK importer.
"ko": |-
  1. 그룹에 알려진 PSK의 위험을 완화하기 위해 다른 조정이 이루어지지 않는 한, 각 PSK는 최대 2개의 논리 노드(TLS 클라이언트 역할의 논리 노드 1개와 TLS 서버 역할의 논리 노드 1개)로 사용을 제한해야 합니다. .  (두 개의 논리 노드는 서로 다른 역할에서 동일할 수 있습니다.) [RFC9258]에는 허용되는 두 가지 편의 사항이 설명되어 있습니다. (1) 핸드셰이크 후 TLS 연결을 통해 클라이언트 및 서버 식별자를 교환하고 (2) 두 클라이언트 모두에 대한 식별자를 통합합니다. 외부 PSK 가져오기 도구의 컨텍스트 문자열에 서버를 추가합니다.
