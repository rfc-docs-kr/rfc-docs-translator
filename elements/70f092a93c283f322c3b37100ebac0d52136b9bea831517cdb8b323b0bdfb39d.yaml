"hash": |-
  70f092a93c283f322c3b37100ebac0d52136b9bea831517cdb8b323b0bdfb39d
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The client transaction MUST be destroyed the instant it enters the
     "Terminated" state.  This is actually necessary to guarantee correct
     operation.  The reason is that 2xx responses to an INVITE are treated
     differently; each one is forwarded by proxies, and the ACK handling
     in a UAC is different.  Thus, each 2xx needs to be passed to a proxy
     core (so that it can be forwarded) and to a UAC core (so it can be
     acknowledged).  No transaction layer processing takes place.
     Whenever a response is received by the transport, if the transport
     layer finds no matching client transaction (using the rules of
     Section 17.1.3), the response is passed directly to the core.  Since
     the matching client transaction is destroyed by the first 2xx,
     subsequent 2xx will find no match and therefore be passed to the
     core.
"fixed": |-
  The client transaction MUST be destroyed the instant it enters the "Terminated" state.  This is actually necessary to guarantee correct operation.  The reason is that 2xx responses to an INVITE are treated differently; each one is forwarded by proxies, and the ACK handling in a UAC is different.  Thus, each 2xx needs to be passed to a proxy core (so that it can be forwarded) and to a UAC core (so it can be acknowledged).  No transaction layer processing takes place. Whenever a response is received by the transport, if the transport layer finds no matching client transaction (using the rules of Section 17.1.3), the response is passed directly to the core.  Since the matching client transaction is destroyed by the first 2xx, subsequent 2xx will find no match and therefore be passed to the core.
"ko": |-
  클라이언트 트랜잭션은 "종료됨" 상태에 들어가는 즉시 파기되어야 합니다. 이는 실제로 올바른 작동을 보장하는 데 필요합니다. 그 이유는 INVITE에 대한 2xx 응답이 다르게 처리되기 때문입니다. 각각은 프록시에 의해 전달되며 UAC의 ACK 처리는 다릅니다. 따라서 각 2xx는 프록시 코어(전달될 수 있도록)와 UAC 코어(승인될 수 있도록)로 전달되어야 합니다. 트랜잭션 계층 처리가 발생하지 않습니다. 전송에서 응답을 수신할 때마다 전송 계층에서 일치하는 클라이언트 트랜잭션을 찾지 못하면(섹션 17.1.3의 규칙 사용) 응답이 코어로 직접 전달됩니다. 일치하는 클라이언트 트랜잭션은 첫 번째 2xx에 의해 삭제되므로 후속 2xx에서는 일치하는 항목을 찾지 못하여 코어로 전달됩니다.
