"hash": |-
  eba71caba753c820f13cf951f7cdea1be01f780b7364e733622c92767370099a
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     This request is sent from the client to the recorder resource when it
     discovers that a kill-on-barge-in prompt has finished playing (see
     Section 8.4.2).  This is useful in the scenario when the recorder and
     synthesizer resources are not in the same MRCPv2 session.  When a
     kill-on-barge-in prompt is being played, the client wants the RECORD
     request to be simultaneously active so that it can detect and
     implement kill-on-barge-in.  But at the same time, the client doesn't
     want the recorder resource to start the no-input timers until the
     prompt is finished.  The Start-Input-Timers header field in the
     RECORD request allows the client to say if the timers should be
     started or not.  In the above case, the recorder resource does not
     start the timers until the client sends a START-INPUT-TIMERS method
     to the recorder.
"fixed": |-
  This request is sent from the client to the recorder resource when it discovers that a kill-on-barge-in prompt has finished playing (see Section 8.4.2).  This is useful in the scenario when the recorder and synthesizer resources are not in the same MRCPv2 session.  When a kill-on-barge-in prompt is being played, the client wants the RECORD request to be simultaneously active so that it can detect and implement kill-on-barge-in.  But at the same time, the client doesn't want the recorder resource to start the no-input timers until the prompt is finished.  The Start-Input-Timers header field in the RECORD request allows the client to say if the timers should be started or not.  In the above case, the recorder resource does not start the timers until the client sends a START-INPUT-TIMERS method to the recorder.
"ko": |-
  이 요청은 kill-on-barge-in 프롬프트가 재생을 마쳤음을 발견했을 때 클라이언트에서 레코더 리소스로 전송됩니다(섹션 8.4.2 참조). 레코더와 신시사이저 리소스가 동일한 MRCPv2 세션에 없는 시나리오에서 유용합니다. kill-on-barge-in 프롬프트가 재생 중일 때 클라이언트는 RECORD 요청이 동시에 활성화되어 kill-on-barge-in을 감지하고 구현할 수 있기를 원합니다. 하지만 동시에 클라이언트는 프롬프트가 완료될 때까지 레코더 리소스가 무입력 타이머를 시작하지 않기를 원합니다. RECORD 요청의 Start-Input-Timers 헤더 필드를 통해 클라이언트는 타이머를 시작해야 할지 여부를 지정할 수 있습니다. 위의 경우, 클라이언트가 레코더에 START-INPUT-TIMERS 메서드를 보낼 때까지 레코더 리소스는 타이머를 시작하지 않습니다.
