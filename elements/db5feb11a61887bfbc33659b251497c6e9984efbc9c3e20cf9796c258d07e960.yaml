"hash": |-
  db5feb11a61887bfbc33659b251497c6e9984efbc9c3e20cf9796c258d07e960
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The QUIC handshake combines negotiation of cryptographic and
     transport parameters.  QUIC integrates the TLS handshake [TLS13],
     although using a customized framing for protecting packets.  The
     integration of TLS and QUIC is described in more detail in
     [QUIC-TLS].  The handshake is structured to permit the exchange of
     application data as soon as possible.  This includes an option for
     clients to send data immediately (0-RTT), which requires some form of
     prior communication or configuration to enable.
"fixed": |-
  The QUIC handshake combines negotiation of cryptographic and transport parameters.  QUIC integrates the TLS handshake [TLS13], although using a customized framing for protecting packets.  The integration of TLS and QUIC is described in more detail in [QUIC-TLS].  The handshake is structured to permit the exchange of application data as soon as possible.  This includes an option for clients to send data immediately (0-RTT), which requires some form of prior communication or configuration to enable.
"ko": |-
  QUIC 핸드셰이크는 암호화 및 전송 매개변수 협상을 결합합니다. QUIC는 TLS 핸드셰이크 [TLS13]를 통합하지만 패킷 보호를 위해 사용자 정의된 프레이밍을 사용합니다. TLS와 QUIC의 통합은 [QUIC-TLS]에 자세히 설명되어 있습니다. 핸드셰이크는 가능한 한 빨리 애플리케이션 데이터를 교환할 수 있도록 구성되어 있습니다. 여기에는 클라이언트가 데이터를 즉시(0-RTT) 전송할 수 있는 옵션이 포함되어 있으며, 이를 활성화하려면 사전 통신이나 구성이 필요합니다.
