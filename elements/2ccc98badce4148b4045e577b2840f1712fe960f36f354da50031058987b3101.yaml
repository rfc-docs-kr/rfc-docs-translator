"hash": |-
  2ccc98badce4148b4045e577b2840f1712fe960f36f354da50031058987b3101
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The TCP design includes only rudimentary security features that
     improve the robustness and reliability of connections and application
     data transfer, but there are no built-in cryptographic capabilities
     to support any form of confidentiality, authentication, or other
     typical security functions.  Non-cryptographic enhancements (e.g.,
     [9]) have been developed to improve robustness of TCP connections to
     particular types of attacks, but the applicability and protections of
     non-cryptographic enhancements are limited (e.g., see Section 1.1 of
     [9]).  Applications typically utilize lower-layer (e.g., IPsec) and
     upper-layer (e.g., TLS) protocols to provide security and privacy for
     TCP connections and application data carried in TCP.  Methods based
     on TCP Options have been developed as well, to support some security
     capabilities.
"fixed": |-
  The TCP design includes only rudimentary security features that improve the robustness and reliability of connections and application data transfer, but there are no built-in cryptographic capabilities to support any form of confidentiality, authentication, or other typical security functions.  Non-cryptographic enhancements (e.g., [9]) have been developed to improve robustness of TCP connections to particular types of attacks, but the applicability and protections of non-cryptographic enhancements are limited (e.g., see Section 1.1 of [9]).  Applications typically utilize lower-layer (e.g., IPsec) and upper-layer (e.g., TLS) protocols to provide security and privacy for TCP connections and application data carried in TCP.  Methods based on TCP Options have been developed as well, to support some security capabilities.
"ko": |-
  TCP 설계에는 연결 및 애플리케이션 데이터 전송의 견고성과 신뢰성을 향상시키는 기본적인 보안 기능만 포함되어 있지만 모든 형태의 기밀성, 인증 또는 기타 일반적인 보안 기능을 지원하는 내장된 암호화 기능은 없습니다. 특정 유형의 공격에 대한 TCP 연결의 견고성을 향상시키기 위해 비암호화 개선 사항(예: [9])이 개발되었지만 비암호화 개선 사항의 적용 가능성과 보호는 제한적입니다(예: [9]의 섹션 1.1 참조). 애플리케이션은 일반적으로 하위 계층(예: IPsec) 및 상위 계층(예: TLS) 프로토콜을 활용하여 TCP 연결 및 TCP에서 전달되는 애플리케이션 데이터에 대한 보안 및 개인 정보 보호를 제공합니다. 일부 보안 기능을 지원하기 위해 TCP 옵션을 기반으로 하는 방법도 개발되었습니다.
