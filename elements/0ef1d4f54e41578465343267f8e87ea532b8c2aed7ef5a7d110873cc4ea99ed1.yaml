"hash": |-
  0ef1d4f54e41578465343267f8e87ea532b8c2aed7ef5a7d110873cc4ea99ed1
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
        This behavior ensures that the client-server interaction will
        proceed without delay when all options are understood by both
        sides, and only slow down if options are not understood (as in the
        example above).  For a well-matched client-server pair, the
        interaction proceeds quickly, saving a round-trip often required
        by negotiation mechanisms.  In addition, it also removes ambiguity
        when the client requires features that the server does not
        understand.  Some features, such as call handling fields, are only
        of interest to end systems.
"fixed": |-
  - This behavior ensures that the client-server interaction will proceed without delay when all options are understood by both sides, and only slow down if options are not understood (as in the example above).  For a well-matched client-server pair, the interaction proceeds quickly, saving a round-trip often required by negotiation mechanisms.  In addition, it also removes ambiguity when the client requires features that the server does not understand.  Some features, such as call handling fields, are only of interest to end systems.
"ko": |-
  - 이 동작은 양쪽이 모든 옵션을 이해할 때 클라이언트-서버 상호 작용이 지연 없이 진행되도록 보장하고 옵션이 이해되지 않는 경우에만 속도가 느려집니다(위의 예에서와 같이). 잘 일치하는 클라이언트-서버 쌍의 경우 상호 작용이 빠르게 진행되어 협상 메커니즘에 필요한 왕복 시간이 절약됩니다. 또한 서버가 이해하지 못하는 기능을 클라이언트가 요구할 때 모호성을 제거합니다. 통화 처리 필드와 같은 일부 기능은 최종 시스템에만 관심이 있습니다.
