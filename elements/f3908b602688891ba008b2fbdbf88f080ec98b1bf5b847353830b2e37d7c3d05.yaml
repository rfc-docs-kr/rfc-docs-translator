"hash": |-
  f3908b602688891ba008b2fbdbf88f080ec98b1bf5b847353830b2e37d7c3d05
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
          In lower layers where caching of keying material is supported,
          the Secure Association Protocol phase is REQUIRED, and MUST
          support the derivation of fresh unicast and multicast TSKs, even
          when the transported keying material provided by the backend
          authentication server is not fresh.  This is typically supported
          via the exchange of nonces or counters, which are then mixed
          with the keying material in order to generate fresh unicast
          (phase 2a) and possibly multicast (phase 2b) session keys.  By
          not using exported EAP keying material directly to protect data,
          the Secure Association Protocol protects it against compromise.
"fixed": |-
  - In lower layers where caching of keying material is supported, the Secure Association Protocol phase is REQUIRED, and MUST support the derivation of fresh unicast and multicast TSKs, even when the transported keying material provided by the backend authentication server is not fresh.  This is typically supported via the exchange of nonces or counters, which are then mixed with the keying material in order to generate fresh unicast (phase 2a) and possibly multicast (phase 2b) session keys.  By not using exported EAP keying material directly to protect data, the Secure Association Protocol protects it against compromise.
"ko": |-
  - 키 자료 캐싱이 지원되는 하위 계층에서는 보안 연결 프로토콜 단계가 필수이며 백엔드 인증 서버에서 제공하는 전송된 키 자료가 최신이 아닌 경우에도 새로운 유니캐스트 및 멀티캐스트 TSK의 파생을 지원해야 합니다. 이는 일반적으로 새로운 유니캐스트(2a단계) 세션 키와 멀티캐스트(2b단계) 세션 키를 생성하기 위해 키 자료와 혼합되는 nonce 또는 카운터 교환을 통해 지원됩니다. 데이터를 보호하기 위해 내보낸 EAP 키 자료를 직접 사용하지 않음으로써 보안 연결 프로토콜은 데이터가 손상되지 않도록 보호합니다.
