"hash": |-
  00be70eb98596c23905ba354b19977cf465ebbbcbeb35096ffe3f284a2f464e8
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     One goal in a process identification scheme is to provide a means by
     which processes can select their own identifiers which can be
     guaranteed unique and can contain information meaningful to the user.
     Problems of efficiency prevent making the port ID's themselves large
     enough to accomplish this aim.  Efficiency questions aside, it would
     appear to be ideal to allow processes to use character strings of
     arbitrary length to identify themselves.  Uniqueness can then be
     easily ensured if, for example, users follow the convention of
     including their names in the process identification string.  Further,
     the remainder of the name can be chosen to have some meaning related
     to its use with obvious advantages and convenience for users.
"fixed": |-
  One goal in a process identification scheme is to provide a means by which processes can select their own identifiers which can be guaranteed unique and can contain information meaningful to the user. Problems of efficiency prevent making the port ID's themselves large enough to accomplish this aim.  Efficiency questions aside, it would appear to be ideal to allow processes to use character strings of arbitrary length to identify themselves.  Uniqueness can then be easily ensured if, for example, users follow the convention of including their names in the process identification string.  Further, the remainder of the name can be chosen to have some meaning related to its use with obvious advantages and convenience for users.
"ko": |-
  프로세스 식별 체계의 한 가지 목표는 프로세스가 고유성을 보장하고 사용자에게 의미 있는 정보를 포함할 수 있는 자체 식별자를 선택할 수 있는 수단을 제공하는 것입니다. 효율성 문제로 인해 포트 ID 자체가 이 목적을 달성할 만큼 충분히 커지지 못합니다. 효율성 문제는 제쳐두고, 프로세스가 자신을 식별하기 위해 임의 길이의 문자열을 사용하도록 허용하는 것이 이상적인 것으로 보입니다. 예를 들어 사용자가 프로세스 식별 문자열에 자신의 이름을 포함하는 규칙을 따르면 고유성을 쉽게 보장할 수 있습니다. 또한 이름의 나머지 부분은 사용자에게 분명한 이점과 편의성을 제공하면서 사용과 관련된 의미를 갖도록 선택할 수 있습니다.
