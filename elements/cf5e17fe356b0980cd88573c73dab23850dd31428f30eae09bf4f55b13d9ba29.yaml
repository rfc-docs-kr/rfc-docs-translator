"hash": |-
  cf5e17fe356b0980cd88573c73dab23850dd31428f30eae09bf4f55b13d9ba29
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The interaction model of CoAP is similar to the client/server model
     of HTTP.  However, machine-to-machine interactions typically result
     in a CoAP implementation acting in both client and server roles.  A
     CoAP request is equivalent to that of HTTP and is sent by a client to
     request an action (using a Method Code) on a resource (identified by
     a URI) on a server.  The server then sends a response with a Response
     Code; this response may include a resource representation.
"fixed": |-
  The interaction model of CoAP is similar to the client/server model of HTTP.  However, machine-to-machine interactions typically result in a CoAP implementation acting in both client and server roles.  A CoAP request is equivalent to that of HTTP and is sent by a client to request an action (using a Method Code) on a resource (identified by a URI) on a server.  The server then sends a response with a Response Code; this response may include a resource representation.
"ko": |-
  CoAP의 상호작용 모델은 HTTP의 클라이언트/서버 모델과 유사합니다. 그러나 기계 간 상호 작용으로 인해 일반적으로 CoAP 구현이 클라이언트 역할과 서버 역할 모두에서 작동하게 됩니다. CoAP 요청은 HTTP 요청과 동일하며 클라이언트가 서버의 리소스(URI로 식별됨)에 대한 작업(메소드 코드 사용)을 요청하기 위해 전송합니다. 그런 다음 서버는 응답 코드와 함께 응답을 보냅니다. 이 응답에는 리소스 표현이 포함될 수 있습니다.
