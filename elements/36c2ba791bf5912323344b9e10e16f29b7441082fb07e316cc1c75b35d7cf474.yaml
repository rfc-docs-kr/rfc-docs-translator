"hash": |-
  36c2ba791bf5912323344b9e10e16f29b7441082fb07e316cc1c75b35d7cf474
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The URI syntax provides a method of encoding data, presumably for the
     sake of identifying a resource, as a sequence of characters.  The URI
     characters are, in turn, frequently encoded as octets for transport
     or presentation.  This specification does not mandate any particular
     character encoding for mapping between URI characters and the octets
     used to store or transmit those characters.  When a URI appears in a
     protocol element, the character encoding is defined by that protocol;
     without such a definition, a URI is assumed to be in the same
     character encoding as the surrounding text.
"fixed": |-
  The URI syntax provides a method of encoding data, presumably for the sake of identifying a resource, as a sequence of characters.  The URI characters are, in turn, frequently encoded as octets for transport or presentation.  This specification does not mandate any particular character encoding for mapping between URI characters and the octets used to store or transmit those characters.  When a URI appears in a protocol element, the character encoding is defined by that protocol; without such a definition, a URI is assumed to be in the same character encoding as the surrounding text.
"ko": |-
  URI 구문은 아마도 리소스를 식별하기 위해 데이터를 일련의 문자로 인코딩하는 방법을 제공합니다. 그러면 URI 문자는 전송이나 표시를 위해 옥텟으로 인코딩되는 경우가 많습니다. 이 사양은 URI 문자와 해당 문자를 저장하거나 전송하는 데 사용되는 옥텟 간의 매핑을 위한 특정 문자 인코딩을 요구하지 않습니다. URI가 프로토콜 요소에 나타나면 문자 인코딩은 해당 프로토콜에 의해 정의됩니다. 이러한 정의가 없으면 URI는 주변 텍스트와 동일한 문자 인코딩을 사용하는 것으로 간주됩니다.
