"hash": |-
  465531f1dde104655742126929b64869b3107f21d03be57f7232c69225d7c177
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Where asymmetric routing is preferred or is unavoidable, ingress
     filtering may be difficult to deploy using a mechanism such as strict
     RPF which requires the paths to be symmetrical.  In many cases, using
     operational methods or feasible RPF may ensure the ingress filter is
     complete, like described below.  Failing that, the only real options
     are to not perform ingress filtering, use a manual access-list
     (possibly in addition to some other mechanisms), or to using some
     form of Loose RPF check.
"fixed": |-
  Where asymmetric routing is preferred or is unavoidable, ingress filtering may be difficult to deploy using a mechanism such as strict RPF which requires the paths to be symmetrical.  In many cases, using operational methods or feasible RPF may ensure the ingress filter is complete, like described below.  Failing that, the only real options are to not perform ingress filtering, use a manual access-list (possibly in addition to some other mechanisms), or to using some form of Loose RPF check.
"ko": |-
  비대칭 라우팅이 선호되거나 불가피한 경우 경로가 대칭이어야 하는 엄격한 RPF와 같은 메커니즘을 사용하여 수신 필터링을 배포하기 어려울 수 있습니다. 많은 경우에 운영 방법이나 실행 가능한 RPF를 사용하면 아래 설명된 것처럼 수신 필터가 완전한지 확인할 수 있습니다. 실패할 경우 유일한 실제 옵션은 수신 필터링을 수행하지 않거나 수동 액세스 목록(다른 메커니즘과 함께)을 사용하거나 일부 형태의 Loose RPF 검사를 사용하는 것입니다.
