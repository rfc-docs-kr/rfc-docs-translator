"hash": |-
  e11c0ea0873da9618b661f83a878a89ec5d4803474041fe3cce23bcc86b79cf2
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     If a server receives a client Initial that contains an invalid Retry
     token but is otherwise valid, it knows the client will not accept
     another Retry token.  The server can discard such a packet and allow
     the client to time out to detect handshake failure, but that could
     impose a significant latency penalty on the client.  Instead, the
     server SHOULD immediately close (Section 10.2) the connection with an
     INVALID_TOKEN error.  Note that a server has not established any
     state for the connection at this point and so does not enter the
     closing period.
"fixed": |-
  If a server receives a client Initial that contains an invalid Retry token but is otherwise valid, it knows the client will not accept another Retry token.  The server can discard such a packet and allow the client to time out to detect handshake failure, but that could impose a significant latency penalty on the client.  Instead, the server SHOULD immediately close (Section 10.2) the connection with an INVALID_TOKEN error.  Note that a server has not established any state for the connection at this point and so does not enter the closing period.
"ko": |-
  서버가 유효하지 않은 재시도 토큰을 포함하지만 그 외에는 유효한 클라이언트 초기를 수신하는 경우 클라이언트가 다른 재시도 토큰을 허용하지 않을 것임을 알고 있습니다. 서버는 이러한 패킷을 삭제하고 클라이언트가 시간 초과되어 핸드셰이크 실패를 감지하도록 허용할 수 있지만 이로 인해 클라이언트에 상당한 대기 시간 패널티가 부과될 수 있습니다. 대신, 서버는 INVALID_TOKEN 오류가 있는 연결을 즉시 닫아야 합니다(10.2절). 이 시점에서는 서버가 연결 상태를 설정하지 않았으므로 종료 기간에 들어가지 않습니다.
