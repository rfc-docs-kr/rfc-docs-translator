"hash": |-
  cf869870f6d7db010b15974d99c2438ac7e9b0af00c1a5218bc6e91d100e0a43
"type": |-
  Content
"comment": !!null |-
  null
"original": |-
  When a gateway is forced to  discard  a  packet,  the  packet  is
  selected  at  the  discretion of the gateway.  Classic techniques
  for making  this  decision  are  to  discard  the  most  recently
  received packet, or the packet at the end of the longest outgoing
  queue.  We suggest that a worthwhile practical measure is to dis-
  card  the  latest  packet  from the host that originated the most
  packets currently queued within the gateway.  This strategy  will
  tend  to  balance throughput amongst the hosts using the gateway.
  We have not yet tried this strategy, but it  seems  a  reasonable
  starting point for gateway self-protection.
"fixed": |-
  When a gateway is forced to  discard  a  packet,  the  packet  is selected  at  the  discretion of the gateway.  Classic techniques for making  this  decision  are  to  discard  the  most  recently received packet, or the packet at the end of the longest outgoing queue.  We suggest that a worthwhile practical measure is to dis- card  the  latest  packet  from the host that originated the most packets currently queued within the gateway.  This strategy  will tend  to  balance throughput amongst the hosts using the gateway. We have not yet tried this strategy, but it  seems  a  reasonable starting point for gateway self-protection.
"ko": |-
  게이트웨이가 강제로 패킷을 삭제하면 게이트웨이의 재량에 따라 패킷이 선택됩니다. 이 결정을 내리는 일반적인 기술은 가장 최근에 수신된 패킷을 삭제하거나 가장 긴 나가는 대기열의 끝에 있는 패킷을 삭제하는 것입니다. 우리는 가치 있고 실용적인 조치는 현재 게이트웨이 내에 대기 중인 가장 많은 패킷을 발생시킨 호스트로부터 최신 패킷을 폐기하는 것이라고 제안합니다. 이 전략은 게이트웨이를 사용하는 호스트 간에 처리량의 균형을 맞추는 경향이 있습니다. 아직 이 전략을 시도하지는 않았지만 게이트웨이 자체 보호를 위한 합리적인 출발점인 것 같습니다.
