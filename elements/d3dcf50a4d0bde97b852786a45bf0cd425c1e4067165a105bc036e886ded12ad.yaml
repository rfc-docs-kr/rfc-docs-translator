"hash": |-
  d3dcf50a4d0bde97b852786a45bf0cd425c1e4067165a105bc036e886ded12ad
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The second primary goal is DATA INTEGRITY.  The basic idea here is
     that we want to make sure that the data we receive is the same data
     that the sender has sent.  In paper-based systems, some data
     integrity comes automatically.  When you receive a letter written in
     pen you can be fairly certain that no words have been removed by an
     attacker because pen marks are difficult to remove from paper.
     However, an attacker could have easily added some marks to the paper
     and completely changed the meaning of the message.  Similarly, it's
     easy to shorten the page to truncate the message.
"fixed": |-
  The second primary goal is DATA INTEGRITY.  The basic idea here is that we want to make sure that the data we receive is the same data that the sender has sent.  In paper-based systems, some data integrity comes automatically.  When you receive a letter written in pen you can be fairly certain that no words have been removed by an attacker because pen marks are difficult to remove from paper. However, an attacker could have easily added some marks to the paper and completely changed the meaning of the message.  Similarly, it's easy to shorten the page to truncate the message.
"ko": |-
  두 번째 주요 목표는 데이터 무결성입니다. 여기서의 기본 아이디어는 우리가 수신한 데이터가 보낸 사람이 보낸 데이터와 동일한지 확인하려는 것입니다. 종이 기반 시스템에서는 일부 데이터 무결성이 자동으로 제공됩니다. 펜으로 쓴 편지를 받으면 펜 자국은 종이에서 제거하기 어렵기 때문에 공격자가 어떤 단어도 제거하지 않았음을 상당히 확신할 수 있습니다. 그러나 공격자는 쉽게 종이에 일부 표시를 추가하여 메시지의 의미를 완전히 바꿀 수 있었습니다. 마찬가지로 메시지를 자르기 위해 페이지를 줄이는 것도 쉽습니다.
