"hash": |-
  9f1f0baf8ed3448397c303255a3e9659377f5dd64b14ef58a0c69040be3d7365
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     When the second ClientHello is received, the server can verify that
     the Cookie is valid and that the client can receive packets at the
     given IP address.  In order to avoid sequence number duplication in
     case of multiple cookie exchanges, the server MUST use the record
     sequence number in the ClientHello as the record sequence number in
     its initial ServerHello.  Subsequent ServerHellos will only be sent
     after the server has created state and MUST increment normally.
"fixed": |-
  When the second ClientHello is received, the server can verify that the Cookie is valid and that the client can receive packets at the given IP address.  In order to avoid sequence number duplication in case of multiple cookie exchanges, the server MUST use the record sequence number in the ClientHello as the record sequence number in its initial ServerHello.  Subsequent ServerHellos will only be sent after the server has created state and MUST increment normally.
"ko": |-
  두 번째 ClientHello가 수신되면 서버는 쿠키가 유효한지, 클라이언트가 지정된 IP 주소에서 패킷을 수신할 수 있는지 확인할 수 있습니다. 다중 쿠키 교환의 경우 시퀀스 번호 중복을 피하기 위해 서버는 ClientHello의 레코드 시퀀스 번호를 초기 ServerHello의 레코드 시퀀스 번호로 사용해야 합니다. 후속 ServerHellos는 서버가 상태를 생성한 후에만 전송되며 정상적으로 증가해야 합니다.
