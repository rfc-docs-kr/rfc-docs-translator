"hash": |-
  7d5f9f03f98d2b68b8f082b42da1cb239cf01ffd372a59f85ee6a97318f9d358
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     This abstract definition of content reflects the data after it has
     been extracted from the message framing.  For example, an HTTP/1.1
     message body (Section 6 of [HTTP/1.1]) might consist of a stream of
     data encoded with the chunked transfer coding -- a sequence of data
     chunks, one zero-length chunk, and a trailer section -- whereas the
     content of that same message includes only the data stream after the
     transfer coding has been decoded; it does not include the chunk
     lengths, chunked framing syntax, nor the trailer fields
     (Section 6.5).
"fixed": |-
  This abstract definition of content reflects the data after it has been extracted from the message framing.  For example, an HTTP/1.1 message body (Section 6 of [HTTP/1.1]) might consist of a stream of data encoded with the chunked transfer coding -- a sequence of data chunks, one zero-length chunk, and a trailer section -- whereas the content of that same message includes only the data stream after the transfer coding has been decoded; it does not include the chunk lengths, chunked framing syntax, nor the trailer fields (Section 6.5).
"ko": |-
  콘텐츠에 대한 이 추상적 정의는 메시지 프레이밍에서 추출된 데이터를 반영합니다. 예를 들어, HTTP/1.1 메시지 본문([HTTP/1.1]의 섹션 6)은 청크 전송 코딩으로 인코딩된 데이터 스트림(데이터 청크 시퀀스, 길이가 0인 청크 1개, 트레일러 섹션)으로 구성될 수 있습니다. - 동일한 메시지의 내용에는 전송 코딩이 디코딩된 후의 데이터 스트림만 포함됩니다. 여기에는 청크 길이, 청크 프레이밍 구문, 트레일러 필드(6.5절)가 포함되지 않습니다.
