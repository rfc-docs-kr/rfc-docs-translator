"hash": |-
  c1ee5818b6845f574d5c348514ac6bacccbe810e770fc420e8f6e4b2f6345ed0
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
        HMAC has the following goals:
        -  To use available cryptographic hash functions without
           modification, particularly functions that perform well in
           software and for which software is freely and widely available.
        -  To preserve the original performance of the selected hash
           without significant degradation.
        -  To use and handle keys in a simple way.
        -  To have a well-understood cryptographic analysis of the
           strength of the mechanism based on reasonable assumptions about
           the underlying hash function.
        -  To enable easy replacement of the hash function in case a
           faster or stronger hash is found or required.
"fixed": |-
  - HMAC has the following goals: -  To use available cryptographic hash functions without modification, particularly functions that perform well in software and for which software is freely and widely available. -  To preserve the original performance of the selected hash without significant degradation. -  To use and handle keys in a simple way. -  To have a well-understood cryptographic analysis of the strength of the mechanism based on reasonable assumptions about the underlying hash function. -  To enable easy replacement of the hash function in case a faster or stronger hash is found or required.
"ko": |-
  - HMAC는 다음과 같은 목표를 가지고 있습니다. - 수정 없이 사용 가능한 암호화 해시 함수, 특히 소프트웨어에서 잘 수행되고 소프트웨어가 자유롭고 널리 사용 가능한 기능을 사용하는 것입니다. - 심각한 성능 저하 없이 선택한 해시의 원래 성능을 보존합니다. - 간단한 방법으로 키를 사용하고 처리합니다. - 기본 해시 함수에 대한 합리적인 가정을 기반으로 메커니즘의 강도에 대해 잘 이해된 암호화 분석을 갖습니다. - 더 빠르거나 더 강한 해시가 발견되거나 필요한 경우 해시 함수를 쉽게 교체할 수 있습니다.
