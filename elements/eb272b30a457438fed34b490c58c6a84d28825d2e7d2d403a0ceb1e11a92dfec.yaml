"hash": |-
  eb272b30a457438fed34b490c58c6a84d28825d2e7d2d403a0ceb1e11a92dfec
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Designers should also be aware that implementations of these curves
     might not use the Montgomery ladder as specified in this document,
     but could use generic, elliptic-curve libraries instead.  These
     implementations could reject points on the twist and could reject
     non-minimal field elements.  While not recommended, such
     implementations will interoperate with the Montgomery ladder
     specified here but may be trivially distinguishable from it.  For
     example, sending a non-canonical value or a point on the twist may
     cause such implementations to produce an observable error while an
     implementation that follows the design in this text would
     successfully produce a shared key.
"fixed": |-
  Designers should also be aware that implementations of these curves might not use the Montgomery ladder as specified in this document, but could use generic, elliptic-curve libraries instead.  These implementations could reject points on the twist and could reject non-minimal field elements.  While not recommended, such implementations will interoperate with the Montgomery ladder specified here but may be trivially distinguishable from it.  For example, sending a non-canonical value or a point on the twist may cause such implementations to produce an observable error while an implementation that follows the design in this text would successfully produce a shared key.
"ko": |-
  또한 설계자는 이러한 곡선의 구현이 이 문서에 지정된 대로 Montgomery 래더를 사용하지 않고 대신 일반 타원 곡선 라이브러리를 사용할 수 있다는 점을 인식해야 합니다. 이러한 구현은 비틀림 지점을 거부하고 최소가 아닌 필드 요소를 거부할 수 있습니다. 권장되지는 않지만 이러한 구현은 여기에 지정된 Montgomery Ladder와 상호 운용되지만 그것과 사소하게 구별될 수 있습니다. 예를 들어, 비정규 값이나 왜곡된 지점을 전송하면 이러한 구현에서 관찰 가능한 오류가 발생할 수 있지만 이 텍스트의 설계를 따르는 구현에서는 공유 키가 성공적으로 생성됩니다.
