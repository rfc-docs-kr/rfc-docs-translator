"hash": |-
  7f91b0880febac076c5470eac04ac19542c8e702beb985a93f4bf725f546d9f2
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Although the solution using non-random PKCS #1 block type 2 message
     padding is inelegant, it provides a reasonably secure way for Version
     3.0 servers to detect the attack.  This solution is not secure
     against attackers who can brute force the key and substitute a new
     ENCRYPTED-KEY-DATA message containing the same key (but with normal
     padding) before the application specified wait threshold has expired.
     Parties concerned about attacks of this scale should not use 40-bit
     encryption keys.  Altering the padding of the least-significant 8
     bytes of the PKCS padding does not impact security for the size of
     the signed hashes and RSA key lengths used in the protocol, since
     this is essentially equivalent to increasing the input block size by
     8 bytes.
"fixed": |-
  Although the solution using non-random PKCS #1 block type 2 message padding is inelegant, it provides a reasonably secure way for Version 3.0 servers to detect the attack.  This solution is not secure against attackers who can brute force the key and substitute a new ENCRYPTED-KEY-DATA message containing the same key (but with normal padding) before the application specified wait threshold has expired. Parties concerned about attacks of this scale should not use 40-bit encryption keys.  Altering the padding of the least-significant 8 bytes of the PKCS padding does not impact security for the size of the signed hashes and RSA key lengths used in the protocol, since this is essentially equivalent to increasing the input block size by 8 bytes.
"ko": |-
  무작위가 아닌 PKCS #1 블록 유형 2 메시지 패딩을 사용하는 솔루션은 우아하지 않지만 버전 3.0 서버가 공격을 탐지할 수 있는 합리적인 보안 방법을 제공합니다. 이 솔루션은 애플리케이션이 지정한 대기 임계값이 만료되기 전에 키를 무차별 대입하여 동일한 키(그러나 일반 패딩 포함)가 포함된 새 ENCRYPTED-KEY-DATA 메시지로 대체할 수 있는 공격자에 대해 안전하지 않습니다. 이 규모의 공격을 우려하는 당사자는 40비트 암호화 키를 사용해서는 안 됩니다. PKCS 패딩 중 최하위 8바이트의 패딩을 변경하면 서명된 해시 크기와 프로토콜에 사용되는 RSA 키 길이에 대한 보안에 영향을 주지 않습니다. 이는 본질적으로 입력 블록 크기를 8바이트 늘리는 것과 동일하기 때문입니다.
