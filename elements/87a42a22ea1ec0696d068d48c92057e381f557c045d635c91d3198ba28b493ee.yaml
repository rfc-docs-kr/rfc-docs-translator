"hash": |-
  87a42a22ea1ec0696d068d48c92057e381f557c045d635c91d3198ba28b493ee
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The use of TLS/DTLS extensions to negotiate an overall switch is
     preferable to defining new ciphersuites because the latter would
     result in a Cartesian explosion of suites, potentially requiring
     duplicating every single existing suite with a new one that uses
     encrypt-then-MAC.  In contrast, the approach presented here requires
     just a single new extension type with a corresponding minimal-length
     extension sent by client and server.
"fixed": |-
  The use of TLS/DTLS extensions to negotiate an overall switch is preferable to defining new ciphersuites because the latter would result in a Cartesian explosion of suites, potentially requiring duplicating every single existing suite with a new one that uses encrypt-then-MAC.  In contrast, the approach presented here requires just a single new extension type with a corresponding minimal-length extension sent by client and server.
"ko": |-
  TLS/DTLS 확장을 사용하여 전체 스위치를 협상하는 것이 새로운 암호 그룹을 정의하는 것보다 바람직한데, 후자는 그룹의 데카르트 폭발을 초래하여 잠재적으로 모든 기존 그룹을 암호화-그 다음 MAC을 사용하는 새 그룹으로 복제해야 하기 때문입니다. 반면, 여기에 제시된 접근 방식은 클라이언트와 서버에서 보낸 해당 최소 길이 확장과 함께 단일 새 확장 유형만 필요합니다.
