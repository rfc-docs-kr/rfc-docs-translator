"hash": |-
  c9fe92a5d4f0240effb4331456d6119d24ee05037c8c567fee34b5ca339fd359
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     In the case of live streaming, the tree of chunks grows dynamically
     and the root hash is undefined or, more precisely, transient, as long
     as new data is generated by the live source.  Section 6.1.2 defines a
     method for content integrity verification for live streams that works
     with such a dynamic tree.  Although the tree is dynamic, content
     verification works the same for both live and predefined content,
     resulting in a unified method for both types of streaming.
"fixed": |-
  In the case of live streaming, the tree of chunks grows dynamically and the root hash is undefined or, more precisely, transient, as long as new data is generated by the live source.  Section 6.1.2 defines a method for content integrity verification for live streams that works with such a dynamic tree.  Although the tree is dynamic, content verification works the same for both live and predefined content, resulting in a unified method for both types of streaming.
"ko": |-
  라이브 스트리밍의 경우 청크 트리는 동적으로 커지며 루트 해시는 정의되지 않거나 더 정확하게는 라이브 소스에서 새 데이터가 생성되는 한 일시적입니다. 섹션 6.1.2에서는 이러한 동적 트리와 함께 작동하는 라이브 스트림에 대한 콘텐츠 무결성 확인 방법을 정의합니다. 트리는 동적이지만 콘텐츠 확인은 라이브 콘텐츠와 사전 정의된 콘텐츠 모두에 대해 동일하게 작동하므로 두 스트리밍 유형 모두에 대한 통합 방법이 생성됩니다.
