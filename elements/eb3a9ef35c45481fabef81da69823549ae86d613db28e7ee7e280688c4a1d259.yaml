"hash": |-
  eb3a9ef35c45481fabef81da69823549ae86d613db28e7ee7e280688c4a1d259
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Formal syntax notations can be used to define complicated protocol
     concepts or data types, and to specify values of these data types.
     This permits the protocol to be written without concern on how the
     implementation is constructed, or how the data type is represented
     during transfer.  The specification is simplified because it can be
     presented as "axioms" that will be proven by implementation.
"fixed": |-
  Formal syntax notations can be used to define complicated protocol concepts or data types, and to specify values of these data types. This permits the protocol to be written without concern on how the implementation is constructed, or how the data type is represented during transfer.  The specification is simplified because it can be presented as "axioms" that will be proven by implementation.
"ko": |-
  형식적인 구문 표기법은 복잡한 프로토콜 개념이나 데이터 유형을 정의하고 이러한 데이터 유형의 값을 지정하는 데 사용될 수 있습니다. 이를 통해 구현이 어떻게 구성되는지 또는 전송 중에 데이터 유형이 어떻게 표현되는지에 대한 걱정 없이 프로토콜을 작성할 수 있습니다. 사양은 구현을 통해 입증되는 "공리"로 제시될 수 있으므로 단순화됩니다.
