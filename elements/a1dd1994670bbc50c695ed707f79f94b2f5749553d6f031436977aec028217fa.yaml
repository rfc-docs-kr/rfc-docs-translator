"hash": |-
  a1dd1994670bbc50c695ed707f79f94b2f5749553d6f031436977aec028217fa
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     A simple approach is to have all users have CERTIFICATES [PKIX] which
     they then use to authenticate in some protocol-specific way, as in
     [TLS] or [S/MIME].  A certificate is a signed credential binding an
     entity's identity to its public key.  The signer of a certificate is
     a CERTIFICATE AUTHORITY (CA), whose certificate may itself be signed
     by some superior CA.  In order for this system to work, trust in one
     or more CAs must be established in an out-of-band fashion.  Such CAs
     are referred to as TRUSTED ROOTS or ROOT CAS.  The primary obstacle
     to this approach in client-server type systems is that it requires
     clients to have certificates, which can be a deployment problem.
"fixed": |-
  A simple approach is to have all users have CERTIFICATES [PKIX] which they then use to authenticate in some protocol-specific way, as in [TLS] or [S/MIME].  A certificate is a signed credential binding an entity's identity to its public key.  The signer of a certificate is a CERTIFICATE AUTHORITY (CA), whose certificate may itself be signed by some superior CA.  In order for this system to work, trust in one or more CAs must be established in an out-of-band fashion.  Such CAs are referred to as TRUSTED ROOTS or ROOT CAS.  The primary obstacle to this approach in client-server type systems is that it requires clients to have certificates, which can be a deployment problem.
"ko": |-
  간단한 접근 방식은 모든 사용자가 인증서 [PKIX]를 갖고 이를 사용하여 [TLS] 또는 [S/MIME]과 같은 프로토콜별 방식으로 인증하는 것입니다. 인증서는 엔터티의 신원을 공개 키에 바인딩하는 서명된 자격 증명입니다. 인증서 서명자는 CA(인증 기관)이며, 이 인증서 자체는 일부 상위 CA에서 서명할 수 있습니다. 이 시스템이 작동하려면 대역 외 방식으로 하나 이상의 CA에 대한 신뢰를 구축해야 합니다. 이러한 CA를 TRUSTED ROOTS 또는 ROOT CAS라고 합니다. 클라이언트-서버 유형 시스템에서 이 접근 방식의 주요 장애물은 클라이언트에 인증서가 있어야 한다는 점이며, 이는 배포 문제가 될 수 있습니다.
