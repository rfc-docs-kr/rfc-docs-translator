"hash": |-
  64cda57f225c4640bb6a5cb225e3362e478ad8c8e6403815f90fbd617436122f
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     -  It would be technically possible to use extensions to change major
        aspects of the design of TLS; for example, the design of cipher
        suite negotiation.  This is not recommended; it would be more
        appropriate to define a new version of TLS, particularly since the
        TLS handshake algorithms have specific protection against version
        rollback attacks based on the version number.  The possibility of
        version rollback should be a significant consideration in any
        major design change.
"fixed": |-
  -  It would be technically possible to use extensions to change major aspects of the design of TLS; for example, the design of cipher suite negotiation.  This is not recommended; it would be more appropriate to define a new version of TLS, particularly since the TLS handshake algorithms have specific protection against version rollback attacks based on the version number.  The possibility of version rollback should be a significant consideration in any major design change.
"ko": |-
  - TLS 설계의 주요 측면을 변경하기 위해 확장을 사용하는 것이 기술적으로 가능합니다. 예를 들어 암호 제품군 협상 설계 등이 있습니다. 이는 권장되지 않습니다. 특히 TLS 핸드셰이크 알고리즘에는 버전 번호를 기반으로 버전 롤백 공격에 대한 특정 보호 기능이 있으므로 새 버전의 TLS를 정의하는 것이 더 적절할 것입니다. 버전 롤백 가능성은 주요 설계 변경 시 중요한 고려 사항입니다.
