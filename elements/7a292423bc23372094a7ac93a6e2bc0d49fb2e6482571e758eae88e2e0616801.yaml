"hash": |-
  7a292423bc23372094a7ac93a6e2bc0d49fb2e6482571e758eae88e2e0616801
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     If an application is unable to meet the uniqueness requirement on
     nonce generation, then it MUST use a zero-length nonce.  Randomized
     or stateful algorithms, which are defined below, are suitable for use
     with such applications.  Otherwise, an application SHOULD use nonces
     with a length of twelve octets.  Since algorithms are encouraged to
     support that length, applications should use that length to aid
     interoperability.
"fixed": |-
  If an application is unable to meet the uniqueness requirement on nonce generation, then it MUST use a zero-length nonce.  Randomized or stateful algorithms, which are defined below, are suitable for use with such applications.  Otherwise, an application SHOULD use nonces with a length of twelve octets.  Since algorithms are encouraged to support that length, applications should use that length to aid interoperability.
"ko": |-
  애플리케이션이 Nonce 생성에 대한 고유성 요구 사항을 충족할 수 없는 경우 길이가 0인 Nonce를 사용해야 합니다. 아래에 정의된 무작위 또는 상태 저장 알고리즘은 이러한 애플리케이션에 사용하기에 적합합니다. 그렇지 않은 경우 애플리케이션은 12옥텟 길이의 nonce를 사용해야 합니다. 알고리즘은 해당 길이를 지원하도록 권장되므로 애플리케이션은 상호 운용성을 돕기 위해 해당 길이를 사용해야 합니다.
