"hash": |-
  1913f3994e97b420b575b2f1aadc02f0232760c5cec1da4c50eed7b19dd614b1
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     RTSP proxies may have to multiplex several RTSP sessions from their
     clients towards RTSP servers.  This requires that RTSP requests from
     multiple clients be multiplexed onto a common connection for requests
     outgoing to an RTSP server, and, on the way back, the responses be
     demultiplexed from the server to per-client responses.  On the
     protocol level, this requires that request and response messages be
     handled in both directions, requiring that there be a mechanism to
     correlate which request/response pair exchanged between proxy and
     server is mapped to which client (or client request).
"fixed": |-
  RTSP proxies may have to multiplex several RTSP sessions from their clients towards RTSP servers.  This requires that RTSP requests from multiple clients be multiplexed onto a common connection for requests outgoing to an RTSP server, and, on the way back, the responses be demultiplexed from the server to per-client responses.  On the protocol level, this requires that request and response messages be handled in both directions, requiring that there be a mechanism to correlate which request/response pair exchanged between proxy and server is mapped to which client (or client request).
"ko": |-
  RTSP 프록시는 클라이언트에서 RTSP 서버로 여러 RTSP 세션을 다중화해야 할 수도 있습니다. 이를 위해서는 여러 클라이언트의 RTSP 요청이 RTSP 서버로 나가는 요청에 대한 공통 연결로 다중화되고, 돌아오는 길에 응답이 서버에서 클라이언트별 응답으로 역다중화되어야 합니다. 프로토콜 수준에서 이를 위해서는 요청 및 응답 메시지가 양방향으로 처리되어야 하며, 프록시와 서버 간에 교환되는 요청/응답 쌍이 어느 클라이언트(또는 클라이언트 요청)에 매핑되는지를 연관시키는 메커니즘이 필요합니다.
