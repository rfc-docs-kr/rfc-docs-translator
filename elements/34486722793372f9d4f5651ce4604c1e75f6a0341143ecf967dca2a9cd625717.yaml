"hash": |-
  34486722793372f9d4f5651ce4604c1e75f6a0341143ecf967dca2a9cd625717
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The use of a constant as the IV supports a strong integrity check on
     the key data during the period that it is wrapped.  If unwrapping
     produces A[0] = A6A6A6A6A6A6A6A6, then the chance that the key data
     is corrupt is 2^-64.  If unwrapping produces A[0] any other value,
     then the unwrap must return an error and not return any key data.
"fixed": |-
  The use of a constant as the IV supports a strong integrity check on the key data during the period that it is wrapped.  If unwrapping produces A[0] = A6A6A6A6A6A6A6A6, then the chance that the key data is corrupt is 2^-64.  If unwrapping produces A[0] any other value, then the unwrap must return an error and not return any key data.
"ko": |-
  IV로 상수를 사용하면 래핑된 기간 동안 주요 데이터에 대한 강력한 무결성 검사가 지원됩니다. 래핑 해제로 인해 A[0] = A6A6A6A6A6A6A6A6이 생성되면 키 데이터가 손상될 확률은 2^-64입니다. 래핑 해제가 A[0] 다른 값을 생성하는 경우 래핑 해제는 오류를 반환해야 하며 키 데이터를 반환하지 않아야 합니다.
