"hash": |-
  ceb72460e61f4763ca5006d4284f016418ab1db2d2b38dc8ee44a6b130bee93a
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     These assumptions are prohibitive, especially in many cases of
     spoofing attacks.  For spoofing, the primary issue is whether packets
     are coming from the same party the server can reach.  Only the IP
     header is fundamentally in question, so securing the entire packet
     (1) is computational overkill.  It is sufficient to authenticate the
     other party as "a party you have exchanged packets with", rather than
     establishing their trusted identity ("Bill" vs. "Bob") as in (2).
     Finally, many cookie systems use clear-text (unencrypted), fixed
     cookie values, providing reasonable (1 in 2^{cookie-size}) protection
     against off-path third-party spoof attacks, but not addressing on-
     path attacks at all.  Such potential solutions are discussed in the
     Better Than Nothing Security (BTNS) documents [5][45][46].  Note also
     that NULL Encryption in IPsec applies a variant of this cookie, where
     the SPI is the cookie, and no further encryption is applied [17].
"fixed": |-
  These assumptions are prohibitive, especially in many cases of spoofing attacks.  For spoofing, the primary issue is whether packets are coming from the same party the server can reach.  Only the IP header is fundamentally in question, so securing the entire packet (1) is computational overkill.  It is sufficient to authenticate the other party as "a party you have exchanged packets with", rather than establishing their trusted identity ("Bill" vs. "Bob") as in (2). Finally, many cookie systems use clear-text (unencrypted), fixed cookie values, providing reasonable (1 in 2^{cookie-size}) protection against off-path third-party spoof attacks, but not addressing on- path attacks at all.  Such potential solutions are discussed in the Better Than Nothing Security (BTNS) documents [5][45][46].  Note also that NULL Encryption in IPsec applies a variant of this cookie, where the SPI is the cookie, and no further encryption is applied [17].
"ko": |-
  이러한 가정은 특히 스푸핑 공격의 많은 경우에 금지됩니다. 스푸핑의 경우 가장 중요한 문제는 패킷이 서버가 도달할 수 있는 동일한 당사자로부터 오는지 여부입니다. 근본적으로 IP 헤더만 문제가 되므로 전체 패킷(1)을 보호하는 것은 과도한 계산입니다. (2)에서와 같이 신뢰할 수 있는 ID("Bill" 대 "Bob")를 설정하는 대신 "패킷을 교환한 당사자"로 상대방을 인증하는 것으로 충분합니다. 마지막으로, 많은 쿠키 시스템은 일반 텍스트(암호화되지 않음), 고정 쿠키 값을 사용하여 경로를 벗어난 제3자 스푸핑 공격에 대해 합리적인(1/2^{cookie-size}) 보호를 제공하지만 경로상의 공격은 전혀 처리하지 않습니다. . 이러한 잠재적인 솔루션은 BTNS(Better Than Nothing Security) 문서[5][45][46]에서 논의됩니다. 또한 IPsec의 NULL 암호화는 이 쿠키의 변형을 적용합니다. 여기서 SPI는 쿠키이며 추가 암호화는 적용되지 않습니다[17].
