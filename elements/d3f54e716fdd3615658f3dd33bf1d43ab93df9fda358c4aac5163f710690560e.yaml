"hash": |-
  d3f54e716fdd3615658f3dd33bf1d43ab93df9fda358c4aac5163f710690560e
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     After sending a GOAWAY frame, the sender can discard frames for
     streams initiated by the receiver with identifiers higher than the
     identified last stream.  However, any frames that alter connection
     state cannot be completely ignored.  For instance, HEADERS,
     PUSH_PROMISE, and CONTINUATION frames MUST be minimally processed to
     ensure that the state maintained for field section compression is
     consistent (see Section 4.3); similarly, DATA frames MUST be counted
     toward the connection flow-control window.  Failure to process these
     frames can cause flow control or field section compression state to
     become unsynchronized.
"fixed": |-
  After sending a GOAWAY frame, the sender can discard frames for streams initiated by the receiver with identifiers higher than the identified last stream.  However, any frames that alter connection state cannot be completely ignored.  For instance, HEADERS, PUSH_PROMISE, and CONTINUATION frames MUST be minimally processed to ensure that the state maintained for field section compression is consistent (see Section 4.3); similarly, DATA frames MUST be counted toward the connection flow-control window.  Failure to process these frames can cause flow control or field section compression state to become unsynchronized.
"ko": |-
  GOAWAY 프레임을 보낸 후 송신자는 식별된 마지막 스트림보다 높은 식별자를 사용하여 수신자가 시작한 스트림에 대한 프레임을 삭제할 수 있습니다. 그러나 연결 상태를 변경하는 프레임을 완전히 무시할 수는 없습니다. 예를 들어 HEADERS, PUSH_PROMISE 및 CONTINUATION 프레임은 필드 섹션 압축을 위해 유지되는 상태가 일관되도록 보장하기 위해 최소한으로 처리되어야 합니다(섹션 4.3 참조). 마찬가지로 DATA 프레임은 연결 흐름 제어 창에 대해 계산되어야 합니다. 이러한 프레임을 처리하지 못하면 흐름 제어 또는 필드 섹션 압축 상태가 비동기화될 수 있습니다.
