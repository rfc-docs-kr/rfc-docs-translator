"hash": |-
  f426d1a970f7acaea7edab4d86558a16cafa8458852834f18b3d000f44344ded
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Layering on the abstract flow above, this document standardizes
     enhanced security options for OAuth 2.0 utilizing client-certificate-
     based mutual TLS.  Section 2 provides options for authenticating the
     request in Step (A).  Step (C) is supported with semantics to express
     the binding of the token to the client certificate for both local and
     remote processing in Sections 3.1 and 3.2, respectively.  This
     ensures that, as described in Section 3, protected resource access in
     Step (B) is only possible by the legitimate client using a
     certificate-bound token and holding the private key corresponding to
     the certificate.
"fixed": |-
  Layering on the abstract flow above, this document standardizes enhanced security options for OAuth 2.0 utilizing client-certificate- based mutual TLS.  Section 2 provides options for authenticating the request in Step (A).  Step (C) is supported with semantics to express the binding of the token to the client certificate for both local and remote processing in Sections 3.1 and 3.2, respectively.  This ensures that, as described in Section 3, protected resource access in Step (B) is only possible by the legitimate client using a certificate-bound token and holding the private key corresponding to the certificate.
"ko": |-
  위의 추상 흐름을 기반으로 하는 이 문서는 클라이언트 인증서 기반 상호 TLS를 활용하여 OAuth 2.0에 대한 향상된 보안 옵션을 표준화합니다. 섹션 2에서는 (A)단계의 요청을 인증하기 위한 옵션을 제공합니다. 단계 (C)는 각각 섹션 3.1 및 3.2에서 로컬 및 원격 처리 모두를 위해 토큰과 클라이언트 인증서의 바인딩을 표현하는 의미론으로 지원됩니다. 이는 섹션 3에 설명된 대로 단계 (B)의 보호된 리소스 액세스가 인증서 바인딩 토큰을 사용하고 인증서에 해당하는 개인 키를 보유하는 합법적인 클라이언트에 의해서만 가능함을 보장합니다.
