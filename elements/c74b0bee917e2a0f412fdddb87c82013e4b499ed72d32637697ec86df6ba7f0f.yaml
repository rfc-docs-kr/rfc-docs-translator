"hash": |-
  c74b0bee917e2a0f412fdddb87c82013e4b499ed72d32637697ec86df6ba7f0f
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     *  originator is a CHOICE with three alternatives specifying the
        sender's key agreement public key.  Implementations MUST support
        all three alternatives for specifying the sender's public key.
        The sender uses their own private key and the recipient's public
        key to generate a pairwise key-encryption key.  A KDF is used to
        mix the PSK and the pairwise key-encryption key to produce a
        second key-encryption key.  The OriginatorIdentifierOrKey type is
        described in Section 6.2.2 of [RFC5652].
"fixed": |-
  *  originator is a CHOICE with three alternatives specifying the sender's key agreement public key.  Implementations MUST support all three alternatives for specifying the sender's public key. The sender uses their own private key and the recipient's public key to generate a pairwise key-encryption key.  A KDF is used to mix the PSK and the pairwise key-encryption key to produce a second key-encryption key.  The OriginatorIdentifierOrKey type is described in Section 6.2.2 of [RFC5652].
"ko": |-
  * 발신자는 보낸 사람의 키 계약 공개 키를 지정하는 세 가지 대안이 있는 CHOICE입니다.  구현은 발신자의 공개 키를 지정하기 위한 세 가지 대안을 모두 지원해야 합니다. 발신자는 자신의 개인 키와 수신자의 공개 키를 사용하여 쌍별 키 암호화 키를 생성합니다.  KDF는 PSK와 쌍별 키 암호화 키를 혼합하여 두 번째 키 암호화 키를 생성하는 데 사용됩니다.  OriginatorIdentifierOrKey 유형은 [RFC5652]의 섹션 6.2.2에 설명되어 있습니다.
