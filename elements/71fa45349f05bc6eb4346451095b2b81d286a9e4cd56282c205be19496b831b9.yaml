"hash": |-
  71fa45349f05bc6eb4346451095b2b81d286a9e4cd56282c205be19496b831b9
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     A server SHOULD be prepared to receive requests on any IP address,
     port and transport combination that can be the result of a DNS lookup
     on a SIP or SIPS URI [4] that is handed out for the purposes of
     communicating with that server.  In this context, "handing out"
     includes placing a URI in a Contact header field in a REGISTER
     request or a redirect response, or in a Record-Route header field in
     a request or response.  A URI can also be "handed out" by placing it
     on a web page or business card.  It is also RECOMMENDED that a server
     listen for requests on the default SIP ports (5060 for TCP and UDP,
     5061 for TLS over TCP) on all public interfaces.  The typical
     exception would be private networks, or when multiple server
     instances are running on the same host.  For any port and interface
     that a server listens on for UDP, it MUST listen on that same port
     and interface for TCP.  This is because a message may need to be sent
     using TCP, rather than UDP, if it is too large.  As a result, the
     converse is not true.  A server need not listen for UDP on a
     particular address and port just because it is listening on that same
     address and port for TCP.  There may, of course, be other reasons why
     a server needs to listen for UDP on a particular address and port.
"fixed": |-
  A server SHOULD be prepared to receive requests on any IP address, port and transport combination that can be the result of a DNS lookup on a SIP or SIPS URI [4] that is handed out for the purposes of communicating with that server.  In this context, "handing out" includes placing a URI in a Contact header field in a REGISTER request or a redirect response, or in a Record-Route header field in a request or response.  A URI can also be "handed out" by placing it on a web page or business card.  It is also RECOMMENDED that a server listen for requests on the default SIP ports (5060 for TCP and UDP, 5061 for TLS over TCP) on all public interfaces.  The typical exception would be private networks, or when multiple server instances are running on the same host.  For any port and interface that a server listens on for UDP, it MUST listen on that same port and interface for TCP.  This is because a message may need to be sent using TCP, rather than UDP, if it is too large.  As a result, the converse is not true.  A server need not listen for UDP on a particular address and port just because it is listening on that same address and port for TCP.  There may, of course, be other reasons why a server needs to listen for UDP on a particular address and port.
"ko": |-
  서버는 해당 서버와 통신할 목적으로 전달되는 SIP 또는 SIPS URI[4]에 대한 DNS 조회의 결과일 수 있는 모든 IP 주소, 포트 및 전송 조합에 대한 요청을 수신할 준비를 해야 합니다. 이 맥락에서 "전달"에는 REGISTER 요청이나 리디렉션 응답의 연락처 헤더 필드 또는 요청이나 응답의 Record-Route 헤더 필드에 URI를 배치하는 것이 포함됩니다. URI는 웹페이지나 명함에 배치하여 "전달"할 수도 있습니다. 또한 서버가 모든 공용 인터페이스의 기본 SIP 포트(TCP 및 UDP의 경우 5060, TLS over TCP의 경우 5061)에서 요청을 수신하는 것이 좋습니다. 일반적인 예외는 개인 네트워크이거나 여러 서버 인스턴스가 동일한 호스트에서 실행되는 경우입니다. 서버가 UDP를 수신하는 모든 포트와 인터페이스의 경우, TCP도 동일한 포트와 인터페이스에서 수신해야 합니다. 메시지가 너무 큰 경우 UDP가 아닌 TCP를 사용하여 메시지를 보내야 할 수도 있기 때문입니다. 결과적으로 그 반대는 사실이 아닙니다. 서버는 동일한 주소와 포트에서 TCP를 수신하고 있다고 해서 특정 주소와 포트에서 UDP를 수신할 필요가 없습니다. 물론 서버가 특정 주소와 포트에서 UDP를 수신해야 하는 다른 이유가 있을 수 있습니다.
