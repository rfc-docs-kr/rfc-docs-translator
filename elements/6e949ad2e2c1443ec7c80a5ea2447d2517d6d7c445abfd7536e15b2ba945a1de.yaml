"hash": |-
  6e949ad2e2c1443ec7c80a5ea2447d2517d6d7c445abfd7536e15b2ba945a1de
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     By enabling pass-through, authenticators can support any method
     implemented on the peer and server, not just locally implemented
     methods.  This allows the authenticator to avoid having to implement
     the EAP methods configured for use by peers.  In fact, since a
     pass-through authenticator need not implement any EAP methods at all,
     it cannot be assumed to support any EAP method-specific code.  As
     noted in [RFC3748] Section 2.3:
"fixed": |-
  By enabling pass-through, authenticators can support any method implemented on the peer and server, not just locally implemented methods.  This allows the authenticator to avoid having to implement the EAP methods configured for use by peers.  In fact, since a pass-through authenticator need not implement any EAP methods at all, it cannot be assumed to support any EAP method-specific code.  As noted in [RFC3748] Section 2.3:
"ko": |-
  통과를 활성화하면 인증자는 로컬로 구현된 메서드뿐만 아니라 피어와 서버에 구현된 모든 메서드를 지원할 수 있습니다. 이를 통해 인증자는 피어가 사용하도록 구성된 EAP 방법을 구현하지 않아도 됩니다. 실제로 통과 인증자는 EAP 방법을 전혀 구현할 필요가 없으므로 EAP 방법별 코드를 지원한다고 가정할 수 없습니다. [RFC3748] 섹션 2.3에 명시된 대로:
