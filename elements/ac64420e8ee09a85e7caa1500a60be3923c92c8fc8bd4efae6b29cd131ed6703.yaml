"hash": |-
  ac64420e8ee09a85e7caa1500a60be3923c92c8fc8bd4efae6b29cd131ed6703
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     -  Network attackers who take advantage of client retry behavior to
        arrange for the server to receive multiple copies of an
        application message.  This threat already exists to some extent
        because clients that value robustness respond to network errors by
        attempting to retry requests.  However, 0-RTT adds an additional
        dimension for any server system which does not maintain globally
        consistent server state.  Specifically, if a server system has
        multiple zones where tickets from zone A will not be accepted in
        zone B, then an attacker can duplicate a ClientHello and early
        data intended for A to both A and B.  At A, the data will be
        accepted in 0-RTT, but at B the server will reject 0-RTT data and
        instead force a full handshake.  If the attacker blocks the
        ServerHello from A, then the client will complete the handshake
        with B and probably retry the request, leading to duplication on
        the server system as a whole.
"fixed": |-
  -  Network attackers who take advantage of client retry behavior to arrange for the server to receive multiple copies of an application message.  This threat already exists to some extent because clients that value robustness respond to network errors by attempting to retry requests.  However, 0-RTT adds an additional dimension for any server system which does not maintain globally consistent server state.  Specifically, if a server system has multiple zones where tickets from zone A will not be accepted in zone B, then an attacker can duplicate a ClientHello and early data intended for A to both A and B.  At A, the data will be accepted in 0-RTT, but at B the server will reject 0-RTT data and instead force a full handshake.  If the attacker blocks the ServerHello from A, then the client will complete the handshake with B and probably retry the request, leading to duplication on the server system as a whole.
"ko": |-
  - 클라이언트 재시도 동작을 이용하여 서버가 응용 프로그램 메시지의 여러 복사본을 받도록 준비하는 네트워크 공격자. 견고성을 중시하는 클라이언트가 요청을 재시도하여 네트워크 오류에 응답하기 때문에 이 위협은 이미 어느 정도 존재합니다. 그러나 0-RTT는 전역적으로 일관된 서버 상태를 유지하지 않는 모든 서버 시스템에 추가적인 차원을 추가합니다. 특히 서버 시스템에 영역 A의 티켓이 영역 B에서 허용되지 않는 여러 영역이 있는 경우 공격자는 A와 B 모두에 ClientHello 및 초기 데이터를 복제할 수 있습니다. A에서 데이터는 다음에서 허용됩니다. 0-RTT, 그러나 B에서는 서버가 0-RTT 데이터를 거부하고 대신 전체 핸드셰이크를 강제합니다. 공격자가 A에서 ServerHello를 차단하면 클라이언트는 B와의 핸드셰이크를 완료하고 아마도 요청을 다시 시도하여 서버 시스템 전체에서 중복이 발생하게 됩니다.
