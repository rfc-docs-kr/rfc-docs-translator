"hash": |-
  f2089d593589803789db8ac9c351e5c21c0ab91db360d1f1f533d613914c15f5
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Good spoken user interfaces typically depend upon the ease with which
     the user can accomplish his or her task.  When making use of speaker
     identification or verification technologies, user interface
     improvements often come from the combination of the different
     technologies: simultaneous identity claim and verification (on the
     same utterance), simultaneous knowledge and voice verification (using
     ASR and verification simultaneously).  Using ASR and verification on
     the same utterance is in fact the only way to support rolling or
     dynamically-generated challenge phrases (e.g., "say 51723").  The
     SPEECHSC framework MUST support such parallel service
     implementations.
"fixed": |-
  Good spoken user interfaces typically depend upon the ease with which the user can accomplish his or her task.  When making use of speaker identification or verification technologies, user interface improvements often come from the combination of the different technologies: simultaneous identity claim and verification (on the same utterance), simultaneous knowledge and voice verification (using ASR and verification simultaneously).  Using ASR and verification on the same utterance is in fact the only way to support rolling or dynamically-generated challenge phrases (e.g., "say 51723").  The SPEECHSC framework MUST support such parallel service implementations.
"ko": |-
  좋은 음성 사용자 인터페이스는 일반적으로 사용자가 작업을 얼마나 쉽게 수행할 수 있는지에 따라 달라집니다. 화자 식별 또는 검증 기술을 사용할 때 사용자 인터페이스 개선은 종종 다양한 기술의 조합에서 비롯됩니다. 동시 신원 주장 및 검증(동일한 발화에서), 동시 지식 및 음성 검증(ASR과 검증을 동시에 사용). 동일한 발화에서 ASR과 검증을 사용하는 것은 실제로 롤링 또는 동적으로 생성된 챌린지 문구(예: "51723이라고 말하세요")를 지원하는 유일한 방법입니다. SPEECHSC 프레임워크는 이러한 병렬 서비스 구현을 지원해야 합니다.
