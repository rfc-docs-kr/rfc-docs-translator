"hash": |-
  d0c3ead01d01f4b60d1485520260dbf5a40df10fb5980b88d1b52edcecb737d9
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The encryption algorithm employed to protect an ESP packet is
     specified by the SA via which the packet is transmitted/received.
     Because IP packets may arrive out of order, and not all packets may
     arrive (packet loss), each packet must carry any data required to
     allow the receiver to establish cryptographic synchronization for
     decryption.  This data may be carried explicitly in the payload
     field, e.g., as an IV (as described above), or the data may be
     derived from the plaintext portions of the (outer IP or ESP) packet
     header.  (Note that if plaintext header information is used to derive
     an IV, that information may become security critical and thus the
     protection boundary associated with the encryption process may grow.
     For example, if one were to use the ESP Sequence Number to derive an
     IV, the Sequence Number generation logic (hardware or software) would
     have to be evaluated as part of the encryption algorithm
     implementation.  In the case of FIPS 140-2 [NIST01], this could
     significantly extend the scope of a cryptographic module evaluation.)
     Because ESP makes provision for padding of the plaintext, encryption
     algorithms employed with ESP may exhibit either block or stream mode
     characteristics.  Note that because encryption (confidentiality) MAY
     be an optional service (e.g., integrity-only ESP), this algorithm MAY
     be "NULL" [Ken-Arch].
"fixed": |-
  The encryption algorithm employed to protect an ESP packet is specified by the SA via which the packet is transmitted/received. Because IP packets may arrive out of order, and not all packets may arrive (packet loss), each packet must carry any data required to allow the receiver to establish cryptographic synchronization for decryption.  This data may be carried explicitly in the payload field, e.g., as an IV (as described above), or the data may be derived from the plaintext portions of the (outer IP or ESP) packet header.  (Note that if plaintext header information is used to derive an IV, that information may become security critical and thus the protection boundary associated with the encryption process may grow. For example, if one were to use the ESP Sequence Number to derive an IV, the Sequence Number generation logic (hardware or software) would have to be evaluated as part of the encryption algorithm implementation.  In the case of FIPS 140-2 [NIST01], this could significantly extend the scope of a cryptographic module evaluation.) Because ESP makes provision for padding of the plaintext, encryption algorithms employed with ESP may exhibit either block or stream mode characteristics.  Note that because encryption (confidentiality) MAY be an optional service (e.g., integrity-only ESP), this algorithm MAY be "NULL" [Ken-Arch].
"ko": |-
  ESP 패킷을 보호하기 위해 사용되는 암호화 알고리즘은 패킷이 전송/수신되는 SA에 의해 지정됩니다. IP 패킷이 순서 없이 도착할 수 있고 모든 패킷이 도착하지 않을 수 있으므로(패킷 손실) 각 패킷은 수신자가 암호 해독을 위한 암호화 동기화를 설정하는 데 필요한 모든 데이터를 전달해야 합니다.  이 데이터는 페이로드 필드에 명시적으로 전달될 수 있습니다(예: IV(위에서 설명)). 또는 데이터가 (외부 IP 또는 ESP) 패킷 헤더의 일반 텍스트 부분에서 파생될 수 있습니다.  (일반 텍스트 헤더 정보를 사용하여 IV를 파생하는 경우 해당 정보는 보안에 중요할 수 있으므로 암호화 프로세스와 관련된 보호 경계가 커질 수 있습니다. 예를 들어 ESP 시퀀스 번호를 사용하여 IV를 파생하는 경우 FIPS 140-2 [NIST01]의 경우 시퀀스 번호 생성 논리(하드웨어 또는 소프트웨어)를 암호화 알고리즘 구현의 일부로 평가해야 합니다. 이는 암호화 모듈 평가 범위를 크게 확장할 수 있기 때문입니다. 평문 패딩을 제공하는 경우 ESP에 사용되는 암호화 알고리즘은 블록 모드 또는 스트림 모드 특성을 나타낼 수 있습니다.  암호화(기밀성)는 선택적 서비스(예: 무결성 전용 ESP)일 수 있으므로 이 알고리즘은 "NULL" [Ken-Arch]일 수 있습니다.
