"hash": |-
  5a58c2d4bcd3fe9769eec1f8672440766167c381871d8052dc23d26f38b46ffd
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     The AEAD approach enables applications that need cryptographic
     security services to more easily adopt those services.  It benefits
     the application designer by allowing them to focus on important
     issues such as security services, canonicalization, and data
     marshaling, and relieving them of the need to design crypto
     mechanisms that meet their security goals.  Importantly, the security
     of an AEAD algorithm can be analyzed independent from its use in a
     particular application.  This property frees the user of the AEAD of
     the need to consider security aspects such as the relative order of
     authentication and encryption and the security of the particular
     combination of cipher and MAC, such as the potential loss of
     confidentiality through the MAC.  The application designer that uses
     the AEAD interface need not select a particular AEAD algorithm during
     the design stage.  Additionally, the interface to the AEAD is
     relatively simple, since it requires only a single key as input and
     requires only a single identifier to indicate the algorithm in use in
     a particular case.
"fixed": |-
  The AEAD approach enables applications that need cryptographic security services to more easily adopt those services.  It benefits the application designer by allowing them to focus on important issues such as security services, canonicalization, and data marshaling, and relieving them of the need to design crypto mechanisms that meet their security goals.  Importantly, the security of an AEAD algorithm can be analyzed independent from its use in a particular application.  This property frees the user of the AEAD of the need to consider security aspects such as the relative order of authentication and encryption and the security of the particular combination of cipher and MAC, such as the potential loss of confidentiality through the MAC.  The application designer that uses the AEAD interface need not select a particular AEAD algorithm during the design stage.  Additionally, the interface to the AEAD is relatively simple, since it requires only a single key as input and requires only a single identifier to indicate the algorithm in use in a particular case.
"ko": |-
  AEAD 접근 방식을 사용하면 암호화 보안 서비스가 필요한 애플리케이션이 해당 서비스를 보다 쉽게 ​​채택할 수 있습니다. 이는 애플리케이션 설계자가 보안 서비스, 정규화, 데이터 마샬링과 같은 중요한 문제에 집중할 수 있게 하고 보안 목표를 충족하는 암호화 메커니즘을 설계할 필요성을 덜어줌으로써 이점을 제공합니다. 중요한 점은 AEAD 알고리즘의 보안을 특정 애플리케이션에서의 사용과 별도로 분석할 수 있다는 것입니다. 이 속성을 통해 AEAD 사용자는 인증 및 암호화의 상대적 순서, 암호와 MAC의 특정 조합 보안(MAC를 통한 잠재적인 기밀 손실 등)과 같은 보안 측면을 고려할 필요가 없습니다. AEAD 인터페이스를 사용하는 애플리케이션 설계자는 설계 단계에서 특정 AEAD 알고리즘을 선택할 필요가 없습니다. 또한 AEAD에 대한 인터페이스는 입력으로 단일 키만 필요하고 특정 경우에 사용 중인 알고리즘을 나타내는 단일 식별자만 필요하므로 비교적 간단합니다.
