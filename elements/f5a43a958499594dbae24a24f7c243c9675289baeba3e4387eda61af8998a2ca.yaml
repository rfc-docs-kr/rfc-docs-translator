"hash": |-
  f5a43a958499594dbae24a24f7c243c9675289baeba3e4387eda61af8998a2ca
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     When transmitting over DTLS, PPSPP can obtain the PMTU estimate
     maintained by the IP layer to determine how much payload can be put
     in a single datagram without fragmentation ([RFC6347],
     Section 4.1.1.1).  If PMTU changes and the chunk size becomes too
     large to fit into a single datagram, PPSPP can choose to allow
     fragmentation by clearing the Don't Fragment (DF) bit.
     Alternatively, the content publisher can decide to use smaller chunks
     and transmit multiple in the same datagram when the MTU allows.
"fixed": |-
  When transmitting over DTLS, PPSPP can obtain the PMTU estimate maintained by the IP layer to determine how much payload can be put in a single datagram without fragmentation ([RFC6347], Section 4.1.1.1).  If PMTU changes and the chunk size becomes too large to fit into a single datagram, PPSPP can choose to allow fragmentation by clearing the Don't Fragment (DF) bit. Alternatively, the content publisher can decide to use smaller chunks and transmit multiple in the same datagram when the MTU allows.
"ko": |-
  DTLS를 통해 전송할 때 PPSPP는 조각화 없이 단일 데이터그램에 얼마나 많은 페이로드를 넣을 수 있는지 결정하기 위해 IP 계층에서 유지 관리하는 PMTU 추정치를 얻을 수 있습니다([RFC6347], 섹션 4.1.1.1). PMTU가 변경되고 청크 크기가 너무 커서 단일 데이터그램에 맞지 않는 경우 PPSPP는 DF(조각화 안 함) 비트를 지워 조각화를 허용하도록 선택할 수 있습니다. 또는 콘텐츠 게시자는 MTU가 허용하는 경우 더 작은 청크를 사용하고 동일한 데이터그램으로 여러 개를 전송하기로 결정할 수 있습니다.
