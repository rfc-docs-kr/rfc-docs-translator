"hash": |-
  f64567e2caf356a116c1fd071144da86790ea52164c7fea702650d419f2849c8
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     One way to deal with this problem is to deliberately delay emitting
     segments for one MSL after recovery from a reboot -- this is the
     "quiet time" specification.  Hosts that prefer to avoid waiting and
     are willing to risk possible confusion of old and new packets at a
     given destination may choose not to wait for the "quiet time".
     Implementers may provide TCP users with the ability to select on a
     connection-by-connection basis whether to wait after a reboot, or may
     informally implement the "quiet time" for all connections.
     Obviously, even where a user selects to "wait", this is not necessary
     after the host has been "up" for at least MSL seconds.
"fixed": |-
  One way to deal with this problem is to deliberately delay emitting segments for one MSL after recovery from a reboot -- this is the "quiet time" specification.  Hosts that prefer to avoid waiting and are willing to risk possible confusion of old and new packets at a given destination may choose not to wait for the "quiet time". Implementers may provide TCP users with the ability to select on a connection-by-connection basis whether to wait after a reboot, or may informally implement the "quiet time" for all connections. Obviously, even where a user selects to "wait", this is not necessary after the host has been "up" for at least MSL seconds.
"ko": |-
  이 문제를 해결하는 한 가지 방법은 재부팅 후 복구 후 하나의 MSL에 대한 세그먼트 방출을 의도적으로 지연하는 것입니다. 이것이 "자동 시간" 사양입니다. 기다리는 것을 선호하고 주어진 목적지에서 이전 패킷과 새 패킷의 혼동 가능성을 감수하려는 호스트는 "조용한 시간"을 기다리지 않도록 선택할 수 있습니다. 구현자는 TCP 사용자에게 재부팅 후 대기할지 여부를 연결별로 선택할 수 있는 기능을 제공하거나 모든 연결에 대해 "자동 시간"을 비공식적으로 구현할 수 있습니다. 분명히 사용자가 "대기"를 선택하더라도 호스트가 최소 MSL 초 동안 "작동"된 후에는 이것이 필요하지 않습니다.
