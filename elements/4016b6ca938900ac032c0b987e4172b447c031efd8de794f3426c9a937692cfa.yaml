"hash": |-
  4016b6ca938900ac032c0b987e4172b447c031efd8de794f3426c9a937692cfa
"type": |-
  Content
"comment": !!null |-
  null
"original": |-
  /*
   * Description:
   *   This file implements the Secure Hash Algorithms SHA-224 and
   *   SHA-256 as defined in the U.S. National Institute of Standards
   *   and Technology Federal Information Processing Standards
   *   Publication (FIPS PUB) 180-3 published in October 2008
   *   and formerly defined in its predecessors, FIPS PUB 180-1
   *   and FIP PUB 180-2.
   *
   *   A combined document showing all algorithms is available at
   *       http://csrc.nist.gov/publications/fips/
   *              fips180-3/fips180-3_final.pdf
   *
   *   The SHA-224 and SHA-256 algorithms produce 224-bit and 256-bit
   *   message digests for a given data stream.  It should take about
   *   2**n steps to find a message with the same digest as a given
   *   message and 2**(n/2) to find any two messages with the same
   *   digest, when n is the digest size in bits.  Therefore, this
   *   algorithm can serve as a means of providing a
   *   "fingerprint" for a message.
   *
   * Portability Issues:
   *   SHA-224 and SHA-256 are defined in terms of 32-bit "words".
   *   This code uses <stdint.h> (included via "sha.h") to define 32-
   *   and 8-bit unsigned integer types.  If your C compiler does not
"fixed": |-
  /* * Description: *   This file implements the Secure Hash Algorithms SHA-224 and *   SHA-256 as defined in the U.S. National Institute of Standards *   and Technology Federal Information Processing Standards *   Publication (FIPS PUB) 180-3 published in October 2008 *   and formerly defined in its predecessors, FIPS PUB 180-1 *   and FIP PUB 180-2. * *   A combined document showing all algorithms is available at *       http://csrc.nist.gov/publications/fips/ *              fips180-3/fips180-3_final.pdf * *   The SHA-224 and SHA-256 algorithms produce 224-bit and 256-bit *   message digests for a given data stream.  It should take about *   2**n steps to find a message with the same digest as a given *   message and 2**(n/2) to find any two messages with the same *   digest, when n is the digest size in bits.  Therefore, this *   algorithm can serve as a means of providing a *   "fingerprint" for a message. * * Portability Issues: *   SHA-224 and SHA-256 are defined in terms of 32-bit "words". *   This code uses <stdint.h> (included via "sha.h") to define 32- *   and 8-bit unsigned integer types.  If your C compiler does not
"ko": |-
  /* * 설명: * 이 파일은 2008년 10월에 발행된 미국 국립 표준 연구소 * 및 기술 연방 정보 처리 표준 * 간행물(FIPS PUB) 180-3에 정의된 보안 해시 알고리즘 SHA-224 및 * SHA-256을 구현합니다. * 이전에는 이전 버전인 FIPS PUB 180-1 * 및 FIP PUB 180-2에서 정의되었습니다. * * 모든 알고리즘을 보여주는 통합 문서는 * http://csrc.nist.gov/publications/fips/ * fips180-3/fips180-3_final.pdf * * SHA-224 및 SHA-256 알고리즘은 224- 주어진 데이터 스트림에 대한 비트 및 256비트 * 메시지 다이제스트. 주어진 메시지와 동일한 다이제스트를 가진 메시지를 찾으려면 약 * 2**n 단계가 필요하며 * n이 다이제스트 크기일 때 동일한 다이제스트를 가진 두 개의 메시지를 찾는 데는 2**(n/2) 단계가 필요합니다. 비트. 따라서 이 * 알고리즘은 메시지에 * "지문"을 제공하는 수단으로 사용될 수 있습니다. * * 이식성 문제: * SHA-224 및 SHA-256은 32비트 "단어"로 정의됩니다. * 이 코드는 <stdint.h>("sha.h"를 통해 포함됨)를 사용하여 32- * 및 8비트 부호 없는 정수 유형을 정의합니다. C 컴파일러가 그렇지 않은 경우
