"hash": |-
  26175946cfb20b17d121908a590390980ec209f46f3462c1c088df0f85bea239
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     An on-path attacker could cause a spurious connection migration by
     copying and forwarding a packet with a spoofed address such that it
     arrives before the original packet.  The packet with the spoofed
     address will be seen to come from a migrating connection, and the
     original packet will be seen as a duplicate and dropped.  After a
     spurious migration, validation of the source address will fail
     because the entity at the source address does not have the necessary
     cryptographic keys to read or respond to the PATH_CHALLENGE frame
     that is sent to it even if it wanted to.
"fixed": |-
  An on-path attacker could cause a spurious connection migration by copying and forwarding a packet with a spoofed address such that it arrives before the original packet.  The packet with the spoofed address will be seen to come from a migrating connection, and the original packet will be seen as a duplicate and dropped.  After a spurious migration, validation of the source address will fail because the entity at the source address does not have the necessary cryptographic keys to read or respond to the PATH_CHALLENGE frame that is sent to it even if it wanted to.
"ko": |-
  경로 상의 공격자는 원래 패킷보다 먼저 도착하도록 스푸핑된 주소가 있는 패킷을 복사하고 전달하여 허위 연결 마이그레이션을 유발할 수 있습니다. 스푸핑된 주소가 포함된 패킷은 마이그레이션 연결에서 오는 것으로 표시되며 원본 패킷은 중복된 것으로 표시되어 삭제됩니다. 가짜 마이그레이션 후에는 소스 주소의 엔터티가 원하더라도 전송된 PATH_CHALLENGE 프레임을 읽거나 응답하는 데 필요한 암호화 키가 없기 때문에 소스 주소의 유효성 검사가 실패합니다.
