"hash": |-
  6fc9e4debb52529ff8ad76039e4fe9c18e5c0a6a53bba1ee05905b2d1b9e2086
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     When SSLv3 and TLS 1.0 were designed, the United States restricted
     the export of cryptographic software containing certain strong
     encryption algorithms.  A series of cipher suites were designed to
     operate at reduced key lengths in order to comply with those
     regulations.  Due to advances in computer performance, these
     algorithms are now unacceptably weak, and export restrictions have
     since been loosened.  TLS 1.1 implementations MUST NOT negotiate
     these cipher suites in TLS 1.1 mode.  However, for backward
     compatibility they may be offered in the ClientHello for use with TLS
"fixed": |-
  When SSLv3 and TLS 1.0 were designed, the United States restricted the export of cryptographic software containing certain strong encryption algorithms.  A series of cipher suites were designed to operate at reduced key lengths in order to comply with those regulations.  Due to advances in computer performance, these algorithms are now unacceptably weak, and export restrictions have since been loosened.  TLS 1.1 implementations MUST NOT negotiate these cipher suites in TLS 1.1 mode.  However, for backward compatibility they may be offered in the ClientHello for use with TLS
"ko": |-
  SSLv3 및 TLS 1.0이 설계되었을 때 미국은 특정 강력한 암호화 알고리즘이 포함된 암호화 소프트웨어의 수출을 제한했습니다. 일련의 암호 제품군은 해당 규정을 준수하기 위해 줄어든 키 길이로 작동하도록 설계되었습니다. 컴퓨터 성능의 발전으로 인해 이러한 알고리즘은 이제 용납할 수 없을 정도로 약해졌으며 수출 제한도 완화되었습니다. TLS 1.1 구현은 TLS 1.1 모드에서 이러한 암호 그룹을 협상하면 안 됩니다. 그러나 이전 버전과의 호환성을 위해 TLS와 함께 사용하기 위해 ClientHello에서 제공될 수 있습니다.
