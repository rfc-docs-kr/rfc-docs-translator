"hash": |-
  0e2a4abc0b19c21c62367266d629cf65fbcdfbd091361bd636d46492e54bd9cf
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     Implementations in Certificate Mode MUST support the mandatory-to-
     implement cipher suite TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 as
     specified in [RFC7251], [RFC5246], and [RFC4492].  Namely, the
     certificate includes a SubjectPublicKeyInfo that indicates an
     algorithm of id-ecPublicKey with namedCurves secp256r1 [RFC5480]; the
     public key format is uncompressed [RFC5480]; the hash algorithm is
     SHA-256; if included, the key usage extension indicates
     digitalSignature.  Certificates MUST be signed with ECDSA using
     secp256r1, and the signature MUST use SHA-256.  The key used MUST be
     ECDSA capable.  The curve secp256r1 MUST be supported [RFC4492]; this
     curve is equivalent to the NIST P-256 curve.  The hash algorithm is
     SHA-256.  Implementations MUST use the Supported Elliptic Curves and
     Supported Point Formats Extensions [RFC4492]; the uncompressed point
     format MUST be supported; [RFC6090] can be used as an implementation
     method.
"fixed": |-
  Implementations in Certificate Mode MUST support the mandatory-to- implement cipher suite TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 as specified in [RFC7251], [RFC5246], and [RFC4492].  Namely, the certificate includes a SubjectPublicKeyInfo that indicates an algorithm of id-ecPublicKey with namedCurves secp256r1 [RFC5480]; the public key format is uncompressed [RFC5480]; the hash algorithm is SHA-256; if included, the key usage extension indicates digitalSignature.  Certificates MUST be signed with ECDSA using secp256r1, and the signature MUST use SHA-256.  The key used MUST be ECDSA capable.  The curve secp256r1 MUST be supported [RFC4492]; this curve is equivalent to the NIST P-256 curve.  The hash algorithm is SHA-256.  Implementations MUST use the Supported Elliptic Curves and Supported Point Formats Extensions [RFC4492]; the uncompressed point format MUST be supported; [RFC6090] can be used as an implementation method.
"ko": |-
  인증서 모드의 구현은 [RFC7251], [RFC5246] 및 [RFC4492]에 지정된 대로 구현 필수 암호 제품군 TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8을 지원해야 합니다. 즉, 인증서에는 명명된 곡선 secp256r1 [RFC5480]을 사용하여 id-ecPublicKey의 알고리즘을 나타내는 SubjectPublicKeyInfo가 포함되어 있습니다. 공개 키 형식은 압축되지 않습니다 [RFC5480]. 해시 알고리즘은 SHA-256입니다. 포함된 경우 키 사용 확장은 digitalSignature를 나타냅니다. 인증서는 secp256r1을 사용하여 ECDSA로 서명해야 하며 서명은 SHA-256을 사용해야 합니다. 사용되는 키는 ECDSA를 지원해야 합니다. 곡선 secp256r1은 [RFC4492]를 지원해야 합니다. 이 곡선은 NIST P-256 곡선과 동일합니다. 해시 알고리즘은 SHA-256입니다. 구현은 지원되는 타원 곡선 및 지원되는 포인트 형식 확장 [RFC4492]을 사용해야 합니다. 압축되지 않은 포인트 형식이 지원되어야 합니다. 구현 방법으로는 [RFC6090]을 사용할 수 있다.
