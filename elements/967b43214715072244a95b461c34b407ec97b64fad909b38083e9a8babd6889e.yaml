"hash": |-
  967b43214715072244a95b461c34b407ec97b64fad909b38083e9a8babd6889e
"type": |-
  Content
"comment": !!null |-
  null
"original": |2-
     6)   The character set provides context for the client to
          print or store the returned user identification string.
          If the client does not recognize or implement the
          returned character set, it should handle the returned
          identification string as OCTET, but should in addition
          store or report the character set.  An OCTET string
          should be printed, stored or handled in hex notation
          (0-9a-f) in addition to any other representation the
          client implements - this provides a standard
          representation among differing implementations.
"fixed": |-
  6)   The character set provides context for the client to print or store the returned user identification string. If the client does not recognize or implement the returned character set, it should handle the returned identification string as OCTET, but should in addition store or report the character set.  An OCTET string should be printed, stored or handled in hex notation (0-9a-f) in addition to any other representation the client implements - this provides a standard representation among differing implementations.
"ko": |-
  6) 문자 세트는 클라이언트가 반환된 사용자 식별 문자열을 인쇄하거나 저장할 수 있는 컨텍스트를 제공합니다. 클라이언트가 반환된 문자 집합을 인식하거나 구현하지 못하는 경우 반환된 식별 문자열을 OCTET로 처리해야 하지만 추가로 문자 집합을 저장하거나 보고해야 합니다. OCTET 문자열은 클라이언트가 구현하는 다른 표현 외에도 16진수 표기법(0-9a-f)으로 인쇄, 저장 또는 처리되어야 합니다. 이는 다양한 구현 간의 표준 표현을 제공합니다.
